/home/ys/桌面/CompactDroid（复件）/dataset2/MoneyWallet.apk
Entry Points[com.oriondev.moneywallet.ui.activity.WalletSortActivity, com.oriondev.moneywallet.broadcast.BootBroadcastReceiver, com.oriondev.moneywallet.ui.activity.PlacePickerActivity, com.oriondev.moneywallet.service.BackendHandlerIntentService, com.oriondev.moneywallet.ui.activity.CurrencyListActivity, com.oriondev.moneywallet.service.UpgradeLegacyEditionIntentService, com.oriondev.moneywallet.ui.activity.CategoryPickerActivity, com.oriondev.moneywallet.ui.activity.MainActivity, com.oriondev.moneywallet.ui.activity.TutorialActivity, com.oriondev.moneywallet.ui.activity.CategorySortActivity, com.oriondev.moneywallet.ui.activity.LockActivity, com.oriondev.moneywallet.ui.activity.NewEditCategoryActivity, com.oriondev.moneywallet.ui.activity.NewEditTransferModelActivity, com.oriondev.moneywallet.ui.activity.ImportExportActivity, com.oriondev.moneywallet.ui.activity.IconListActivity, com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransactionActivity, com.oriondev.moneywallet.ui.activity.NewEditCurrencyActivity, com.oriondev.moneywallet.ui.activity.NewEditTransferActivity, com.oriondev.moneywallet.ui.activity.CurrencyConverterActivity, com.oriondev.moneywallet.service.BackupHandlerIntentService, com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransferActivity, com.oriondev.moneywallet.App, com.oriondev.moneywallet.ui.activity.WalletListActivity, com.oriondev.moneywallet.storage.database.DataContentProvider, com.oriondev.moneywallet.ui.activity.TransactionListActivity, com.oriondev.moneywallet.ui.activity.NewEditTransactionActivity, androidx.core.content.FileProvider, com.oriondev.moneywallet.ui.activity.PeriodDetailActivity, com.oriondev.moneywallet.ui.activity.NewEditBudgetActivity, com.oriondev.moneywallet.ui.activity.SearchActivity, com.oriondev.moneywallet.ui.activity.NewEditDebtActivity, com.oriondev.moneywallet.broadcast.NotificationBroadcastReceiver, com.oriondev.moneywallet.ui.activity.NewEditPlaceActivity, com.oriondev.moneywallet.ui.activity.MapActivity, com.oriondev.moneywallet.service.AttachmentHandlerIntentService, com.oriondev.moneywallet.ui.activity.BackendExplorerActivity, com.oriondev.moneywallet.ui.activity.DonationActivity, com.oriondev.moneywallet.broadcast.AutoBackupBroadcastReceiver, com.oriondev.moneywallet.ui.activity.NewEditTransactionModelActivity, com.oriondev.moneywallet.ui.activity.NewEditSavingActivity, com.oriondev.moneywallet.ui.activity.AboutActivity, com.oriondev.moneywallet.ui.activity.NewEditWalletActivity, com.oriondev.moneywallet.ui.activity.CalculatorActivity, com.oriondev.moneywallet.service.ImportExportIntentService, com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver, com.oriondev.moneywallet.service.openexchangerates.OpenExchangeRatesCurrencyRateDownloadIntentService, com.oriondev.moneywallet.ui.activity.NewEditEventActivity, com.oriondev.moneywallet.ui.activity.LauncherActivity, com.oriondev.moneywallet.service.RecurrenceHandlerIntentService, com.oriondev.moneywallet.ui.activity.BackupListActivity, com.oriondev.moneywallet.ui.activity.CalendarActivity, com.dropbox.core.android.AuthActivity, com.oriondev.moneywallet.ui.activity.NewEditPersonActivity, com.oriondev.moneywallet.storage.database.SyncContentProvider, com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver]
FllowDroidcallgraph size:10806
Soot started on Mon Jul 11 07:18:00 CST 2022
StaticCheck:<androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean viewIsOpaque(android.view.View)>i0 < 18
StaticCheck:<androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>$yysi0 < 19
StaticCheck:<androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>$yysi0 < 28
StaticCheck:<androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS>$yysi0 < 19
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>i0 < 25
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>$yysi0 < 26
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>i0 < 26
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>i0 < 25
StaticCheck:<androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>i0 < 16
StaticCheck:<androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)>$yysi0 < 28
StaticCheck:<androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>$yysi0 > 20
StaticCheck:<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)>$yysi0 < 24
StaticCheck:<androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)>i0 < 23
StaticCheck:<androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>i0 < 21
StaticCheck:<androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>i0 < 16
StaticCheck:<androidx.transition.TransitionUtils: boolean HAS_IS_ATTACHED_TO_WINDOW>$yysi0 < 19
StaticCheck:<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>i0 < 22
StaticCheck:<androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>$yysi0 < 24
StaticCheck:<androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)>$yysi0 < 24
StaticCheck:<androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>$yysi0 < 16
StaticCheck:<androidx.transition.ChangeTransform: boolean SUPPORTS_VIEW_REMOVAL_SUPPRESSION>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>i0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>i0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>$yysi1 < 21
StaticCheck:<androidx.core.graphics.BitmapCompat: boolean hasMipMap(android.graphics.Bitmap)>$yysi0 < 18
StaticCheck:<androidx.documentfile.provider.DocumentFile: boolean isDocumentUri(android.content.Context,android.net.Uri)>$yysi0 < 19
StaticCheck:<androidx.appcompat.widget.AppCompatPopupWindow: boolean COMPAT_OVERLAP_ANCHOR>$yysi0 >= 21
StaticCheck:<androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)>i1 < 19
StaticCheck:<androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>$yysi0 >= 15
StaticCheck:<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>$yysi0 < 23
StaticCheck:<androidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)>$yysi0 < 21
StaticCheck:<androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)>i0 < 23
StaticCheck:<androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST>$yysi0 == 18
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastN()>$yysi0 < 24
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastNMR1()>$yysi0 < 25
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastO()>$yysi0 < 26
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastOMR1()>$yysi0 < 27
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastP()>$yysi0 < 28
StaticCheck:<androidx.core.view.MarginLayoutParamsCompat: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)>$yysi0 < 17
StaticCheck:<androidx.print.PrintHelper: boolean PRINT_ACTIVITY_RESPECTS_ORIENTATION>$yysi0 < 20
StaticCheck:<androidx.print.PrintHelper: boolean systemSupportsPrint()>$yysi0 < 19
StaticCheck:<androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>$yysi0 < 19
StaticCheck:<androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>$yysi0 < 19
StaticCheck:<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(android.view.ScaleGestureDetector)>$yysi0 < 19
StaticCheck:<androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>$yysi0 < 20
StaticCheck:<androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)>$yysi0 < 20
StaticCheck:<com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<androidx.legacy.app.ActionBarDrawerToggle: boolean assumeMaterial(android.content.Context)>$yysi0 < 21
StaticCheck:<androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>i0 >= 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])>$yysi2 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])>$yysi4 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)>$yysi0 < 15
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)>$yysi0 < 18
StaticCheck:<androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isLayoutDirectionResolved(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)>$yysi0 < 17
StaticCheck:<androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>$yysi1 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>$yysi1 < 24
StaticCheck:<androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>$yysi1 < 21
StaticCheck:<androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>$yysi0 == 26
StaticCheck:<androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>i0 < 28
StaticCheck:<androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>i0 < 28
StaticCheck:<androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>i1 < 25
StaticCheck:<androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>i1 < 28
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>$yysi0 < 21
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>$yysi0 < 19
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>i1 < 23
StaticCheck:<androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE>$yysi0 < 27
Soot finished on Mon Jul 11 07:19:17 CST 2022
Soot has run for 1 min. 16 sec.
Found 2 additional DEX files. Now visiting them one by one.
Soot started on Mon Jul 11 07:19:17 CST 2022
StaticCheck:<com.oriondev.moneywallet.utils.Utils: boolean isAtLeastLollipop()>$yysi0 < 21
StaticCheck:<com.oriondev.moneywallet.ui.view.text.Utils: boolean isRtl(android.content.res.Resources)>$yysi0 < 17
Soot finished on Mon Jul 11 07:19:29 CST 2022
Soot has run for 0 min. 11 sec.
Soot started on Mon Jul 11 07:19:29 CST 2022
StaticCheck:$ys0 < 
StaticCheck:<com.philliphsu.bottomsheetpickers.Utils: boolean checkApiLevel(int)>< 
StaticCheck:<com.philliphsu.bottomsheetpickers.Utils: boolean isJellybeanOrLater()>$yysi0 < 16
StaticCheck:<com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP>$yysi0 < 21
StaticCheck:<com.google.android.gms.common.util.DeviceStateUtils: boolean isUserSetupComplete(android.content.Context)>$yysi0 < 23
StaticCheck:<com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE>$yysi0 < 21
StaticCheck:<com.google.android.gms.common.util.DeviceProperties: boolean isLowRamOrPreKitKat(android.content.Context)>$yysi0 >= 19
StaticCheck:<com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: boolean isAmPmWrittenBeforeTime(android.content.Context)>i0 < 18
StaticCheck:<com.google.android.material.internal.CollapsingTextHelper: boolean USE_SCALING_TEXTURE>$yysi0 >= 18
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastIceCreamSandwichMR1()>$yysi0 < 15
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBean()>$yysi0 < 16
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBeanMR1()>$yysi0 < 17
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBeanMR2()>$yysi0 < 18
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastKitKat()>$yysi0 < 19
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastKitKatWatch()>$yysi0 < 20
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastLollipop()>$yysi0 < 21
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastLollipopMR1()>$yysi0 < 22
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastM()>$yysi0 < 23
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastN()>$yysi0 < 24
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastNMR1()>$yysi0 < 25
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastO()>$yysi0 < 26
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastOMR1()>$yysi0 < 27
StaticCheck:<com.google.android.material.snackbar.BaseTransientBottomBar: boolean USE_OFFSET_API>$yysi0 < 16
StaticCheck:<com.jaredrummler.materialspinner.Utils: boolean isRtl(android.content.Context)>$yysi0 < 17
StaticCheck:<com.github.paolorotolo.appintro.util.LayoutUtil: boolean isRtl(android.content.res.Resources)>$yysi0 < 17
Soot finished on Mon Jul 11 07:22:03 CST 2022
Soot has run for 2 min. 34 sec.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 21
Declared Target Sdk version is: 29
Declared Max Sdk version is: -1
Collected 3546 Android APIs in the primary DEX file
Collected 2276 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()> is checking!!!
The life time of api is [23,31]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#1.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[[$z2 == 0]]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[[$z2 == 0]]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z2 == 0
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[[$z2 == 0]]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#2.the call statck between class <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.button.MaterialButtonHelper: void setCornerRadius(int)>[[-$yysi0 < 21], [-$i1 != 21]]--><com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.GradientDrawable unwrapStrokeDrawable()>[[-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.button.MaterialButtonHelper: void setCornerRadius(int)>[[-$yysi0 < 21]][[-$i1 != 21]]--><com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.GradientDrawable unwrapStrokeDrawable()>[[-$yysi0 < 21]]
-$yysi0 < 21
-$i1 != 21
-$yysi0 < 21
Good road: <com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)>[]--><com.google.android.material.button.MaterialButton: void setCornerRadius(int)>[]--><com.google.android.material.button.MaterialButtonHelper: void setCornerRadius(int)>[[-$yysi0 < 21], [-$i1 != 21]]--><com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.GradientDrawable unwrapStrokeDrawable()>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#4.the call statck between class <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#5.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButtonBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)>[]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#6.the call statck between class <com.google.android.material.button.MaterialButtonBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#7.the call statck between class <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#8.the call statck between class <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#9.the call statck between class <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:true
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <java.awt.Component: boolean isVisible()> is checking!!!
The life time of api is [1,8]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void show()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void show(int)>[]--><java.awt.Component: boolean isVisible()>
#1.the call statck between class <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])> to <java.awt.Component: boolean isVisible()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void show()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void show(int)>[]--><java.awt.Component: boolean isVisible()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void show()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void show(int)>[]--><java.awt.Component: boolean isVisible()>
#3.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])> to <java.awt.Component: boolean isVisible()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void show()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void show(int)>[]--><java.awt.Component: boolean isVisible()>
#4.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.Component: boolean isVisible()>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.net.TrafficStatsCompat: void tagDatagramSocket(java.net.DatagramSocket)>[[-i0 < 24]]--><android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
23call roads:
1 Mainhead roads:
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.MainActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_MainActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onCreate(android.os.Bundle)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void initializeUi()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void initializeNavigationDrawer()>[]--><com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer build()>[]--><com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer buildView()>[]--><com.mikepenz.materialdrawer.DrawerBuilder: void createContent()>[]--><com.mikepenz.materialdrawer.DrawerUtils: void handleFooterView(com.mikepenz.materialdrawer.DrawerBuilder,android.view.View$OnClickListener)>[]--><com.mikepenz.materialdrawer.DrawerUtils: android.view.ViewGroup buildStickyDrawerItemFooter(android.content.Context,com.mikepenz.materialdrawer.DrawerBuilder,android.view.View$OnClickListener)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
22 Packageshead roads:
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.ProfileDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.ProfileDrawerItem: int getSelectedTextColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileSettingDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileSettingDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.Drawer: void addStickyFooterItemAtPosition(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,int)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void rebuildStickyFooterView(com.mikepenz.materialdrawer.DrawerBuilder)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.Drawer: void addStickyFooterItem(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void rebuildStickyFooterView(com.mikepenz.materialdrawer.DrawerBuilder)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer buildForFragment()>[]--><com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer buildView()>[]--><com.mikepenz.materialdrawer.DrawerBuilder: void createContent()>[]--><com.mikepenz.materialdrawer.DrawerUtils: void handleFooterView(com.mikepenz.materialdrawer.DrawerBuilder,android.view.View$OnClickListener)>[]--><com.mikepenz.materialdrawer.DrawerUtils: android.view.ViewGroup buildStickyDrawerItemFooter(android.content.Context,com.mikepenz.materialdrawer.DrawerBuilder,android.view.View$OnClickListener)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractSwitchableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractSwitchableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.Drawer: void removeStickyFooterItemAtPosition(int)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void rebuildStickyFooterView(com.mikepenz.materialdrawer.DrawerBuilder)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.util.DrawerItemViewHelper: android.view.View build()>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.Drawer: void updateStickyFooterItem(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.mikepenz.materialdrawer.Drawer: void updateStickyFooterItemAtPosition(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,int)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void rebuildStickyFooterView(com.mikepenz.materialdrawer.DrawerBuilder)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.DividerDrawerItem: void bindView(com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedTextColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractToggleableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractToggleableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer append(com.mikepenz.materialdrawer.Drawer)>[]--><com.mikepenz.materialdrawer.DrawerBuilder: void createContent()>[]--><com.mikepenz.materialdrawer.DrawerUtils: void handleFooterView(com.mikepenz.materialdrawer.DrawerBuilder,android.view.View$OnClickListener)>[]--><com.mikepenz.materialdrawer.DrawerUtils: android.view.ViewGroup buildStickyDrawerItemFooter(android.content.Context,com.mikepenz.materialdrawer.DrawerBuilder,android.view.View$OnClickListener)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer append(com.mikepenz.materialdrawer.Drawer)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.MiniDrawerItem: void bindView(com.mikepenz.materialdrawer.model.MiniDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.MiniDrawerItem: void bindView(com.mikepenz.materialdrawer.model.MiniDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.MiniDrawerItem: void bindView(com.mikepenz.materialdrawer.model.MiniDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SecondaryDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.Drawer: void setStickyFooterItemAtPosition(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,int)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void rebuildStickyFooterView(com.mikepenz.materialdrawer.DrawerBuilder)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SecondarySwitchDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ContainerDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ContainerDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SecondaryToggleDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SectionDrawerItem: void bindView(com.mikepenz.materialdrawer.model.SectionDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SectionDrawerItem: void bindView(com.mikepenz.materialdrawer.model.SectionDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedTextColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
23call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.app.Activity: void requestPermissions(java.lang.String[],int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 23
Good road: <androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.widget.TextView: int getBreakStrategy()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23]][[i0 < 28]]
-i0 < 23
i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]--><android.widget.TextView: int getBreakStrategy()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.graphics.Paint: java.lang.String getFontVariationSettings()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21]][[$i0 < 17]][[-$i0 < 26]][[$i0 < 24]]
$i0 < 21
$i0 < 17
-$i0 < 26
$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]--><android.graphics.Paint: java.lang.String getFontVariationSettings()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <java.awt.Font: boolean isBold()> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: boolean isBold()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: boolean isBold()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
crashApis:4
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()>[]--><android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()> to <android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.app.RemoteAction: boolean shouldShowIcon()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[[-$i0 < 28]]--><android.app.RemoteAction: boolean shouldShowIcon()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <java.awt.Dimension: void <init>(int,int)> is checking!!!
The life time of api is [1,8]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><java.awt.Dimension: void <init>(int,int)>
#1.the call statck between class <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean inCheckBoxHitRegion(java.awt.event.MouseEvent)>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: java.awt.Dimension getCheckBoxOffset()>[]--><java.awt.Dimension: void <init>(int,int)>
#2.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><java.awt.Dimension: void <init>(int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><java.awt.Dimension: void <init>(int,int)>
#4.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.chainsaw.Main: void main(java.lang.String[])>[]--><org.apache.log4j.chainsaw.Main: void <init>()>[]--><java.awt.Dimension: void <init>(int,int)>
#5.the call statck between class <org.apache.log4j.chainsaw.Main: void main(java.lang.String[])> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><java.awt.Dimension: void <init>(int,int)>
#6.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.view.View: void setAccessibilityHeading(boolean)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 28
Good road: <androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[-$i0 < 28]]--><android.view.View: void setAccessibilityHeading(boolean)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)>[]--><android.view.View: void setAccessibilityHeading(boolean)>
#2.the call statck between class <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)> to <android.view.View: void setAccessibilityHeading(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:7
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <java.awt.GradientPaint: java.awt.Color getColor2()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewCompat: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>[[-i0 < 28]]--><android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: java.lang.Object getProperty(java.lang.String)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: java.lang.Object getProperty(java.lang.String)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: java.lang.Object getProperty(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.app.RemoteInput: int getResultsSource(android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]
-i1 < 20
i0 < 26
-i0 < 28
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]--><android.app.RemoteInput: int getResultsSource(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.app.NotificationManager: int getImportance()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationManagerCompat: int getImportance()>[[-$i0 < 24]]--><android.app.NotificationManager: int getImportance()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View,int)>[[-$i1 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface build()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface build()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.widget.TextView: android.graphics.PorterDuff.Mode getCompoundDrawableTintMode()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.TextViewCompat: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)>[[-$i0 < 23]]--><android.widget.TextView: android.graphics.PorterDuff.Mode getCompoundDrawableTintMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.view.WindowInsets: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 21
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)>[]--><com.google.android.material.internal.NavigationMenuPresenter: void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.WindowInsets: boolean equals(java.lang.Object)>
#1.the call statck between class <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)> to <android.view.WindowInsets: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
-i0 < 21
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.WindowInsets: boolean equals(java.lang.Object)>
#2.the call statck between class <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)> to <android.view.WindowInsets: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Shape getClip()>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
containsStatic:false
containsTry:true
32call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeMinTextSize()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeMinTextSize(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeMinTextSize()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.os.Message: void setAsynchronous(boolean)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try], [-i0 < 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try]][[-i0 < 16]]
try
Good road with try: <androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try], [-i0 < 16]]--><android.os.Message: void setAsynchronous(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: java.lang.Object getPixels()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void rotate(double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void rotate(double)>[]--><java.awt.geom.AffineTransform: void rotate(double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void rotate(double)> to <java.awt.geom.AffineTransform: void rotate(double)>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setOverlapAnchor(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)>[[-i0 < 23]]--><android.widget.PopupWindow: void setOverlapAnchor(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <java.awt.Adjustable: int getValue()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)>[]--><java.awt.Adjustable: int getValue()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)> to <java.awt.Adjustable: int getValue()>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <java.awt.geom.Area: boolean intersects(double,double,double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean hit(java.awt.Rectangle,java.awt.Shape,boolean)>[]--><java.awt.geom.Area: boolean intersects(double,double,double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean hit(java.awt.Rectangle,java.awt.Shape,boolean)> to <java.awt.geom.Area: boolean intersects(double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <java.awt.Color: java.awt.color.ColorSpace getColorSpace()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
crashApis:14
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.widget.TextView: void setHyphenationFrequency(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18]][[i0 >= 23]]
i0 < 18
i0 >= 23
Good road: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]--><android.widget.TextView: void setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)> is checking!!!
The life time of api is [1,8]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.Barcode39: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#1.the call statck between class <com.itextpdf.text.pdf.Barcode39: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeQRCode: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#2.the call statck between class <com.itextpdf.text.pdf.BarcodeQRCode: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodePDF417: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#3.the call statck between class <com.itextpdf.text.pdf.BarcodePDF417: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeEAN: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#4.the call statck between class <com.itextpdf.text.pdf.BarcodeEAN: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeCodabar: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#5.the call statck between class <com.itextpdf.text.pdf.BarcodeCodabar: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodePostnet: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#6.the call statck between class <com.itextpdf.text.pdf.BarcodePostnet: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeDatamatrix: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#7.the call statck between class <com.itextpdf.text.pdf.BarcodeDatamatrix: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.Barcode128: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#8.the call statck between class <com.itextpdf.text.pdf.Barcode128: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeInter25: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#9.the call statck between class <com.itextpdf.text.pdf.BarcodeInter25: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
crashApis:15
containsStatic:false
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeStepGranularity()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeStepGranularity(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeStepGranularity()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.font.FontRenderContext getFontRenderContext()>[]--><java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.font.FontRenderContext getFontRenderContext()>[]--><java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:16
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]
-i1 < 20
i0 < 26
-i0 < 26
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]--><android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: int getType()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()> is checking!!!
The life time of api is [1,8]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics2D getDG2()>[]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()> to <java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics2D getDG2()>[]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)> to <java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
One road protect good!
crashApis:17
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.String getId()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.String getId()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.String getId()>has compatibility isssues！
-----------------------------------------
crashApis:18
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <android.widget.PopupWindow: boolean getOverlapAnchor()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)>[[-i0 < 23]]--><android.widget.PopupWindow: boolean getOverlapAnchor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.Font deriveFont(java.util.Map)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><java.awt.Font: java.awt.Font deriveFont(java.util.Map)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.Font deriveFont(java.util.Map)>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: java.lang.String[] getPropertyNames()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: java.lang.String[] getPropertyNames()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: java.lang.String[] getPropertyNames()>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <java.awt.Adjustable: void setValue(int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)>[]--><java.awt.Adjustable: void setValue(int)>
#1.the call statck between class <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)> to <java.awt.Adjustable: void setValue(int)>has compatibility isssues！
-----------------------------------------
crashApis:21
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()> is checking!!!
The life time of api is [1,8]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.commons.beanutils.PropertyUtils: java.lang.Class getPropertyType(java.lang.Object,java.lang.String)>[]--><org.apache.commons.beanutils.PropertyUtilsBean: java.lang.Class getPropertyType(java.lang.Object,java.lang.String)>[]--><java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>
#1.the call statck between class <org.apache.commons.beanutils.PropertyUtils: java.lang.Class getPropertyType(java.lang.Object,java.lang.String)> to <java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.commons.beanutils.locale.LocaleBeanUtils: void setProperty(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String)>[]--><org.apache.commons.beanutils.locale.LocaleBeanUtilsBean: void setProperty(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String)>[]--><org.apache.commons.beanutils.locale.LocaleBeanUtilsBean: java.lang.Class definePropertyType(java.lang.Object,java.lang.String,java.lang.String)>[]--><java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>
#2.the call statck between class <org.apache.commons.beanutils.locale.LocaleBeanUtils: void setProperty(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String)> to <java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.commons.beanutils.locale.LocaleBeanUtils: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>[]--><org.apache.commons.beanutils.locale.LocaleBeanUtilsBean: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>[]--><org.apache.commons.beanutils.locale.LocaleBeanUtilsBean: void setProperty(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String)>[]--><org.apache.commons.beanutils.locale.LocaleBeanUtilsBean: java.lang.Class definePropertyType(java.lang.Object,java.lang.String,java.lang.String)>[]--><java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>
#3.the call statck between class <org.apache.commons.beanutils.locale.LocaleBeanUtils: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)> to <java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.commons.beanutils.BeanUtils: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>[]--><org.apache.commons.beanutils.BeanUtilsBean: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>[]--><java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>
#4.the call statck between class <org.apache.commons.beanutils.BeanUtils: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)> to <java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.commons.beanutils.BeanUtils: void populate(java.lang.Object,java.util.Map)>[]--><org.apache.commons.beanutils.BeanUtilsBean: void populate(java.lang.Object,java.util.Map)>[]--><org.apache.commons.beanutils.BeanUtilsBean: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>[]--><java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>
#5.the call statck between class <org.apache.commons.beanutils.BeanUtils: void populate(java.lang.Object,java.util.Map)> to <java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.commons.beanutils.locale.LocaleBeanUtils: java.lang.Class definePropertyType(java.lang.Object,java.lang.String,java.lang.String)>[]--><org.apache.commons.beanutils.locale.LocaleBeanUtilsBean: java.lang.Class definePropertyType(java.lang.Object,java.lang.String,java.lang.String)>[]--><java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>
#6.the call statck between class <org.apache.commons.beanutils.locale.LocaleBeanUtils: java.lang.Class definePropertyType(java.lang.Object,java.lang.String,java.lang.String)> to <java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>has compatibility isssues！
-----------------------------------------
crashApis:22
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.app.Person: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: android.graphics.drawable.Icon getIcon()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <java.awt.RenderingHints: java.lang.Object get(java.lang.Object)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.lang.Object getRenderingHint(java.awt.RenderingHints$Key)>[]--><java.awt.RenderingHints: java.lang.Object get(java.lang.Object)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.lang.Object getRenderingHint(java.awt.RenderingHints$Key)> to <java.awt.RenderingHints: java.lang.Object get(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:23
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <java.awt.Color: int getAlpha()> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: int getAlpha()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
crashApis:24
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <java.awt.event.InputEvent: int getModifiers()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2: void mousePressed(java.awt.event.MouseEvent)>[]--><java.awt.event.InputEvent: int getModifiers()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2: void mousePressed(java.awt.event.MouseEvent)> to <java.awt.event.InputEvent: int getModifiers()>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>[[-i0 < 28]]--><android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <java.awt.Polygon: void addPoint(int,int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><java.awt.Polygon: void addPoint(int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)> to <java.awt.Polygon: void addPoint(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <java.beans.PropertyDescriptor: java.lang.Class getPropertyType()> is checking!!!
The life time of api is [1,8]
3986call roads:
1 Mainhead roads:
3985 Packageshead roads:
Roads number exceed, exit!3985
#################################################
N 60 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: void <init>(java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle: void <init>(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <android.content.ContentProviderClient: void close()> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <com.oriondev.moneywallet.service.BackupHandlerIntentService: void onHandleIntent(android.content.Intent)>[[try]]--><com.oriondev.moneywallet.service.BackupHandlerIntentService: void onActionRestore(android.content.Intent)>[[try]]--><com.oriondev.moneywallet.storage.database.DataContentProvider: void notifyDatabaseIsChanged(android.content.Context)>[]--><android.content.ContentProviderClient: void close()>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.storage.database.backup.DefaultBackupImporter: void importDatabase(java.io.File)>[[try]]--><com.oriondev.moneywallet.storage.database.backup.AbstractBackupImporter: void notifyImportStarted()>[]--><com.oriondev.moneywallet.storage.database.DataContentProvider: void notifyDatabaseIsChanged(android.content.Context)>[]--><android.content.ContentProviderClient: void close()>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.storage.database.backup.LegacyBackupImporter: void importDatabase(java.io.File)>[[try]]--><com.oriondev.moneywallet.storage.database.backup.AbstractBackupImporter: void notifyImportStarted()>[]--><com.oriondev.moneywallet.storage.database.DataContentProvider: void notifyDatabaseIsChanged(android.content.Context)>[]--><android.content.ContentProviderClient: void close()>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <com.oriondev.moneywallet.service.UpgradeLegacyEditionIntentService: void onHandleIntent(android.content.Intent)>[]--><com.oriondev.moneywallet.storage.database.DataContentProvider: void notifyDatabaseIsChanged(android.content.Context)>[]--><android.content.ContentProviderClient: void close()>
#4.the call statck between class <com.oriondev.moneywallet.service.UpgradeLegacyEditionIntentService: void onHandleIntent(android.content.Intent)> to <android.content.ContentProviderClient: void close()>has compatibility isssues！
-----------------------------------------
crashApis:27
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)>[[-$i1 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void getMatrix(double[])> is checking!!!
The life time of api is [1,8]
39call roads:
0 Mainhead roads:
39 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: void transform(java.awt.geom.AffineTransform)>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: void transform(java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: void getMatrix(double[])>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void getMatrix(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: void concatCTM(java.awt.geom.AffineTransform)>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: void concatCTM(java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: void getMatrix(double[])>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void getMatrix(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: void addTemplate(com.itextpdf.text.pdf.PdfTemplate,java.awt.geom.AffineTransform)>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: void addTemplate(com.itextpdf.text.pdf.PdfTemplate,java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: void getMatrix(double[])>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
One road protect good!
crashApis:28
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <java.awt.Color: int getRed()> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: int getRed()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: int getRed()>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager.RemoteUserInfo: int getPid()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: int getPid()>[]--><android.media.session.MediaSessionManager.RemoteUserInfo: int getPid()>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: int getPid()> to <android.media.session.MediaSessionManager.RemoteUserInfo: int getPid()>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <android.view.DisplayCutout: void <init>(android.graphics.Rect,java.util.List)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: void <init>(android.graphics.Rect,java.util.List)>[[-$i0 < 28]]--><android.view.DisplayCutout: void <init>(android.graphics.Rect,java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isImportantForAccessibility()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void addRenderingHints(java.util.Map)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void addRenderingHints(java.util.Map)>[]--><java.awt.Graphics2D: void addRenderingHints(java.util.Map)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void addRenderingHints(java.util.Map)> to <java.awt.Graphics2D: void addRenderingHints(java.util.Map)>has compatibility isssues！
-----------------------------------------
crashApis:31
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: int getHeight()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: int getHeight()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: int getHeight()>has compatibility isssues！
-----------------------------------------
crashApis:32
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: void <init>(java.io.FileDescriptor)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: void <init>(java.io.FileDescriptor)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)> is checking!!!
The life time of api is [26,31]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: boolean zzb(com.google.android.gms.common.api.internal.zzb)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.zzad: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability$zza: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
containsStatic:true
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:33
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <android.app.Activity: android.net.Uri getReferrer()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 22
Good road: <androidx.core.app.ActivityCompat: android.net.Uri getReferrer(android.app.Activity)>[[-i0 < 22]]--><android.app.Activity: android.net.Uri getReferrer()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <android.telephony.mbms.ServiceInfo: java.util.Set getNamedContentLocales()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.telephony.mbms.ServiceInfo: java.util.Set getNamedContentLocales()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <android.view.Window.Callback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <android.view.View: void dispatchFinishTemporaryDetach()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.view.ViewCompat: void dispatchFinishTemporaryDetach(android.view.View)>[[-i0 < 24]]--><android.view.View: void dispatchFinishTemporaryDetach()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <android.app.job.JobServiceEngine: android.os.IBinder getBinder()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()>[]--><android.app.job.JobServiceEngine: android.os.IBinder getBinder()>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()> to <android.app.job.JobServiceEngine: android.os.IBinder getBinder()>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
#1.the call statck between class <androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])> to <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>has compatibility isssues！
-----------------------------------------
crashApis:35
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$yysi0 < 28
Good road: <androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>[[-$yysi0 < 28]]--><android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <android.graphics.Color: float[] getComponents()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: float[] getComponents()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: float[] getComponents()>has compatibility isssues！
-----------------------------------------
crashApis:37
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <android.app.Notification.Action: int getSemanticAction()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 24]][[-i0 < 28]]
i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 24], [-i0 < 28]]--><android.app.Notification.Action: int getSemanticAction()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <android.app.RemoteAction: android.app.PendingIntent getActionIntent()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: android.app.PendingIntent getActionIntent()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: android.app.PendingIntent getActionIntent()>has compatibility isssues！
-----------------------------------------
crashApis:38
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String,android.os.Bundle)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26: void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle)>[]--><androidx.media.MediaBrowserServiceCompatApi26: void notifyChildrenChanged(java.lang.Object,java.lang.String,android.os.Bundle)>[]--><android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String,android.os.Bundle)>
#1.the call statck between class <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26: void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle)> to <android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String,android.os.Bundle)>has compatibility isssues！
-----------------------------------------
crashApis:39
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 86 Potential Issue API: SDKCheck of <java.beans.PropertyDescriptor: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method)> is checking!!!
The life time of api is [1,8]
3986call roads:
1 Mainhead roads:
3985 Packageshead roads:
Roads number exceed, exit!3985
#################################################
N 87 Potential Issue API: SDKCheck of <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21]][[$i0 < 23]][[try]]
-$i0 < 21
$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23], [try]]--><android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 88 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean[] getBooleanArray(java.lang.String)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 
Error road: <com.oriondev.moneywallet.ui.activity.SearchActivity: void onCreatePanelView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: boolean[] getBooleanArray(java.lang.String)>
#1.the call statck between class <com.oriondev.moneywallet.ui.activity.SearchActivity: void onCreatePanelView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: boolean[] getBooleanArray(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:40
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 89 Potential Issue API: SDKCheck of <android.app.Person: java.lang.String getUri()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getUri()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 90 Potential Issue API: SDKCheck of <java.awt.geom.Line2D: void setLine(double,double,double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)>[]--><com.itextpdf.awt.geom.PolylineShape: boolean intersects(java.awt.geom.Rectangle2D)>[]--><java.awt.geom.Line2D: void setLine(double,double,double,double)>
#1.the call statck between class <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)> to <java.awt.geom.Line2D: void setLine(double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:41
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 91 Potential Issue API: SDKCheck of <android.content.Context: java.lang.Object getSystemService(java.lang.Class)> is checking!!!
The life time of api is [23,31]
22call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.oriondev.moneywallet.App: void onCreate()>[]--><com.oriondev.moneywallet.ui.notification.NotificationContract: void initializeNotificationChannels(android.content.Context)>[[-i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
-i0 < 23
-$i0 <= 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.LockActivity: void onResume()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: void startAuth()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean checkFingerPrintAvailability(android.content.Context)>[[-i0 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()>[[-i0 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>[[-$i0 <= 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
21 Packageshead roads:
-i0 < 23
Good road: <androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.config.GservicesValue: java.lang.Object getBinderSafe()>[]--><com.google.android.gms.common.config.GservicesValue: java.lang.Object get()>[[try]]--><com.google.android.gms.common.config.GservicesValue: boolean zzd(android.content.Context)>[[-$yysi0 < 24]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i1 < 23
-$i0 <= 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)>[[-i1 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>[[-$i0 <= 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
-$i0 <= 23
Good road: <com.multidots.fingerprintauth.FingerPrintUtils: boolean isSupportedHardware(android.content.Context)>[]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>[[-i0 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>[[-$i0 <= 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
i0 < 26
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26]]--><androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>[[-$i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
Good road: <androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
Good road: <com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkCallingOrSelfPermissionAndAppOps(java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.config.GservicesValue: void zza(android.content.Context,com.google.android.gms.common.config.GservicesValue$zza,java.util.HashSet)>[[try]]--><com.google.android.gms.common.config.GservicesValue: boolean zzd(android.content.Context)>[[-$yysi0 < 24]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$yysi0 < 24
Good road: <com.google.android.gms.common.config.GservicesValue: void init(android.content.Context)>[]--><com.google.android.gms.common.config.GservicesValue: boolean zzd(android.content.Context)>[[-$yysi0 < 24]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
-$i0 <= 23
Good road: <com.oriondev.moneywallet.ui.fragment.secondary.UtilitySettingFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.oriondev.moneywallet.ui.fragment.secondary.UtilitySettingFragment: boolean isFingerprintAuthSupported(android.content.Context)>[]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>[[-i0 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>[[-$i0 <= 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 24
Good road: <androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: java.util.List getDynamicShortcuts(android.content.Context)>[[-i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
Good road: <com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkPermissionAndAppOps(java.lang.String,int,int,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
Good road: <com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkCallingPermissionAndAppOps(java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
containsStatic:true
containsTry:true
22call by main package
-----------------------------------------
#################################################
N 92 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.app.AlarmManagerCompat: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)>[[-$i2 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 93 Potential Issue API: SDKCheck of <javax.imageio.ImageWriter: void setOutput(java.lang.Object)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 94 Potential Issue API: SDKCheck of <android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setDuplexMode(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.print.PrintHelper: android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes)>[[-$i0 < 23]]--><android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setDuplexMode(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 95 Potential Issue API: SDKCheck of <android.app.NotificationManager: void deleteNotificationChannel(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteNotificationChannel(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: void deleteNotificationChannel(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 96 Potential Issue API: SDKCheck of <java.beans.IndexedPropertyDescriptor: java.lang.reflect.Method getIndexedReadMethod()> is checking!!!
The life time of api is [1,8]
3984call roads:
1 Mainhead roads:
3983 Packageshead roads:
Roads number exceed, exit!3983
#################################################
N 97 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getShortcutId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: java.lang.String getShortcutId(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: java.lang.String getShortcutId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 98 Potential Issue API: SDKCheck of <android.graphics.Paint: boolean hasGlyph(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)>[[-i0 < 23]]--><android.graphics.Paint: boolean hasGlyph(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 99 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
456call roads:
1 Mainhead roads:
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
455 Packageshead roads:
too lang!
too lang!
too lang!
too lang!
!!!this api will crash on sdk 21 
Error road: <com.oriondev.moneywallet.ui.fragment.primary.SavingListFragment: androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#12.the call statck between class <com.oriondev.moneywallet.ui.fragment.primary.SavingListFragment: androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:42
containsStatic:true
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 100 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: android.app.Notification.MessagingStyle.Message setData(java.lang.String,android.net.Uri)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle.Message: android.app.Notification.MessagingStyle.Message setData(java.lang.String,android.net.Uri)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 101 Potential Issue API: SDKCheck of <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
crashApis:43
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 102 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isShowingHintText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isShowingHintText()>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isShowingHintText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 103 Potential Issue API: SDKCheck of <java.awt.Font: void <init>(java.lang.String,int,int)> is checking!!!
The life time of api is [1,8]
19call roads:
0 Mainhead roads:
19 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JTextArea createDetailTextArea()>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#1.the call statck between class <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JTextArea createDetailTextArea()>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JTextArea createDetailTextArea()>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#7.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.LogFactor5Dialog: void <clinit>()>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#10.the call statck between class <org.apache.log4j.lf5.viewer.LogFactor5Dialog: void <clinit>()> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:44
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 104 Potential Issue API: SDKCheck of <java.awt.Graphics: void fillRect(int,int,int,int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Graphics: void fillRect(int,int,int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Graphics: void fillRect(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:45
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 105 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Shape getClip()>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean hit(java.awt.Rectangle,java.awt.Shape,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
#17.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean hit(java.awt.Rectangle,java.awt.Shape,boolean)> to <java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
crashApis:46
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 106 Potential Issue API: SDKCheck of <android.widget.TextView: int getHyphenationFrequency()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23]][[i0 < 28]]
-i0 < 23
i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]--><android.widget.TextView: int getHyphenationFrequency()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 107 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void setPaint(java.awt.Paint)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 108 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:47
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 109 Potential Issue API: SDKCheck of <android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 110 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.LockActivity: void onResume()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: void startAuth()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: android.hardware.fingerprint.FingerprintManager$CryptoObject getCryptoObject()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean cipherInit()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean generateKey()>[[try]]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 111 Potential Issue API: SDKCheck of <java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createDefaultRendering()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createDefaultRendering()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createDefaultRendering()>has compatibility isssues！
-----------------------------------------
crashApis:48
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 112 Potential Issue API: SDKCheck of <java.awt.geom.PathIterator: void next()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
crashApis:49
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 113 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: int getRestrictBackgroundStatus()> is checking!!!
The life time of api is [24,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)>[[-$i0 < 24]]--><android.net.ConnectivityManager: int getRestrictBackgroundStatus()>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)> to <android.net.ConnectivityManager: int getRestrictBackgroundStatus()>has compatibility isssues！
-----------------------------------------
crashApis:50
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 114 Potential Issue API: SDKCheck of <android.app.NotificationManager: java.util.List getNotificationChannelGroups()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28]][[-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]
$i0 < 28
-$i0 < 26
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]--><android.app.NotificationManager: java.util.List getNotificationChannelGroups()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 115 Potential Issue API: SDKCheck of <android.view.View: void setScreenReaderFocusable(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Boolean)>[]--><android.view.View: void setScreenReaderFocusable(boolean)>
#1.the call statck between class <androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Boolean)> to <android.view.View: void setScreenReaderFocusable(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:51
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 116 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()>[[-$i0 < 28]]--><android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 117 Potential Issue API: SDKCheck of <android.app.Notification.DecoratedCustomViewStyle: void <init>()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]]--><android.app.Notification.DecoratedCustomViewStyle: void <init>()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 118 Potential Issue API: SDKCheck of <android.app.NotificationManager: java.util.List getNotificationChannels()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannels()>[[-$i0 < 26]]--><android.app.NotificationManager: java.util.List getNotificationChannels()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 119 Potential Issue API: SDKCheck of <android.app.Notification: int getGroupAlertBehavior()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: int getGroupAlertBehavior(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: int getGroupAlertBehavior()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 120 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 121 Potential Issue API: SDKCheck of <android.graphics.drawable.RippleDrawable: void setRadius(int)> is checking!!!
The life time of api is [23,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23]][[-$i1 < 21]]
-$i0 < 23
-$i1 < 21
Good road: <com.philliphsu.bottomsheetpickers.date.PagingDayPickerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.philliphsu.bottomsheetpickers.date.PagingDayPickerView: void init(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23]][[-$i1 < 21]]
-$i0 < 23
-$i1 < 21
Good road: <com.philliphsu.bottomsheetpickers.date.DatePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.philliphsu.bottomsheetpickers.date.PagingDayPickerView: void <init>(android.content.Context,com.philliphsu.bottomsheetpickers.date.DatePickerController,boolean,int)>[]--><com.philliphsu.bottomsheetpickers.date.PagingDayPickerView: void init(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23]][[-$i1 < 21]]
-$i0 < 23
-$i1 < 21
Good road: <com.philliphsu.bottomsheetpickers.date.DatePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23]][[-$i1 < 21]]
-$i0 < 23
-$i1 < 21
Good road: <com.philliphsu.bottomsheetpickers.date.TextViewWithHighlightIndicator: void setTheme(android.content.Context,boolean)>[]--><com.philliphsu.bottomsheetpickers.date.TextViewWithIndicator: void setTheme(android.content.Context,boolean)>[]--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23]][[-$i1 < 21]]
-$i0 < 23
-$i1 < 21
Good road: <com.philliphsu.bottomsheetpickers.date.PagingDayPickerView: void <init>(android.content.Context,com.philliphsu.bottomsheetpickers.date.DatePickerController)>[]--><com.philliphsu.bottomsheetpickers.date.PagingDayPickerView: void <init>(android.content.Context,com.philliphsu.bottomsheetpickers.date.DatePickerController,boolean)>[]--><com.philliphsu.bottomsheetpickers.date.PagingDayPickerView: void <init>(android.content.Context,com.philliphsu.bottomsheetpickers.date.DatePickerController,boolean,int)>[]--><com.philliphsu.bottomsheetpickers.date.PagingDayPickerView: void init(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23]][[-$i1 < 21]]
-$i0 < 23
-$i1 < 21
Good road: <com.philliphsu.bottomsheetpickers.time.grid.GridTimePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.philliphsu.bottomsheetpickers.time.grid.GridPickerLayout: void setTheme(android.content.Context,boolean)>[]--><com.philliphsu.bottomsheetpickers.time.grid.MinutesGrid: void setTheme(android.content.Context,boolean)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void setTheme(android.content.Context,boolean)>[]--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23]][[-$i1 < 21]]
-$i0 < 23
-$i1 < 21
Good road: <com.philliphsu.bottomsheetpickers.date.YearPickerView$YearAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.philliphsu.bottomsheetpickers.date.TextViewWithIndicator: void setTheme(android.content.Context,boolean)>[]--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23]][[-$i1 < 21]]
-$i0 < 23
-$i1 < 21
Good road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.philliphsu.bottomsheetpickers.Utils: void setColorControlHighlight(android.view.View,int)>[[-$i0 < 23], [-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 122 Potential Issue API: SDKCheck of <android.view.View: void setKeyboardNavigationCluster(boolean)> is checking!!!
The life time of api is [26,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[[$i0 < 21], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[[$i0 < 21]][[-$i0 < 26]]
$i0 < 21
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedAppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[[$i0 < 21], [-$i0 < 26]]--><android.view.View: void setKeyboardNavigationCluster(boolean)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setKeyboardNavigationCluster(android.view.View,boolean)>[[-$i0 < 26]]--><android.view.View: void setKeyboardNavigationCluster(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[[$i0 < 21], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[[$i0 < 21]][[-$i0 < 26]]
$i0 < 21
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedAppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[[$i0 < 21], [-$i0 < 26]]--><android.view.View: void setKeyboardNavigationCluster(boolean)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 123 Potential Issue API: SDKCheck of <android.app.FragmentManager: java.util.List getFragments()> is checking!!!
The life time of api is [26,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-$i0 < 26
Good road: <com.oriondev.moneywallet.model.VectorIcon: boolean apply(android.widget.ImageView)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: android.app.Fragment findFragment(android.view.View,android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap)>[[-$i0 < 26]]--><android.app.FragmentManager: java.util.List getFragments()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.fragment.secondary.TransferItemFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.fragment.secondary.TransferItemFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.oriondev.moneywallet.ui.fragment.secondary.TransferItemFragment: void setLoadingScreen(boolean)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void setAttachments(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void addAttachment(int,com.oriondev.moneywallet.model.Attachment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: android.app.Fragment findFragment(android.view.View,android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap)>[[-$i0 < 26]]--><android.app.FragmentManager: java.util.List getFragments()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.fragment.secondary.TransferItemFragment: void onShowItemId(long)>[]--><com.oriondev.moneywallet.ui.fragment.secondary.TransferItemFragment: void setLoadingScreen(boolean)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void setAttachments(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void addAttachment(int,com.oriondev.moneywallet.model.Attachment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: android.app.Fragment findFragment(android.view.View,android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap)>[[-$i0 < 26]]--><android.app.FragmentManager: java.util.List getFragments()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.activity.NewEditTransactionActivity: void onAttachmentListChanged(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void setAttachments(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void addAttachment(int,com.oriondev.moneywallet.model.Attachment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: android.app.Fragment findFragment(android.view.View,android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap)>[[-$i0 < 26]]--><android.app.FragmentManager: java.util.List getFragments()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.fragment.secondary.TransactionItemFragment: void onShowItemId(long)>[]--><com.oriondev.moneywallet.ui.fragment.secondary.TransactionItemFragment: void setLoadingScreen(boolean)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void setAttachments(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void addAttachment(int,com.oriondev.moneywallet.model.Attachment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: android.app.Fragment findFragment(android.view.View,android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap)>[[-$i0 < 26]]--><android.app.FragmentManager: java.util.List getFragments()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.adapter.recycler.CurrencyCursorAdapter: void onBindViewHolder(com.oriondev.moneywallet.ui.adapter.recycler.CurrencyCursorAdapter$CurrencyViewHolder,android.database.Cursor)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: android.app.Fragment findFragment(android.view.View,android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap)>[[-$i0 < 26]]--><android.app.FragmentManager: java.util.List getFragments()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.fragment.secondary.TransactionItemFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.fragment.secondary.TransactionItemFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.oriondev.moneywallet.ui.fragment.secondary.TransactionItemFragment: void setLoadingScreen(boolean)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void setAttachments(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void addAttachment(int,com.oriondev.moneywallet.model.Attachment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: android.app.Fragment findFragment(android.view.View,android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap)>[[-$i0 < 26]]--><android.app.FragmentManager: java.util.List getFragments()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.activity.NewEditTransferActivity: void onAttachmentListChanged(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void setAttachments(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void addAttachment(int,com.oriondev.moneywallet.model.Attachment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: android.app.Fragment findFragment(android.view.View,android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap)>[[-$i0 < 26]]--><android.app.FragmentManager: java.util.List getFragments()>
One road protect good!
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 124 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setUserAuthenticationRequired(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.LockActivity: void onResume()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: void startAuth()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: android.hardware.fingerprint.FingerprintManager$CryptoObject getCryptoObject()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean cipherInit()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean generateKey()>[[try]]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setUserAuthenticationRequired(boolean)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 125 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()>has compatibility isssues！
-----------------------------------------
crashApis:52
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 126 Potential Issue API: SDKCheck of <java.awt.RenderingHints: void <init>(java.util.Map)> is checking!!!
The life time of api is [1,8]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
crashApis:53
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 127 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: void flush()> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void flush()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void flush()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void flush()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void flush()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void flush()>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 128 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:54
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 129 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>[]--><java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)> to <java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:55
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 130 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 131 Potential Issue API: SDKCheck of <android.widget.ThemedSpinnerAdapter: android.content.res.Resources.Theme getDropDownViewTheme()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 132 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 133 Potential Issue API: SDKCheck of <android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-i1 < 25]]--><androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>[[]]--><android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
-i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-i1 < 25]]--><android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 134 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)> is checking!!!
The life time of api is [23,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.LockActivity: void onResume()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: void startAuth()>[]--><android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
-i1 < 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)>[[-i1 < 23]]--><android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)>
One road protect good!
crashApis:56
crashApisInMain:1
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 135 Potential Issue API: SDKCheck of <android.view.View: int getScrollIndicators()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.ViewCompat: int getScrollIndicators(android.view.View)>[[-$i0 < 23]]--><android.view.View: int getScrollIndicators()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 136 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setBot(boolean)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 137 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]
-i0 < 24
-i0 < 28
i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
i0 < 26
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
-i0 < 23
i0 < 26
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-$i1 < 28
i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-$i0 < 26
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 25
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 25
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
crashApis:57
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 138 Potential Issue API: SDKCheck of <android.app.job.JobWorkItem: android.content.Intent getIntent()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()>[]--><android.app.job.JobWorkItem: android.content.Intent getIntent()>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()> to <android.app.job.JobWorkItem: android.content.Intent getIntent()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()>[]--><android.app.job.JobWorkItem: android.content.Intent getIntent()>
#2.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()> to <android.app.job.JobWorkItem: android.content.Intent getIntent()>has compatibility isssues！
-----------------------------------------
crashApis:58
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 139 Potential Issue API: SDKCheck of <android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 < 23
Good road: <com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkCallingOrSelfPermissionAndAppOps(java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkPermissionAndAppOps(java.lang.String,int,int,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkCallingPermissionAndAppOps(java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 140 Potential Issue API: SDKCheck of <android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 141 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 142 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:59
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 143 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: float getScaledVerticalScrollFactor()> is checking!!!
The life time of api is [26,31]
15call roads:
0 Mainhead roads:
15 Packageshead roads:
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedPinLockView: void <init>(android.content.Context)>[]--><com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.mikepenz.materialdrawer.MiniDrawer: android.view.View build(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedPinLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.fragment.stub.StubListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
containsStatic:false
containsTry:false
16call by main package
-----------------------------------------
#################################################
N 144 Potential Issue API: SDKCheck of <android.app.RemoteAction: java.lang.CharSequence getTitle()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: java.lang.CharSequence getTitle()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: java.lang.CharSequence getTitle()>has compatibility isssues！
-----------------------------------------
crashApis:60
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 145 Potential Issue API: SDKCheck of <android.content.pm.PermissionInfo: int getProtection()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.pm.PermissionInfoCompat: int getProtection(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtection()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 146 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
11call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.oriondev.moneywallet.App: void onCreate()>[]--><com.oriondev.moneywallet.ui.notification.NotificationContract: void initializeNotificationChannels(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: boolean zzb(com.google.android.gms.common.api.internal.zzb)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.internal.zzad: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.GoogleApiAvailability$zza: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(android.app.NotificationChannel)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[[-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 147 Potential Issue API: SDKCheck of <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] stop()>[]--><android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] stop()> to <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)>[]--><android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>
#2.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)> to <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>has compatibility isssues！
-----------------------------------------
crashApis:61
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 148 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
crashApis:62
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 149 Potential Issue API: SDKCheck of <java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)> to <java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
crashApis:63
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 150 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void scale(double,double)> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void scale(double,double)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void scale(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><java.awt.geom.AffineTransform: void scale(double,double)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.geom.AffineTransform: void scale(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void scale(double,double)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void scale(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
crashApis:64
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 151 Potential Issue API: SDKCheck of <android.view.ViewGroup: void onViewRemoved(android.view.View)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 >= 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>[[-$i0 >= 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
One road protect good!
-$i0 >= 14
-i0 < 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 152 Potential Issue API: SDKCheck of <android.view.MenuItem: java.lang.CharSequence getContentDescription()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: java.lang.CharSequence getContentDescription()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)> to <android.view.MenuItem: java.lang.CharSequence getContentDescription()>has compatibility isssues！
-----------------------------------------
crashApis:65
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 153 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 24
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: android.graphics.Rect getLaunchBounds()>[[$i0 >= 24]]--><android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 154 Potential Issue API: SDKCheck of <java.awt.Font: java.lang.String getFontName()> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.lang.String getFontName()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.lang.String getFontName()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
crashApis:66
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 155 Potential Issue API: SDKCheck of <android.os.Handler: android.os.Handler createAsync(android.os.Looper)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 28
Good road: <androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)>[[-i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[[try]]--><androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler createAsync(android.os.Looper)>[[-i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 156 Potential Issue API: SDKCheck of <android.view.FrameMetrics: long getMetric(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)>[]--><android.view.FrameMetrics: long getMetric(int)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)> to <android.view.FrameMetrics: long getMetric(int)>has compatibility isssues！
-----------------------------------------
crashApis:67
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 157 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
!!!this api will crash on sdk 24 25 26 27 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]]--><android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)>
#1.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)> to <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)>has compatibility isssues！
-----------------------------------------
crashApis:68
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 158 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>has compatibility isssues！
-----------------------------------------
crashApis:69
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 159 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.util.Set getCategories()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.util.Set getCategories()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.util.Set getCategories()>has compatibility isssues！
-----------------------------------------
crashApis:70
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 160 Potential Issue API: SDKCheck of <java.awt.Font: java.util.Map getAttributes()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.util.Map getAttributes()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.util.Map getAttributes()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><java.awt.Font: java.util.Map getAttributes()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.util.Map getAttributes()>has compatibility isssues！
-----------------------------------------
crashApis:71
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 161 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:72
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 162 Potential Issue API: SDKCheck of <android.view.MenuItem: java.lang.CharSequence getTooltipText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: java.lang.CharSequence getTooltipText()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)> to <android.view.MenuItem: java.lang.CharSequence getTooltipText()>has compatibility isssues！
-----------------------------------------
crashApis:73
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 163 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
crashApis:74
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 164 Potential Issue API: SDKCheck of <java.awt.Component: void repaint()> is checking!!!
The life time of api is [1,8]
96call roads:
0 Mainhead roads:
96 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.gms.common.api.internal.zza$zza: void onStop()>[]--><org.apache.log4j.lf5.viewer.LF5SwingUtils$1: void run()>[]--><java.awt.Component: void repaint()>
#44.the call statck between class <com.google.android.gms.common.api.internal.zza$zza: void onStop()> to <java.awt.Component: void repaint()>has compatibility isssues！
-----------------------------------------
crashApis:75
containsStatic:false
containsTry:true
45call by main package
-----------------------------------------
#################################################
N 165 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]
-i0 < 24
-i0 < 28
i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
i0 < 26
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>has compatibility isssues！
-----------------------------------------
-i0 < 23
i0 < 26
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-$i1 < 28
i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-$i0 < 26
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 25
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 25
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
crashApis:76
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 166 Potential Issue API: SDKCheck of <android.app.Person: boolean isImportant()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isImportant()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 167 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
451call roads:
1 Mainhead roads:
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
450 Packageshead roads:
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.manager.ActivityFragmentLifecycle: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
try
Good road with try: <com.bumptech.glide.manager.DefaultConnectivityMonitor$1: void onReceive(android.content.Context,android.content.Intent)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
try
Good road with try: <com.bumptech.glide.manager.RequestManagerFragment: void onStart()>[]--><com.bumptech.glide.manager.ActivityFragmentLifecycle: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.MapTileProviderBasic: boolean isDowngradedMode(long)>[]--><org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getNetworkAvailable()>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#223.the call statck between class <org.osmdroid.tileprovider.MapTileProviderBasic: boolean isDowngradedMode(long)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
crashApis:77
containsStatic:true
containsTry:true
224call by main package
-----------------------------------------
#################################################
N 168 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContextClickable()>[[-$i0 < 23]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 169 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 170 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannels(java.util.List)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannels(java.util.List)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannels(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 171 Potential Issue API: SDKCheck of <android.database.CursorWindow: void <init>(java.lang.String,long)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 28
Good road: <androidx.core.database.CursorWindowCompat: android.database.CursorWindow create(java.lang.String,long)>[[-$i1 < 28]]--><android.database.CursorWindow: void <init>(java.lang.String,long)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 172 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannelGroups(java.util.List)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroups(java.util.List)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannelGroups(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 173 Potential Issue API: SDKCheck of <java.awt.Font: java.lang.String getName()> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.lang.String getName()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.lang.String getName()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
crashApis:78
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 174 Potential Issue API: SDKCheck of <android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
crashApis:79
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 175 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)> is checking!!!
The life time of api is [23,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.LockActivity: void onResume()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: void startAuth()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: android.hardware.fingerprint.FingerprintManager$CryptoObject getCryptoObject()>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>has compatibility isssues！
-----------------------------------------
crashApis:80
crashApisInMain:2
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 176 Potential Issue API: SDKCheck of <android.app.RemoteAction: java.lang.CharSequence getContentDescription()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: java.lang.CharSequence getContentDescription()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: java.lang.CharSequence getContentDescription()>has compatibility isssues！
-----------------------------------------
crashApis:81
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 177 Potential Issue API: SDKCheck of <android.widget.FrameLayout: void setVisibility(int)> is checking!!!
The life time of api is [21,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 178 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: boolean isActiveNetworkMetered()> is checking!!!
The life time of api is [16,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 16
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>[[-i0 < 16]]--><android.net.ConnectivityManager: boolean isActiveNetworkMetered()>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)> to <android.net.ConnectivityManager: boolean isActiveNetworkMetered()>has compatibility isssues！
-----------------------------------------
crashApis:82
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 179 Potential Issue API: SDKCheck of <android.widget.TextView: void setFirstBaselineToTopHeight(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)>[[-i1 < 28]]--><android.widget.TextView: void setFirstBaselineToTopHeight(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 180 Potential Issue API: SDKCheck of <java.awt.Color: void <init>(int,int,int,int)> is checking!!!
The life time of api is [1,8]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: void <init>(int,int,int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: void <init>(int,int,int,int)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)> to <java.awt.Color: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)>[]--><java.awt.Color: void <init>(int,int,int,int)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)> to <java.awt.Color: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:83
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 181 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void <init>()> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void <init>()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void <init>()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void <init>()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void <init>()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.AffineTransform: void <init>()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:84
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 182 Potential Issue API: SDKCheck of <java.awt.event.MouseEvent: int getY()> is checking!!!
The life time of api is [1,8]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean inCheckBoxHitRegion(java.awt.event.MouseEvent)>[]--><java.awt.event.MouseEvent: int getY()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)> to <java.awt.event.MouseEvent: int getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2: void mousePressed(java.awt.event.MouseEvent)>[]--><java.awt.event.MouseEvent: int getY()>
#2.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2: void mousePressed(java.awt.event.MouseEvent)> to <java.awt.event.MouseEvent: int getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean shouldSelectCell(java.util.EventObject)>[]--><java.awt.event.MouseEvent: int getY()>
#3.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean shouldSelectCell(java.util.EventObject)> to <java.awt.event.MouseEvent: int getY()>has compatibility isssues！
-----------------------------------------
crashApis:85
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 183 Potential Issue API: SDKCheck of <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)>[]--><android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>
#1.the call statck between class <androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)> to <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
crashApis:86
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 184 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.CharSequence getTitle()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 185 Potential Issue API: SDKCheck of <android.print.PrintAttributes: int getDuplexMode()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.print.PrintHelper: android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes)>[[-$i0 < 23]]--><android.print.PrintAttributes: int getDuplexMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 186 Potential Issue API: SDKCheck of <android.os.LocaleList: int size()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: int size()>[]--><androidx.core.os.LocaleListPlatformWrapper: int size()>[]--><android.os.LocaleList: int size()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: int size()> to <android.os.LocaleList: int size()>has compatibility isssues！
-----------------------------------------
crashApis:87
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 187 Potential Issue API: SDKCheck of <android.app.Notification.Action: boolean getAllowGeneratedReplies()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-i0 < 24]]--><android.app.Notification.Action: boolean getAllowGeneratedReplies()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 188 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.Font deriveFont(int,float)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><java.awt.Font: java.awt.Font deriveFont(int,float)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.Font deriveFont(int,float)>has compatibility isssues！
-----------------------------------------
crashApis:88
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 189 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 190 Potential Issue API: SDKCheck of <android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 < 23
-$i0 < 23
Good road: <androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 191 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager.RemoteUserInfo: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: boolean equals(java.lang.Object)>[]--><android.media.session.MediaSessionManager.RemoteUserInfo: boolean equals(java.lang.Object)>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: boolean equals(java.lang.Object)> to <android.media.session.MediaSessionManager.RemoteUserInfo: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:89
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 192 Potential Issue API: SDKCheck of <android.net.TrafficStats: void untagDatagramSocket(java.net.DatagramSocket)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.net.TrafficStatsCompat: void untagDatagramSocket(java.net.DatagramSocket)>[[-i0 < 24]]--><android.net.TrafficStats: void untagDatagramSocket(java.net.DatagramSocket)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 193 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()> is checking!!!
The life time of api is [23,31]
3call roads:
1 Mainhead roads:
-i0 < 23
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.LockActivity: void onResume()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: void startAuth()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean checkFingerPrintAvailability(android.content.Context)>[[-i0 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>[[-i0 < 23]]--><android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>
One road protect good!
2 Packageshead roads:
-i0 < 23
Good road: <com.oriondev.moneywallet.ui.fragment.secondary.UtilitySettingFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.oriondev.moneywallet.ui.fragment.secondary.UtilitySettingFragment: boolean isFingerprintAuthSupported(android.content.Context)>[]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>[[-i0 < 23]]--><android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>
One road protect good!
-i0 < 23
Good road: <com.multidots.fingerprintauth.FingerPrintUtils: boolean isSupportedHardware(android.content.Context)>[]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>[[-i0 < 23]]--><android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 194 Potential Issue API: SDKCheck of <android.graphics.Path: float[] approximate(float)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)>[]--><androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path,float)>[]--><android.graphics.Path: float[] approximate(float)>
#1.the call statck between class <androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)> to <android.graphics.Path: float[] approximate(float)>has compatibility isssues！
-----------------------------------------
crashApis:90
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 195 Potential Issue API: SDKCheck of <java.awt.Image: int getHeight(java.awt.image.ImageObserver)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
#4.the call statck between class <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)> to <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
crashApis:91
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 196 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
44call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.TutorialActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_TutorialActivity(android.content.Intent)>[]--><com.github.paolorotolo.appintro.AppIntroBase: void onRestoreInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
43 Packageshead roads:
!!!this api will crash on sdk 21 
Error road: <com.oriondev.moneywallet.ui.fragment.multipanel.BackupMultiPanelFragment: void onCreateSecondaryPanel(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <com.oriondev.moneywallet.ui.fragment.multipanel.BackupMultiPanelFragment: void onCreateSecondaryPanel(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerDialog: void onCreate(android.os.Bundle)>[]--><com.philliphsu.bottomsheetpickers.BottomSheetPickerDialog: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
!!!this api will crash on sdk 21 
Error road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerDialog: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#2.the call statck between class <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerDialog: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[[try]]--><com.google.android.gms.auth.zzg: com.google.android.gms.auth.TokenData zze(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.zzg: java.lang.Object zzd(android.content.Context,android.content.ComponentName,com.google.android.gms.auth.zzm)>[[try]]--><com.google.android.gms.auth.zzi: java.lang.Object zze(android.os.IBinder)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 
Error road: <com.google.android.gms.drive.metadata.internal.zzb: java.lang.Object zzb(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#4.the call statck between class <com.google.android.gms.drive.metadata.internal.zzb: java.lang.Object zzb(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: boolean getExtendSelection()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#5.the call statck between class <androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: boolean getExtendSelection()> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <com.oriondev.moneywallet.ui.fragment.dialog.WalletPickerDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#6.the call statck between class <com.oriondev.moneywallet.ui.fragment.dialog.WalletPickerDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <com.jaredrummler.materialspinner.MaterialSpinner: void onRestoreInstanceState(android.os.Parcelable)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#7.the call statck between class <com.jaredrummler.materialspinner.MaterialSpinner: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)>[]--><androidx.core.app.Person: androidx.core.app.Person fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#8.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[[try]]--><com.google.android.gms.auth.zzg: com.google.android.gms.auth.TokenData zze(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.zzg: java.lang.Object zzd(android.content.Context,android.content.ComponentName,com.google.android.gms.auth.zzm)>[[try]]--><com.google.android.gms.auth.zzi: java.lang.Object zze(android.os.IBinder)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getAccountId(android.content.Context,java.lang.String)>[]--><com.google.android.gms.auth.zzg: java.lang.String getAccountId(android.content.Context,java.lang.String)>[]--><com.google.android.gms.auth.zzg: java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.zzg: java.lang.String getToken(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.zzg: com.google.android.gms.auth.TokenData zze(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.zzg: java.lang.Object zzd(android.content.Context,android.content.ComponentName,com.google.android.gms.auth.zzm)>[[try]]--><com.google.android.gms.auth.zzi: java.lang.Object zze(android.os.IBinder)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
crashApis:92
crashApisInMain:3
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 197 Potential Issue API: SDKCheck of <android.view.View: boolean isKeyboardNavigationCluster()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isKeyboardNavigationCluster()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 198 Potential Issue API: SDKCheck of <android.widget.TextView: int[] getAutoSizeTextAvailableSizes()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int[] getAutoSizeTextAvailableSizes()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 199 Potential Issue API: SDKCheck of <java.awt.Rectangle: void translate(int,int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean inCheckBoxHitRegion(java.awt.event.MouseEvent)>[]--><java.awt.Rectangle: void translate(int,int)>
#1.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)> to <java.awt.Rectangle: void translate(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:93
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 200 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)> to <android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
crashApis:94
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 201 Potential Issue API: SDKCheck of <java.awt.Rectangle: void <init>(int,int,int,int)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><java.awt.Rectangle: void <init>(int,int,int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)> to <java.awt.Rectangle: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><java.awt.Rectangle: void <init>(int,int,int,int)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)> to <java.awt.Rectangle: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:95
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 202 Potential Issue API: SDKCheck of <android.app.NotificationManager: void deleteNotificationChannelGroup(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteNotificationChannelGroup(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: void deleteNotificationChannelGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 203 Potential Issue API: SDKCheck of <android.animation.AnimatorSet: void <init>()> is checking!!!
The life time of api is [24,31]
461call roads:
1 Mainhead roads:
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
460 Packageshead roads:
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
!!!this api will crash on sdk 21 22 23 
Error road: <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>[]--><me.zhanghai.android.materialprogressbar.MaterialProgressBar: void init(android.util.AttributeSet,int,int)>[]--><me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminate(java.lang.Object)>[]--><android.animation.AnimatorSet: void <init>()>
#19.the call statck between class <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void <init>(android.content.Context,android.util.AttributeSet)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:96
containsStatic:true
containsTry:true
20call by main package
-----------------------------------------
#################################################
N 204 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setDrawingOrder(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDrawingOrder(int)>[[-$i1 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: void setDrawingOrder(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 205 Potential Issue API: SDKCheck of <java.awt.Toolkit: java.awt.Dimension getScreenSize()> is checking!!!
The life time of api is [1,8]
100call roads:
0 Mainhead roads:
100 Packageshead roads:
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFrameSize(int,int)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateFrameSize()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void centerFrame(javax.swing.JFrame)>[]--><java.awt.Toolkit: java.awt.Dimension getScreenSize()>
One road protect good!
try
Good road with try: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: int getDefaultMonitorHeight()>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: int getScreenHeight()>[[try]]--><java.awt.Toolkit: java.awt.Dimension getScreenSize()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.gms.common.api.internal.zza$zza: void onStop()>[]--><org.apache.log4j.lf5.util.LogFileParser: void run()>[]--><org.apache.log4j.lf5.util.LogFileParser: void displayError(java.lang.String)>[]--><org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog: void <init>(javax.swing.JFrame,java.lang.String)>[]--><org.apache.log4j.lf5.viewer.LogFactor5Dialog: void show()>[]--><org.apache.log4j.lf5.viewer.LogFactor5Dialog: void centerWindow(java.awt.Window)>[]--><java.awt.Toolkit: java.awt.Dimension getScreenSize()>
#25.the call statck between class <com.google.android.gms.common.api.internal.zza$zza: void onStop()> to <java.awt.Toolkit: java.awt.Dimension getScreenSize()>has compatibility isssues！
-----------------------------------------
crashApis:97
containsStatic:false
containsTry:true
26call by main package
-----------------------------------------
#################################################
N 206 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
!!!this api will crash on sdk 24 25 26 27 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)>
#1.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)> to <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:98
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 207 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
crashApis:99
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 208 Potential Issue API: SDKCheck of <android.content.Context: android.content.Context createDeviceProtectedStorageContext()> is checking!!!
The life time of api is [24,31]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
-$i0 < 24
Good road: <androidx.preference.MultiSelectListPreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.MultiSelectListPreference: void setValues(java.util.Set)>[]--><androidx.preference.Preference: boolean persistStringSet(java.util.Set)>[]--><androidx.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.Preference: boolean persistLong(long)>[]--><androidx.preference.Preference: long getPersistedLong(long)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.EditTextPreference: void setText(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void setValueIndex(int)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.PreferenceManager: android.content.SharedPreferences$Editor getEditor()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SwitchPreference$Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreferenceDialogFragment: void onDialogClosed(boolean)>[]--><androidx.preference.EditTextPreference: void setText(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.PreferenceFragmentCompat: void setPreferencesFromResource(int,java.lang.String)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SeekBarPreference$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>[]--><androidx.preference.SeekBarPreference: void syncValueInternal(android.widget.SeekBar)>[]--><androidx.preference.SeekBarPreference: void setValueInternal(int,boolean)>[]--><androidx.preference.Preference: boolean persistInt(int)>[]--><androidx.preference.Preference: int getPersistedInt(int)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreferenceDialogFragmentCompat: void onDialogClosed(boolean)>[]--><androidx.preference.EditTextPreference: void setText(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreferenceDialogFragmentCompat: void onDialogClosed(boolean)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
try
Good road with try: <com.google.android.gms.common.config.GservicesValue: void zza(android.content.Context,com.google.android.gms.common.config.GservicesValue$zza,java.util.HashSet)>[[try]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.PreferenceFragment: void addPreferencesFromResource(int)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <com.oriondev.moneywallet.ui.fragment.secondary.UtilitySettingFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>[]--><androidx.preference.PreferenceFragmentCompat: void addPreferencesFromResource(int)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SwitchPreferenceCompat$Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.PreferenceFragment: void setPreferencesFromResource(int,java.lang.String)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <com.oriondev.moneywallet.ui.fragment.secondary.DatabaseSettingFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>[]--><androidx.preference.PreferenceFragmentCompat: void addPreferencesFromResource(int)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.gms.common.config.GservicesValue: android.content.SharedPreferences getDirectBootCache(android.content.Context)>[]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
#23.the call statck between class <com.google.android.gms.common.config.GservicesValue: android.content.SharedPreferences getDirectBootCache(android.content.Context)> to <android.content.Context: android.content.Context createDeviceProtectedStorageContext()>has compatibility isssues！
-----------------------------------------
crashApis:100
containsStatic:false
containsTry:true
24call by main package
-----------------------------------------
#################################################
N 209 Potential Issue API: SDKCheck of <java.awt.color.ColorSpace: int getType()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
crashApis:101
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 210 Potential Issue API: SDKCheck of <android.view.View: boolean isFocusedByDefault()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isFocusedByDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 211 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 < 26
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26]]--><androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>[[-$i0 < 26]]--><android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 212 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)> is checking!!!
The life time of api is [28,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
-i0 < 20
i0 < 24
-i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 213 Potential Issue API: SDKCheck of <android.view.View: boolean isScreenReaderFocusable()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$3: java.lang.Boolean frameworkGet(android.view.View)>[]--><android.view.View: boolean isScreenReaderFocusable()>
#1.the call statck between class <androidx.core.view.ViewCompat$3: java.lang.Boolean frameworkGet(android.view.View)> to <android.view.View: boolean isScreenReaderFocusable()>has compatibility isssues！
-----------------------------------------
crashApis:102
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 214 Potential Issue API: SDKCheck of <android.database.sqlite.SQLiteCursor: void setFillWindowForwardOnly(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.database.sqlite.SQLiteCursorCompat: void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean)>[[-$i0 < 28]]--><android.database.sqlite.SQLiteCursor: void setFillWindowForwardOnly(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 215 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)> is checking!!!
The life time of api is [23,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 216 Potential Issue API: SDKCheck of <java.awt.Adjustable: int getVisibleAmount()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)>[]--><java.awt.Adjustable: int getVisibleAmount()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)> to <java.awt.Adjustable: int getVisibleAmount()>has compatibility isssues！
-----------------------------------------
crashApis:103
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 217 Potential Issue API: SDKCheck of <android.view.View: void setAutofillHints(java.lang.String[])> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setAutofillHints(android.view.View,java.lang.String[])>[[-$i0 < 26]]--><android.view.View: void setAutofillHints(java.lang.String[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 218 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void releasePermission()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void releasePermission()>[]--><android.view.inputmethod.InputContentInfo: void releasePermission()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void releasePermission()> to <android.view.inputmethod.InputContentInfo: void releasePermission()>has compatibility isssues！
-----------------------------------------
crashApis:104
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 219 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.LockActivity: void onResume()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: void startAuth()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: android.hardware.fingerprint.FingerprintManager$CryptoObject getCryptoObject()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean cipherInit()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean generateKey()>[[try]]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 220 Potential Issue API: SDKCheck of <java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.Graphics)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.Graphics)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.Graphics)>has compatibility isssues！
-----------------------------------------
crashApis:105
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 221 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList getDefault()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 222 Potential Issue API: SDKCheck of <android.os.Handler: android.os.Handler createAsync(android.os.Looper,android.os.Handler.Callback)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback)>[[-i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper,android.os.Handler.Callback)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 223 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 224 Potential Issue API: SDKCheck of <android.graphics.Color: float alpha()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: float alpha()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: float alpha()>has compatibility isssues！
-----------------------------------------
crashApis:106
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 225 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)> is checking!!!
The life time of api is [26,31]
8call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.oriondev.moneywallet.App: void onCreate()>[]--><com.oriondev.moneywallet.App: void initializeScheduledTimers()>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.BootBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_BootBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.BootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_RecurrenceBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
7 Packageshead roads:
try
Good road with try: <com.oriondev.moneywallet.service.BackupHandlerIntentService: void onHandleIntent(android.content.Intent)>[[try]]--><com.oriondev.moneywallet.service.BackupHandlerIntentService: void onActionRestore(android.content.Intent)>[[try]]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransactionActivity: void onSaveChanges(com.oriondev.moneywallet.ui.activity.NewEditItemActivity$Mode)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#2.the call statck between class <com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransactionActivity: void onSaveChanges(com.oriondev.moneywallet.ui.activity.NewEditItemActivity$Mode)> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.ui.fragment.secondary.RecurrentTransferItemFragment$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#3.the call statck between class <com.oriondev.moneywallet.ui.fragment.secondary.RecurrentTransferItemFragment$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransferActivity: void onSaveChanges(com.oriondev.moneywallet.ui.activity.NewEditItemActivity$Mode)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#4.the call statck between class <com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransferActivity: void onSaveChanges(com.oriondev.moneywallet.ui.activity.NewEditItemActivity$Mode)> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.ui.fragment.secondary.RecurrentTransactionItemFragment$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#5.the call statck between class <com.oriondev.moneywallet.ui.fragment.secondary.RecurrentTransactionItemFragment$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void onHandleWork(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#6.the call statck between class <com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void onHandleWork(android.content.Intent)> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.service.UpgradeLegacyEditionIntentService: void onHandleIntent(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#7.the call statck between class <com.oriondev.moneywallet.service.UpgradeLegacyEditionIntentService: void onHandleIntent(android.content.Intent)> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
crashApis:107
crashApisInMain:4
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 226 Potential Issue API: SDKCheck of <java.awt.AlphaComposite: int getRule()> is checking!!!
The life time of api is [1,8]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.AlphaComposite: int getRule()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.AlphaComposite: int getRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.AlphaComposite: int getRule()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)> to <java.awt.AlphaComposite: int getRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)>[]--><java.awt.AlphaComposite: int getRule()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)> to <java.awt.AlphaComposite: int getRule()>has compatibility isssues！
-----------------------------------------
crashApis:108
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 227 Potential Issue API: SDKCheck of <java.awt.Color: void <init>(int,int,int)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.LogTable)>[]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void load()>[[try]]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void processLogLevelColors(org.w3c.dom.Document)>[[try]]--><java.awt.Color: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.LogTable)>[]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void load()>[[try]]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void processLogLevelColors(org.w3c.dom.Document)>[[try]]--><java.awt.Color: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.LogTable)>[]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void load()>[[try]]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void processLogLevelColors(org.w3c.dom.Document)>[[try]]--><java.awt.Color: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.LogTable)>[]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void load()>[[try]]--><org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void processLogLevelColors(org.w3c.dom.Document)>[[try]]--><java.awt.Color: void <init>(int,int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: void <clinit>()>[]--><java.awt.Color: void <init>(int,int,int)>
#5.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: void <clinit>()> to <java.awt.Color: void <init>(int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:109
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 228 Potential Issue API: SDKCheck of <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 229 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()>has compatibility isssues！
-----------------------------------------
crashApis:110
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 230 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:111
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 231 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setShowBadge(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.oriondev.moneywallet.App: void onCreate()>[]--><com.oriondev.moneywallet.ui.notification.NotificationContract: void initializeNotificationChannels(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationChannel: void setShowBadge(boolean)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 232 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()>has compatibility isssues！
-----------------------------------------
crashApis:112
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 233 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 234 Potential Issue API: SDKCheck of <java.awt.event.WindowAdapter: void <init>()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.chainsaw.Main$1: void <init>(org.apache.log4j.chainsaw.Main)>[]--><java.awt.event.WindowAdapter: void <init>()>
#1.the call statck between class <org.apache.log4j.chainsaw.Main$1: void <init>(org.apache.log4j.chainsaw.Main)> to <java.awt.event.WindowAdapter: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.LogBrokerMonitor)>[]--><java.awt.event.WindowAdapter: void <init>()>
#2.the call statck between class <org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.LogBrokerMonitor)> to <java.awt.event.WindowAdapter: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:113
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 235 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: int getWidth()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 236 Potential Issue API: SDKCheck of <java.awt.event.MouseEvent: java.awt.Point getPoint()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean inCheckBoxHitRegion(java.awt.event.MouseEvent)>[]--><java.awt.event.MouseEvent: java.awt.Point getPoint()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)> to <java.awt.event.MouseEvent: java.awt.Point getPoint()>has compatibility isssues！
-----------------------------------------
crashApis:114
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 237 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextAppearance(int)> is checking!!!
The life time of api is [23,31]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTabStrip: void <init>(android.content.Context)>[]--><androidx.viewpager.widget.PagerTabStrip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.PagerTitleStrip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int)>[]--><com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.tabs.TabLayout$TabView: void update()>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextAppearance(int)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTitleStrip: void <init>(android.content.Context)>[]--><androidx.viewpager.widget.PagerTitleStrip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void inflateMenu(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTextAppearanceInactive(int)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
containsStatic:false
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 238 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 239 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>has compatibility isssues！
-----------------------------------------
crashApis:115
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 240 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void translate(double,double)> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void translate(double,double)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void translate(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void translate(double,double)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void translate(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
crashApis:116
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 241 Potential Issue API: SDKCheck of <android.widget.TextView: void setBreakStrategy(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18]][[i0 >= 23]]
i0 < 18
i0 >= 23
Good road: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]--><android.widget.TextView: void setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 242 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
crashApis:117
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 243 Potential Issue API: SDKCheck of <javax.imageio.ImageWriter: void dispose()> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void dispose()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void dispose()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void dispose()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void dispose()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void dispose()>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 244 Potential Issue API: SDKCheck of <java.awt.GradientPaint: java.awt.Color getColor1()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
crashApis:118
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 245 Potential Issue API: SDKCheck of <android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
#1.the call statck between class <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void onCreate(android.os.Bundle)> to <android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>has compatibility isssues！
-----------------------------------------
crashApis:119
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 246 Potential Issue API: SDKCheck of <android.widget.Spinner: android.content.Context getPopupContext()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 247 Potential Issue API: SDKCheck of <java.awt.Color: int getGreen()> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: int getGreen()>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: int getGreen()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
crashApis:120
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 248 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>has compatibility isssues！
-----------------------------------------
crashApis:121
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 249 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void shear(double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void shear(double,double)>[]--><java.awt.geom.AffineTransform: void shear(double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void shear(double,double)> to <java.awt.geom.AffineTransform: void shear(double,double)>has compatibility isssues！
-----------------------------------------
crashApis:122
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 250 Potential Issue API: SDKCheck of <java.awt.Color: int getRGB()> is checking!!!
The life time of api is [1,8]
39call roads:
0 Mainhead roads:
39 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getRGB()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getRGB()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getRGB()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeDatamatrix: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#4.the call statck between class <com.itextpdf.text.pdf.BarcodeDatamatrix: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getRGB()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeEAN: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#6.the call statck between class <com.itextpdf.text.pdf.BarcodeEAN: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getRGB()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getRGB()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getRGB()>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getRGB()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
crashApis:123
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 251 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: double getDeterminant()> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.geom.AffineTransform: double getDeterminant()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.geom.AffineTransform: double getDeterminant()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStroke(java.awt.Stroke)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.geom.AffineTransform: double getDeterminant()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.geom.AffineTransform: double getDeterminant()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStroke(java.awt.Stroke)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.geom.AffineTransform: double getDeterminant()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: double getDeterminant()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void transform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.geom.AffineTransform: double getDeterminant()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void transform(java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: double getDeterminant()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.geom.AffineTransform: double getDeterminant()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()> to <java.awt.geom.AffineTransform: double getDeterminant()>has compatibility isssues！
-----------------------------------------
crashApis:124
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 252 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
453call roads:
1 Mainhead roads:
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
452 Packageshead roads:
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.manager.ActivityFragmentLifecycle: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#79.the call statck between class <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
crashApis:125
containsStatic:true
containsTry:true
80call by main package
-----------------------------------------
#################################################
N 253 Potential Issue API: SDKCheck of <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()> is checking!!!
The life time of api is [1,8]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
#1.the call statck between class <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])> to <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
#3.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])> to <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
#4.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>has compatibility isssues！
-----------------------------------------
crashApis:126
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 254 Potential Issue API: SDKCheck of <java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:127
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 255 Potential Issue API: SDKCheck of <android.view.View: boolean restoreDefaultFocus()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean restoreDefaultFocus()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 256 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[]--><android.text.PrecomputedText.Params: boolean equals(java.lang.Object)>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)> to <android.text.PrecomputedText.Params: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:128
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 257 Potential Issue API: SDKCheck of <android.view.View: int getNextClusterForwardId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: int getNextClusterForwardId(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getNextClusterForwardId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 258 Potential Issue API: SDKCheck of <java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)> is checking!!!
The life time of api is [1,8]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogTable: void setFont(java.awt.Font)>[]--><java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
#1.the call statck between class <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])> to <java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogTable: void setFont(java.awt.Font)>[]--><java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogTable: void setFont(java.awt.Font)>[]--><java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
#3.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])> to <java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogTable: void setFont(java.awt.Font)>[]--><java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
#4.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>has compatibility isssues！
-----------------------------------------
crashApis:129
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 259 Potential Issue API: SDKCheck of <java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)> to <java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)> to <java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:130
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 260 Potential Issue API: SDKCheck of <java.awt.Component: void setLocation(int,int)> is checking!!!
The life time of api is [1,8]
100call roads:
0 Mainhead roads:
100 Packageshead roads:
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFrameSize(int,int)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateFrameSize()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void centerFrame(javax.swing.JFrame)>[]--><java.awt.Component: void setLocation(int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFrameSize(int,int)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateFrameSize()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void centerFrame(javax.swing.JFrame)>[]--><java.awt.Component: void setLocation(int,int)>
#8.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.Component: void setLocation(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:131
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 261 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: int getStatus()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 262 Potential Issue API: SDKCheck of <javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 263 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void <init>()> is checking!!!
The life time of api is [1,8]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:132
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 264 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void removeDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void removeDynamicShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 265 Potential Issue API: SDKCheck of <java.awt.AlphaComposite: float getAlpha()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)>[]--><java.awt.AlphaComposite: float getAlpha()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)> to <java.awt.AlphaComposite: float getAlpha()>has compatibility isssues！
-----------------------------------------
crashApis:133
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 266 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 267 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: int getScaledHoverSlop()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)>[[-$i0 < 28]]--><android.view.ViewConfiguration: int getScaledHoverSlop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 268 Potential Issue API: SDKCheck of <android.app.RemoteAction: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>has compatibility isssues！
-----------------------------------------
crashApis:134
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 269 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 270 Potential Issue API: SDKCheck of <android.view.View: void setFocusedByDefault(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setFocusedByDefault(android.view.View,boolean)>[[-$i0 < 26]]--><android.view.View: void setFocusedByDefault(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 271 Potential Issue API: SDKCheck of <android.view.View: void setForeground(android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [23,31]
443call roads:
1 Mainhead roads:
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditPersonActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditPersonActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CategorySortActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CategorySortActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.dropbox.core.android.AuthActivity dummyMainMethod_com_dropbox_core_android_AuthActivity(android.content.Intent)>[]--><com.dropbox.core.android.AuthActivity: void onResume()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.WalletSortActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_WalletSortActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.BackendExplorerActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_BackendExplorerActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditTransactionModelActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditTransactionModelActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditCategoryActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditCategoryActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.BackupListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_BackupListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.BackupListActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditCurrencyActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditCurrencyActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.WalletListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_WalletListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditDebtActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditDebtActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.AboutActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_AboutActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.DonationActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_DonationActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.SearchActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_SearchActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LauncherActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LauncherActivity(android.content.Intent)>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.MapActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_MapActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.MapActivity: void onPause()>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.TransactionListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_TransactionListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditTransferModelActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditTransferModelActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CalculatorActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CalculatorActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditWalletActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditWalletActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CurrencyListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CurrencyListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CalendarActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CalendarActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.MultiPanelActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.IconListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_IconListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransactionActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditRecurrentTransactionActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditEventActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditEventActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditSavingActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditSavingActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditTransferActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditTransferActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CategoryPickerActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CategoryPickerActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditBudgetActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditBudgetActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.MainActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_MainActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.TutorialActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_TutorialActivity(android.content.Intent)>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.ImportExportActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_ImportExportActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditTransactionActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditTransactionActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditPlaceActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditPlaceActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.NewEditPlaceActivity: void onPause()>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CurrencyConverterActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CurrencyConverterActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.PeriodDetailActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_PeriodDetailActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.PlacePickerActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_PlacePickerActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.PlacePickerActivity: void onPause()>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransferActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditRecurrentTransferActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
442 Packageshead roads:
try
Good road with try: <com.bumptech.glide.request.RequestFutureTarget: boolean cancel(boolean)>[[try]]--><com.bumptech.glide.request.RequestFutureTarget: void clearOnMainThread()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
try
Good road with try: <org.osmdroid.views.MapView$MapViewGestureDetectorListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>[]--><org.osmdroid.views.MapView: void scrollBy(int,int)>[]--><org.osmdroid.views.MapView: void scrollTo(int,int)>[]--><org.osmdroid.events.DelayedMapListener: boolean onScroll(org.osmdroid.events.ScrollEvent)>[]--><org.osmdroid.events.DelayedMapListener: void dispatch(org.osmdroid.events.MapEvent)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.gms.common.api.GoogleApi: void <init>(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings)>[]--><com.google.android.gms.common.api.internal.zzad: void zza(android.app.Activity,com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.internal.zzh)>[]--><com.google.android.gms.common.api.internal.zzad: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>[]--><com.google.android.gms.common.api.internal.zzbr: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#8.the call statck between class <com.google.android.gms.common.api.GoogleApi: void <init>(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
-$i0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.gms.common.api.internal.zzp: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager$zza: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
try
Good road with try: <com.google.android.gms.common.api.internal.zzp: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.zzbd: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>[[try]]--><com.google.android.gms.common.api.internal.zzaj: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>[]--><com.google.android.gms.common.api.internal.zzaj: void zzat()>[]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void handleSelectionView(com.mikepenz.materialdrawer.model.interfaces.IProfile,boolean)>[[-$i0 < 21]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
#9.the call statck between class <com.google.android.gms.common.api.internal.zzp: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
crashApis:135
crashApisInMain:5
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 272 Potential Issue API: SDKCheck of <javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 273 Potential Issue API: SDKCheck of <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStroke(java.awt.Stroke)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStroke(java.awt.Stroke)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void transform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void transform(java.awt.geom.AffineTransform)> to <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()> to <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>has compatibility isssues！
-----------------------------------------
crashApis:136
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 274 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.ColorSpace getColorSpace()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.ColorSpace getColorSpace()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
crashApis:137
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 275 Potential Issue API: SDKCheck of <android.view.View: int getImportantForAutofill()> is checking!!!
The life time of api is [26,31]
15call roads:
0 Mainhead roads:
15 Packageshead roads:
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedPinLockView: void <init>(android.content.Context)>[]--><com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.mikepenz.materialdrawer.MiniDrawer: android.view.View build(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedPinLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.fragment.stub.StubListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
containsStatic:false
containsTry:false
16call by main package
-----------------------------------------
#################################################
N 276 Potential Issue API: SDKCheck of <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()> is checking!!!
The life time of api is [1,8]
100call roads:
0 Mainhead roads:
100 Packageshead roads:
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFrameSize(int,int)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateFrameSize()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void centerFrame(javax.swing.JFrame)>[]--><java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
One road protect good!
try
Good road with try: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: int getDefaultMonitorHeight()>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: int getScreenHeight()>[[try]]--><java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.gms.common.api.internal.zza$zza: void onStop()>[]--><org.apache.log4j.lf5.util.LogFileParser: void run()>[]--><org.apache.log4j.lf5.util.LogFileParser: void displayError(java.lang.String)>[]--><org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog: void <init>(javax.swing.JFrame,java.lang.String)>[]--><org.apache.log4j.lf5.viewer.LogFactor5Dialog: void show()>[]--><org.apache.log4j.lf5.viewer.LogFactor5Dialog: void centerWindow(java.awt.Window)>[]--><java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
#25.the call statck between class <com.google.android.gms.common.api.internal.zza$zza: void onStop()> to <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>has compatibility isssues！
-----------------------------------------
crashApis:138
containsStatic:false
containsTry:true
26call by main package
-----------------------------------------
#################################################
N 277 Potential Issue API: SDKCheck of <android.view.View: void cancelDragAndDrop()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void cancelDragAndDrop(android.view.View)>[[-$i0 < 24]]--><android.view.View: void cancelDragAndDrop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 278 Potential Issue API: SDKCheck of <android.view.View: android.view.View keyboardNavigationClusterSearch(android.view.View,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)>[[-$i1 < 26]]--><android.view.View: android.view.View keyboardNavigationClusterSearch(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 279 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setLineSpacing(float,float)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 280 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContextClickable(boolean)>[[-$i0 < 23]]--><android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 281 Potential Issue API: SDKCheck of <java.awt.Image: int getWidth(java.awt.image.ImageObserver)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.Image: int getWidth(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Image: int getWidth(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
#4.the call statck between class <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)> to <java.awt.Image: int getWidth(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Image: int getWidth(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
crashApis:139
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 282 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 283 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
crashApis:140
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 284 Potential Issue API: SDKCheck of <java.awt.Adjustable: int getUnitIncrement()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)>[]--><java.awt.Adjustable: int getUnitIncrement()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)> to <java.awt.Adjustable: int getUnitIncrement()>has compatibility isssues！
-----------------------------------------
crashApis:141
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 285 Potential Issue API: SDKCheck of <android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)>[[-i0 < 23]]--><android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 286 Potential Issue API: SDKCheck of <android.content.pm.PermissionInfo: int getProtectionFlags()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.pm.PermissionInfoCompat: int getProtectionFlags(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtectionFlags()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 287 Potential Issue API: SDKCheck of <java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()> is checking!!!
The life time of api is [1,8]
3989call roads:
1 Mainhead roads:
3988 Packageshead roads:
Roads number exceed, exit!3988
#################################################
N 288 Potential Issue API: SDKCheck of <android.view.ViewGroup: void onViewAdded(android.view.View)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[[-i9 >= 17], [try]]--><androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[[-i9 >= 17]][[try]]--><androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]
-i9 >= 17
try
Good road with try: <androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void updateHierarchy()>[]--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[[-i9 >= 17], [try]]--><androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
-$i0 >= 14
-i0 < 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
-$i0 >= 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[[-$i0 >= 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 289 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList getAdjustedDefault()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getAdjustedDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 290 Potential Issue API: SDKCheck of <java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()> is checking!!!
The life time of api is [1,8]
3990call roads:
1 Mainhead roads:
3989 Packageshead roads:
Roads number exceed, exit!3989
#################################################
N 291 Potential Issue API: SDKCheck of <android.view.View: void addOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewCompat: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>[[-i0 < 28]]--><android.view.View: void addOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 292 Potential Issue API: SDKCheck of <java.awt.event.KeyEvent: int getKeyCode()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.LogFactor5InputDialog$1: void keyPressed(java.awt.event.KeyEvent)>[]--><java.awt.event.KeyEvent: int getKeyCode()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.LogFactor5InputDialog$1: void keyPressed(java.awt.event.KeyEvent)> to <java.awt.event.KeyEvent: int getKeyCode()>has compatibility isssues！
-----------------------------------------
crashApis:142
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 293 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: void <init>(int,int,int)> is checking!!!
The life time of api is [1,8]
36call roads:
0 Mainhead roads:
36 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics2D getDG2()>[]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)> to <java.awt.image.BufferedImage: void <init>(int,int,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
crashApis:143
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 294 Potential Issue API: SDKCheck of <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.parser.PdfImageObject: java.awt.image.BufferedImage getBufferedImage()>[]--><javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)>
#1.the call statck between class <com.itextpdf.text.pdf.parser.PdfImageObject: java.awt.image.BufferedImage getBufferedImage()> to <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)>has compatibility isssues！
-----------------------------------------
crashApis:144
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 295 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)>[[-$i0 < 23]]--><android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 296 Potential Issue API: SDKCheck of <android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()>[[try]]--><android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 297 Potential Issue API: SDKCheck of <java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)> is checking!!!
The life time of api is [1,8]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode)>[]--><java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>
#1.the call statck between class <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])> to <java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode)>[]--><java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode)>[]--><java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>
#3.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])> to <java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode)>[]--><java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>
#4.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:145
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 298 Potential Issue API: SDKCheck of <android.location.LocationManager: boolean isLocationEnabled()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)>[[-$i0 < 28]]--><android.location.LocationManager: boolean isLocationEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 299 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: java.lang.String getResPackage()> is checking!!!
The life time of api is [28,31]
12call roads:
0 Mainhead roads:
12 Packageshead roads:
-i0 < 26
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26], [-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26]][[-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
i0 < 26
-$yysi0 < 26
try
Good road with try: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26], [-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-i0 < 24
-i0 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i1 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 26
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
$i0 < 26
try
Good road with try: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 25
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: java.lang.String toString()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 25
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
containsStatic:true
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 300 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: int getBreakStrategy()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: int getBreakStrategy()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: int getBreakStrategy()>has compatibility isssues！
-----------------------------------------
crashApis:146
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 301 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 302 Potential Issue API: SDKCheck of <java.beans.PropertyEditor: java.lang.Object getValue()> is checking!!!
The life time of api is [1,8]
3984call roads:
1 Mainhead roads:
3983 Packageshead roads:
Roads number exceed, exit!3983
#################################################
N 303 Potential Issue API: SDKCheck of <android.app.Notification: long getTimeoutAfter()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.app.NotificationCompat: long getTimeoutAfter(android.app.Notification)>[[-$i1 < 26]]--><android.app.Notification: long getTimeoutAfter()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 304 Potential Issue API: SDKCheck of <java.beans.IndexedPropertyDescriptor: java.lang.reflect.Method getIndexedWriteMethod()> is checking!!!
The life time of api is [1,8]
3984call roads:
1 Mainhead roads:
3983 Packageshead roads:
Roads number exceed, exit!3983
#################################################
N 305 Potential Issue API: SDKCheck of <android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 23
Good road: <com.oriondev.moneywallet.api.disk.DiskBackendService: void setup(androidx.activity.ComponentActivity)>[]--><androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>[[-$i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldShowRequestPermissionRationale(java.lang.String)>[]--><androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>[[-$i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 306 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 23
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int)>[[-$i4 < 23]]--><android.app.ActivityOptions: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 307 Potential Issue API: SDKCheck of <android.app.Activity: android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.app.ActivityCompat: androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)>[]--><androidx.core.view.DragAndDropPermissionsCompat: androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent)>[[-i0 < 24]]--><android.app.Activity: android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 308 Potential Issue API: SDKCheck of <android.view.View: void addKeyboardNavigationClusters(java.util.Collection,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)>[[-$i1 < 26]]--><android.view.View: void addKeyboardNavigationClusters(java.util.Collection,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 309 Potential Issue API: SDKCheck of <android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 23
Good road: <com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkCallingOrSelfPermissionAndAppOps(java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
-i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
-i0 < 23
Good road: <com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkPermissionAndAppOps(java.lang.String,int,int,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
-i0 < 23
Good road: <com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkCallingPermissionAndAppOps(java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 310 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void setRenderingHints(java.util.Map)> is checking!!!
The life time of api is [1,8]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics2D getDG2()>[]--><java.awt.Graphics2D: void setRenderingHints(java.util.Map)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()> to <java.awt.Graphics2D: void setRenderingHints(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics2D getDG2()>[]--><java.awt.Graphics2D: void setRenderingHints(java.util.Map)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)> to <java.awt.Graphics2D: void setRenderingHints(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setRenderingHints(java.util.Map)>[]--><java.awt.Graphics2D: void setRenderingHints(java.util.Map)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setRenderingHints(java.util.Map)> to <java.awt.Graphics2D: void setRenderingHints(java.util.Map)>has compatibility isssues！
-----------------------------------------
crashApis:147
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 311 Potential Issue API: SDKCheck of <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Picture)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$yysi0 < 19
Good road: <androidx.transition.Visibility: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int)>[]--><androidx.transition.TransitionUtils: android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)>[]--><androidx.transition.TransitionUtils: android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)>[[$yysi0 < 19]]--><android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Picture)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 312 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: int getHeight()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 313 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetBottom()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetBottom()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 314 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: int getType()> is checking!!!
The life time of api is [28,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 315 Potential Issue API: SDKCheck of <android.animation.StateListAnimator: void <init>()> is checking!!!
The life time of api is [22,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[i0 != 21]]--><android.animation.StateListAnimator: void <init>()>
One road protect good!
!!!this api will crash on sdk 21 
Error road: <com.oriondev.moneywallet.ui.view.theme.ThemedAppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void <init>()>
#2.the call statck between class <com.oriondev.moneywallet.ui.view.theme.ThemedAppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)> to <android.animation.StateListAnimator: void <init>()>has compatibility isssues！
-----------------------------------------
-$i0 < 21
!!!this api will crash on sdk 21 
Error road: <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>[[-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void <init>()>
#3.the call statck between class <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)> to <android.animation.StateListAnimator: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <com.oriondev.moneywallet.ui.view.theme.ThemedAppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void <init>()>
#4.the call statck between class <com.oriondev.moneywallet.ui.view.theme.ThemedAppBarLayout: void <init>(android.content.Context)> to <android.animation.StateListAnimator: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:148
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 316 Potential Issue API: SDKCheck of <java.awt.geom.PathIterator: boolean isDone()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
crashApis:149
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 317 Potential Issue API: SDKCheck of <javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 318 Potential Issue API: SDKCheck of <android.app.RemoteAction: void setShouldShowIcon(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[[-$i0 < 28]]--><android.app.RemoteAction: void setShouldShowIcon(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 319 Potential Issue API: SDKCheck of <android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 320 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon create(android.graphics.Bitmap,float,float)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)>[[-$i0 < 24]]--><android.view.PointerIcon: android.view.PointerIcon create(android.graphics.Bitmap,float,float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 321 Potential Issue API: SDKCheck of <java.awt.RenderingHints: java.lang.Object remove(java.lang.Object)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>[]--><java.awt.RenderingHints: java.lang.Object remove(java.lang.Object)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)> to <java.awt.RenderingHints: java.lang.Object remove(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:150
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 322 Potential Issue API: SDKCheck of <java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()> is checking!!!
The life time of api is [1,8]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>
#1.the call statck between class <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])> to <java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>
#3.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])> to <java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>
#4.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>has compatibility isssues！
-----------------------------------------
crashApis:151
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 323 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 324 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
crashApis:152
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 325 Potential Issue API: SDKCheck of <android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.TextViewCompat: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)>[[-$i0 < 23]]--><android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 326 Potential Issue API: SDKCheck of <android.app.Dialog: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.app.DialogCompat: android.view.View requireViewById(android.app.Dialog,int)>[[-i1 < 28]]--><android.app.Dialog: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 327 Potential Issue API: SDKCheck of <java.awt.Component: java.awt.Color getForeground()> is checking!!!
The life time of api is [1,8]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 328 Potential Issue API: SDKCheck of <java.awt.image.BufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><java.awt.image.BufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.image.BufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>has compatibility isssues！
-----------------------------------------
crashApis:153
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 329 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 330 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)>has compatibility isssues！
-----------------------------------------
crashApis:154
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 331 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>[]--><android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)> to <android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>has compatibility isssues！
-----------------------------------------
crashApis:155
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 332 Potential Issue API: SDKCheck of <javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 333 Potential Issue API: SDKCheck of <java.awt.Component: void setFont(java.awt.Font)> is checking!!!
The life time of api is [1,8]
96call roads:
0 Mainhead roads:
96 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.gms.common.api.internal.zza$zza: void onStop()>[]--><org.apache.log4j.lf5.util.LogFileParser: void run()>[]--><org.apache.log4j.lf5.util.LogFileParser: void displayError(java.lang.String)>[]--><org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog: void <init>(javax.swing.JFrame,java.lang.String)>[]--><org.apache.log4j.lf5.viewer.LogFactor5Dialog: void wrapStringOnPanel(java.lang.String,java.awt.Container)>[]--><java.awt.Component: void setFont(java.awt.Font)>
#44.the call statck between class <com.google.android.gms.common.api.internal.zza$zza: void onStop()> to <java.awt.Component: void setFont(java.awt.Font)>has compatibility isssues！
-----------------------------------------
crashApis:156
containsStatic:false
containsTry:true
45call by main package
-----------------------------------------
#################################################
N 334 Potential Issue API: SDKCheck of <java.awt.Adjustable: int getMaximum()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)>[]--><java.awt.Adjustable: int getMaximum()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)> to <java.awt.Adjustable: int getMaximum()>has compatibility isssues！
-----------------------------------------
crashApis:157
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 335 Potential Issue API: SDKCheck of <android.content.Context: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)>[]--><android.content.Context: int checkSelfPermission(java.lang.String)>
#1.the call statck between class <androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)> to <android.content.Context: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:158
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 336 Potential Issue API: SDKCheck of <java.awt.BasicStroke: float getDashPhase()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
crashApis:159
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 337 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()> is checking!!!
The life time of api is [26,31]
15call roads:
0 Mainhead roads:
15 Packageshead roads:
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedPinLockView: void <init>(android.content.Context)>[]--><com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.mikepenz.materialdrawer.MiniDrawer: android.view.View build(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedPinLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.fragment.stub.StubListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
containsStatic:false
containsTry:false
16call by main package
-----------------------------------------
#################################################
N 338 Potential Issue API: SDKCheck of <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$z0 == 0
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>[[-$z0 == 0]]--><android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
#1.the call statck between class <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)> to <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>has compatibility isssues！
-----------------------------------------
crashApis:160
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 339 Potential Issue API: SDKCheck of <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
crashApis:161
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 340 Potential Issue API: SDKCheck of <java.awt.BasicStroke: int getEndCap()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
crashApis:162
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 341 Potential Issue API: SDKCheck of <java.awt.Font: float getSize2D()> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: float getSize2D()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
crashApis:163
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 342 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: void <init>(android.app.Person)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><android.app.Notification.MessagingStyle: void <init>(android.app.Person)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 343 Potential Issue API: SDKCheck of <android.app.Person.Builder: void <init>()> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 344 Potential Issue API: SDKCheck of <android.app.job.JobWorkItem: void <init>(android.content.Intent)> is checking!!!
The life time of api is [26,31]
8call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.oriondev.moneywallet.App: void onCreate()>[]--><com.oriondev.moneywallet.App: void initializeScheduledTimers()>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.BootBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_BootBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.BootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_RecurrenceBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
7 Packageshead roads:
try
Good road with try: <com.oriondev.moneywallet.service.BackupHandlerIntentService: void onHandleIntent(android.content.Intent)>[[try]]--><com.oriondev.moneywallet.service.BackupHandlerIntentService: void onActionRestore(android.content.Intent)>[[try]]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransactionActivity: void onSaveChanges(com.oriondev.moneywallet.ui.activity.NewEditItemActivity$Mode)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#2.the call statck between class <com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransactionActivity: void onSaveChanges(com.oriondev.moneywallet.ui.activity.NewEditItemActivity$Mode)> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.ui.fragment.secondary.RecurrentTransferItemFragment$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#3.the call statck between class <com.oriondev.moneywallet.ui.fragment.secondary.RecurrentTransferItemFragment$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransferActivity: void onSaveChanges(com.oriondev.moneywallet.ui.activity.NewEditItemActivity$Mode)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#4.the call statck between class <com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransferActivity: void onSaveChanges(com.oriondev.moneywallet.ui.activity.NewEditItemActivity$Mode)> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.ui.fragment.secondary.RecurrentTransactionItemFragment$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#5.the call statck between class <com.oriondev.moneywallet.ui.fragment.secondary.RecurrentTransactionItemFragment$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void onHandleWork(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#6.the call statck between class <com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void onHandleWork(android.content.Intent)> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <com.oriondev.moneywallet.service.UpgradeLegacyEditionIntentService: void onHandleIntent(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void scheduleRecurrenceTask(android.content.Context)>[]--><com.oriondev.moneywallet.broadcast.RecurrenceBroadcastReceiver: void startBackgroundTask(android.content.Context)>[]--><com.oriondev.moneywallet.service.RecurrenceHandlerIntentService: void enqueueWork(android.content.Context,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>[]--><androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#7.the call statck between class <com.oriondev.moneywallet.service.UpgradeLegacyEditionIntentService: void onHandleIntent(android.content.Intent)> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:164
crashApisInMain:6
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 345 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>[]--><android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)> to <android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:165
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 346 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 347 Potential Issue API: SDKCheck of <android.content.Context: java.io.File getDataDir()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.content.ContextCompat: java.io.File getDataDir(android.content.Context)>[[-i0 < 24]]--><android.content.Context: java.io.File getDataDir()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 348 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)>has compatibility isssues！
-----------------------------------------
crashApis:166
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 349 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void rotate(double,double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void rotate(double,double,double)>[]--><java.awt.geom.AffineTransform: void rotate(double,double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void rotate(double,double,double)> to <java.awt.geom.AffineTransform: void rotate(double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:167
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 350 Potential Issue API: SDKCheck of <android.view.DisplayCutout: java.util.List getBoundingRects()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: java.util.List getBoundingRects()>[[-$i0 < 28]]--><android.view.DisplayCutout: java.util.List getBoundingRects()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 351 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 352 Potential Issue API: SDKCheck of <java.awt.BasicStroke: void <init>(float)> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
crashApis:168
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 353 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 354 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setWeight(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setWeight(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 355 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout build()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 356 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getDrawingOrder()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 357 Potential Issue API: SDKCheck of <java.awt.event.ActionEvent: java.lang.String getActionCommand()> is checking!!!
The life time of api is [1,8]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 358 Potential Issue API: SDKCheck of <java.awt.RenderingHints.Key: void <init>(int)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D$HyperLinkKey: void <clinit>()>[[]]--><java.awt.RenderingHints.Key: void <init>(int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D$HyperLinkKey: void <clinit>()> to <java.awt.RenderingHints.Key: void <init>(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D$HyperLinkKey: void <init>(int)>[]--><java.awt.RenderingHints.Key: void <init>(int)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D$HyperLinkKey: void <init>(int)> to <java.awt.RenderingHints.Key: void <init>(int)>has compatibility isssues！
-----------------------------------------
crashApis:169
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 359 Potential Issue API: SDKCheck of <java.awt.Component: java.awt.Dimension getSize()> is checking!!!
The life time of api is [1,8]
100call roads:
0 Mainhead roads:
100 Packageshead roads:
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFrameSize(int,int)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateFrameSize()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void centerFrame(javax.swing.JFrame)>[]--><java.awt.Component: java.awt.Dimension getSize()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFrameSize(int,int)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateFrameSize()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void centerFrame(javax.swing.JFrame)>[]--><java.awt.Component: java.awt.Dimension getSize()>
#8.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.Component: java.awt.Dimension getSize()>has compatibility isssues！
-----------------------------------------
crashApis:170
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 360 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()>has compatibility isssues！
-----------------------------------------
crashApis:171
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 361 Potential Issue API: SDKCheck of <android.os.LocaleList: int hashCode()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: int hashCode()>[]--><android.os.LocaleList: int hashCode()>
#1.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: int hashCode()> to <android.os.LocaleList: int hashCode()>has compatibility isssues！
-----------------------------------------
crashApis:172
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 362 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeWithDefaults(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)>[[-$i1 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeWithDefaults(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 363 Potential Issue API: SDKCheck of <android.view.Window.Callback: void onPointerCaptureChanged(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 364 Potential Issue API: SDKCheck of <android.app.NotificationChannelGroup: java.lang.String getId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28]][[-$i0 < 26]]
$i0 < 28
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><android.app.NotificationChannelGroup: java.lang.String getId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 365 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: int getWidth()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: int getWidth()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: int getWidth()>has compatibility isssues！
-----------------------------------------
crashApis:173
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 366 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()>has compatibility isssues！
-----------------------------------------
crashApis:174
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 367 Potential Issue API: SDKCheck of <java.beans.PropertyDescriptor: void setWriteMethod(java.lang.reflect.Method)> is checking!!!
The life time of api is [1,8]
3984call roads:
1 Mainhead roads:
3983 Packageshead roads:
Roads number exceed, exit!3983
#################################################
N 368 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon load(android.content.res.Resources,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon load(android.content.res.Resources,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 369 Potential Issue API: SDKCheck of <java.awt.Polygon: void <init>(int[],int[],int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><java.awt.Polygon: void <init>(int[],int[],int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Polygon: void <init>(int[],int[],int)>has compatibility isssues！
-----------------------------------------
crashApis:175
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 370 Potential Issue API: SDKCheck of <java.awt.geom.Line2D.Double: void <init>(double,double,double,double)> is checking!!!
The life time of api is [1,8]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)>[]--><com.itextpdf.awt.geom.PolylineShape: boolean intersects(java.awt.geom.Rectangle2D)>[]--><java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>
#2.the call statck between class <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)> to <java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:176
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 371 Potential Issue API: SDKCheck of <java.beans.PropertyDescriptor: java.lang.Class getPropertyEditorClass()> is checking!!!
The life time of api is [1,8]
3984call roads:
1 Mainhead roads:
3983 Packageshead roads:
Roads number exceed, exit!3983
#################################################
N 372 Potential Issue API: SDKCheck of <java.awt.geom.Area: void intersect(java.awt.geom.Area)> is checking!!!
The life time of api is [1,8]
15call roads:
0 Mainhead roads:
15 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
crashApis:177
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 373 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> is checking!!!
The life time of api is [1,30]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getWiFiNetworkAvailable()>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#1.the call statck between class <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getWiFiNetworkAvailable()> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.oriondev.moneywallet.service.BackupHandlerIntentService: void onHandleIntent(android.content.Intent)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getCellularDataNetworkAvailable()>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#3.the call statck between class <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getCellularDataNetworkAvailable()> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#4.the call statck between class <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
crashApis:178
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 374 Potential Issue API: SDKCheck of <android.os.Message: boolean isAsynchronous()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try], [-i0 < 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try]][[-i0 < 16]]
try
Good road with try: <androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try], [-i0 < 16]]--><android.os.Message: boolean isAsynchronous()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 375 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setWindowLayoutType(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)>[[-$i1 < 23]]--><android.widget.PopupWindow: void setWindowLayoutType(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 376 Potential Issue API: SDKCheck of <java.awt.Graphics: void dispose()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Graphics: void dispose()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Graphics: void dispose()>has compatibility isssues！
-----------------------------------------
crashApis:179
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 377 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 378 Potential Issue API: SDKCheck of <java.awt.BasicStroke: int getLineJoin()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
crashApis:180
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 379 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>has compatibility isssues！
-----------------------------------------
crashApis:181
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 380 Potential Issue API: SDKCheck of <javax.imageio.ImageWriteParam: void setCompressionMode(int)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionMode(int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionMode(int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionMode(int)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionMode(int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionMode(int)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 381 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i1 < 24
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void inflateMenu(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setEnabled(boolean)>[]--><androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
One road protect good!
-$i1 < 24
Good road: <com.google.android.material.tabs.TabLayout$TabView: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>[]--><androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>[]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
#3.the call statck between class <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)> to <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>has compatibility isssues！
-----------------------------------------
crashApis:182
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 382 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: int getHeight()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 383 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeTextType()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeTextType(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeTextType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 384 Potential Issue API: SDKCheck of <android.view.View: boolean isAccessibilityHeading()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)>[]--><android.view.View: boolean isAccessibilityHeading()>
#1.the call statck between class <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)> to <android.view.View: boolean isAccessibilityHeading()>has compatibility isssues！
-----------------------------------------
crashApis:183
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 385 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)> is checking!!!
The life time of api is [26,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]
-i0 < 24
-i0 < 28
-i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 26
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-$i1 < 28
-i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-$i0 < 26
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 25
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 25
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 386 Potential Issue API: SDKCheck of <android.content.res.Configuration: android.os.LocaleList getLocales()> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 18
-$i0 < 24
Good road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerPresenter: void onCreate(com.philliphsu.bottomsheetpickers.time.numberpad.INumberPadTimePicker$State)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel: boolean isAmPmWrittenBeforeTime()>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: boolean isAmPmWrittenBeforeTime(android.content.Context)>[[-i0 < 18]]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: java.util.Locale getPrimaryLocale(android.content.Context)>[[-$i0 < 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
-i0 < 18
-$i0 < 24
Good road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerPresenter: void <init>(com.philliphsu.bottomsheetpickers.time.numberpad.INumberPadTimePicker$View,com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel,boolean)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel: java.lang.String getTimeSeparator(boolean)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: java.lang.String getTimeSeparator(android.content.Context,boolean)>[[-i0 < 18]]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: java.util.Locale getPrimaryLocale(android.content.Context)>[[-$i0 < 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
-i0 < 18
-$i0 < 24
Good road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerPresenter: void <init>(com.philliphsu.bottomsheetpickers.time.numberpad.INumberPadTimePicker$View,com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel,boolean)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.ButtonTextModel: void <init>(com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel,boolean)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel: java.lang.String getTimeSeparator(boolean)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: java.lang.String getTimeSeparator(android.content.Context,boolean)>[[-i0 < 18]]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: java.util.Locale getPrimaryLocale(android.content.Context)>[[-$i0 < 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
-$i0 < 24
Good road: <androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>[[-$i0 < 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 387 Potential Issue API: SDKCheck of <android.content.Context: android.content.res.ColorStateList getColorStateList(int)> is checking!!!
The life time of api is [23,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.DatePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorListRes(int)>[]--><androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder neutralColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder linkColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder negativeColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 388 Potential Issue API: SDKCheck of <android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)> to <android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()>has compatibility isssues！
-----------------------------------------
crashApis:184
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 389 Potential Issue API: SDKCheck of <android.view.View: boolean isImportantForAutofill()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isImportantForAutofill()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 390 Potential Issue API: SDKCheck of <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)> is checking!!!
The life time of api is [28,31]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.afollestad.materialdialogs.prefs.MaterialDialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.afollestad.materialdialogs.prefs.MaterialDialogPreference: void init(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.PrefUtil: void setLayoutResource(android.content.Context,android.preference.Preference,android.util.AttributeSet)>[]--><android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>
#1.the call statck between class <com.afollestad.materialdialogs.prefs.MaterialDialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.afollestad.materialdialogs.prefs.MaterialEditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.afollestad.materialdialogs.prefs.MaterialEditTextPreference: void init(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.PrefUtil: void setLayoutResource(android.content.Context,android.preference.Preference,android.util.AttributeSet)>[]--><android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>
#2.the call statck between class <com.afollestad.materialdialogs.prefs.MaterialEditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.afollestad.materialdialogs.prefs.MaterialEditTextPreference: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.prefs.MaterialEditTextPreference: void init(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.PrefUtil: void setLayoutResource(android.content.Context,android.preference.Preference,android.util.AttributeSet)>[]--><android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>
#3.the call statck between class <com.afollestad.materialdialogs.prefs.MaterialEditTextPreference: void <init>(android.content.Context)> to <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.afollestad.materialdialogs.prefs.MaterialListPreference: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.MaterialListPreference: void init(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.PrefUtil: void setLayoutResource(android.content.Context,android.preference.Preference,android.util.AttributeSet)>[]--><android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>
#4.the call statck between class <com.afollestad.materialdialogs.prefs.MaterialListPreference: void <init>(android.content.Context,android.util.AttributeSet)> to <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.afollestad.materialdialogs.prefs.MaterialListPreference: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.prefs.MaterialListPreference: void init(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.PrefUtil: void setLayoutResource(android.content.Context,android.preference.Preference,android.util.AttributeSet)>[]--><android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>
#5.the call statck between class <com.afollestad.materialdialogs.prefs.MaterialListPreference: void <init>(android.content.Context)> to <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.afollestad.materialdialogs.prefs.MaterialListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.afollestad.materialdialogs.prefs.MaterialListPreference: void init(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.PrefUtil: void setLayoutResource(android.content.Context,android.preference.Preference,android.util.AttributeSet)>[]--><android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>
#6.the call statck between class <com.afollestad.materialdialogs.prefs.MaterialListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.afollestad.materialdialogs.prefs.MaterialEditTextPreference: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.MaterialEditTextPreference: void init(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.PrefUtil: void setLayoutResource(android.content.Context,android.preference.Preference,android.util.AttributeSet)>[]--><android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>
#7.the call statck between class <com.afollestad.materialdialogs.prefs.MaterialEditTextPreference: void <init>(android.content.Context,android.util.AttributeSet)> to <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.afollestad.materialdialogs.prefs.MaterialMultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.MaterialMultiSelectListPreference: void init(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.PrefUtil: void setLayoutResource(android.content.Context,android.preference.Preference,android.util.AttributeSet)>[]--><android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>
#8.the call statck between class <com.afollestad.materialdialogs.prefs.MaterialMultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet)> to <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.afollestad.materialdialogs.prefs.MaterialMultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.afollestad.materialdialogs.prefs.MaterialMultiSelectListPreference: void init(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.PrefUtil: void setLayoutResource(android.content.Context,android.preference.Preference,android.util.AttributeSet)>[]--><android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>
#9.the call statck between class <com.afollestad.materialdialogs.prefs.MaterialMultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.afollestad.materialdialogs.prefs.MaterialDialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.MaterialDialogPreference: void init(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.prefs.PrefUtil: void setLayoutResource(android.content.Context,android.preference.Preference,android.util.AttributeSet)>[]--><android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>
#10.the call statck between class <com.afollestad.materialdialogs.prefs.MaterialDialogPreference: void <init>(android.content.Context,android.util.AttributeSet)> to <android.content.res.XmlResourceParser: java.lang.String getAttributeNamespace(int)>has compatibility isssues！
-----------------------------------------
crashApis:185
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 391 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 392 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void requestPermission()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()>[]--><android.view.inputmethod.InputContentInfo: void requestPermission()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()> to <android.view.inputmethod.InputContentInfo: void requestPermission()>has compatibility isssues！
-----------------------------------------
crashApis:186
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 393 Potential Issue API: SDKCheck of <android.view.MenuItem: int getAlphabeticModifiers()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: int getAlphabeticModifiers()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)> to <android.view.MenuItem: int getAlphabeticModifiers()>has compatibility isssues！
-----------------------------------------
crashApis:187
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 394 Potential Issue API: SDKCheck of <android.app.RemoteAction: void setEnabled(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><android.app.RemoteAction: void setEnabled(boolean)>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.app.RemoteAction: void setEnabled(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:188
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 395 Potential Issue API: SDKCheck of <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <com.danielstone.materialaboutlibrary.items.MaterialAboutActionItem$Builder: com.danielstone.materialaboutlibrary.items.MaterialAboutActionItem$Builder subTextHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 396 Potential Issue API: SDKCheck of <android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-i0 < 26]]
-i1 < 20
i0 < 26
-i0 < 26
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-i0 < 26]]--><android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 397 Potential Issue API: SDKCheck of <java.awt.Adjustable: void addAdjustmentListener(java.awt.event.AdjustmentListener)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.LF5SwingUtils: void makeVerticalScrollBarTrack(javax.swing.JScrollPane)>[]--><org.apache.log4j.lf5.viewer.LF5SwingUtils: void makeScrollBarTrack(java.awt.Adjustable)>[]--><java.awt.Adjustable: void addAdjustmentListener(java.awt.event.AdjustmentListener)>
#1.the call statck between class <org.apache.log4j.lf5.viewer.LF5SwingUtils: void makeVerticalScrollBarTrack(javax.swing.JScrollPane)> to <java.awt.Adjustable: void addAdjustmentListener(java.awt.event.AdjustmentListener)>has compatibility isssues！
-----------------------------------------
crashApis:189
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 398 Potential Issue API: SDKCheck of <java.awt.Font: boolean isTransformed()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: boolean isTransformed()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: boolean isTransformed()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: boolean isTransformed()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: boolean isTransformed()>has compatibility isssues！
-----------------------------------------
crashApis:190
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 399 Potential Issue API: SDKCheck of <java.awt.BasicStroke: float[] getDashArray()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
crashApis:191
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 400 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()>has compatibility isssues！
-----------------------------------------
crashApis:192
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 401 Potential Issue API: SDKCheck of <java.awt.Color: int getBlue()> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: int getBlue()>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: int getBlue()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
crashApis:193
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 402 Potential Issue API: SDKCheck of <android.app.RemoteAction: boolean isEnabled()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: boolean isEnabled()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: boolean isEnabled()>has compatibility isssues！
-----------------------------------------
crashApis:194
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 403 Potential Issue API: SDKCheck of <java.awt.image.ColorModel: boolean isAlphaPremultiplied()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.ColorModel: boolean isAlphaPremultiplied()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.ColorModel: boolean isAlphaPremultiplied()>has compatibility isssues！
-----------------------------------------
crashApis:195
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 404 Potential Issue API: SDKCheck of <java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>[]--><java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)> to <java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:196
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 405 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)> is checking!!!
The life time of api is [1,8]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#6.the call statck between class <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
crashApis:197
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 406 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.ColorSpace.Model getModel()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.ColorSpace.Model getModel()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.ColorSpace.Model getModel()>has compatibility isssues！
-----------------------------------------
crashApis:198
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 407 Potential Issue API: SDKCheck of <android.view.View: void setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.View: void setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 408 Potential Issue API: SDKCheck of <java.awt.Component: void addKeyListener(java.awt.event.KeyListener)> is checking!!!
The life time of api is [1,8]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 409 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[]--><android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>
#1.the call statck between class <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)> to <android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>has compatibility isssues！
-----------------------------------------
crashApis:199
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 410 Potential Issue API: SDKCheck of <android.os.LocaleList: void <init>(java.util.Locale[])> is checking!!!
The life time of api is [24,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i1 < 21
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)>[[$i1 < 21]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: void <clinit>()>[]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 411 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: int getLayoutDirection()> is checking!!!
The life time of api is [23,31]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
-i0 < 23
Good road: <com.google.android.material.chip.Chip: android.graphics.Rect access$300(com.google.android.material.chip.Chip)>[]--><com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 17
-i0 < 23
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>[[-$i0 < 17]]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
try
Good road with try: <com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int)>[[try]]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void getChipTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void getFocusedRect(android.graphics.Rect)>[]--><com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawChipIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawDebug(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawText(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateTextBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: boolean onHoverEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: android.graphics.RectF access$200(com.google.android.material.chip.Chip)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 412 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions setLaunchBounds(android.graphics.Rect)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 24
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)>[[$i0 >= 24]]--><android.app.ActivityOptions: android.app.ActivityOptions setLaunchBounds(android.graphics.Rect)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 413 Potential Issue API: SDKCheck of <android.content.Context: java.util.concurrent.Executor getMainExecutor()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>[[-$i0 < 28]]--><android.content.Context: java.util.concurrent.Executor getMainExecutor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 414 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getHintText()>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 415 Potential Issue API: SDKCheck of <java.awt.geom.Point2D: double getY()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
crashApis:200
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 416 Potential Issue API: SDKCheck of <android.content.Context: boolean isDeviceProtectedStorage()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: boolean isDeviceProtectedStorage()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 417 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.LockActivity: void onResume()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: void startAuth()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: android.hardware.fingerprint.FingerprintManager$CryptoObject getCryptoObject()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean cipherInit()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean generateKey()>[[try]]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 418 Potential Issue API: SDKCheck of <android.os.LocaleList: int indexOf(java.util.Locale)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)>[]--><androidx.core.os.LocaleListPlatformWrapper: int indexOf(java.util.Locale)>[]--><android.os.LocaleList: int indexOf(java.util.Locale)>
#1.the call statck between class <androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)> to <android.os.LocaleList: int indexOf(java.util.Locale)>has compatibility isssues！
-----------------------------------------
crashApis:201
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 419 Potential Issue API: SDKCheck of <android.view.Window.Callback: boolean onSearchRequested(android.view.SearchEvent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 420 Potential Issue API: SDKCheck of <android.os.LocaleList: java.lang.String toString()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()>[]--><android.os.LocaleList: java.lang.String toString()>
#1.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()> to <android.os.LocaleList: java.lang.String toString()>has compatibility isssues！
-----------------------------------------
crashApis:202
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 421 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])> is checking!!!
The life time of api is [22,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.SearchActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_SearchActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.SearchActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:203
crashApisInMain:7
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 422 Potential Issue API: SDKCheck of <android.os.LocaleList: java.util.Locale get(int)> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-i0 < 18
-$i0 < 24
Good road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerPresenter: void onCreate(com.philliphsu.bottomsheetpickers.time.numberpad.INumberPadTimePicker$State)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel: boolean isAmPmWrittenBeforeTime()>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: boolean isAmPmWrittenBeforeTime(android.content.Context)>[[-i0 < 18]]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: java.util.Locale getPrimaryLocale(android.content.Context)>[[-$i0 < 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
-i0 < 18
-$i0 < 24
Good road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerPresenter: void <init>(com.philliphsu.bottomsheetpickers.time.numberpad.INumberPadTimePicker$View,com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel,boolean)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel: java.lang.String getTimeSeparator(boolean)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: java.lang.String getTimeSeparator(android.content.Context,boolean)>[[-i0 < 18]]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: java.util.Locale getPrimaryLocale(android.content.Context)>[[-$i0 < 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
-i0 < 18
-$i0 < 24
Good road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerPresenter: void <init>(com.philliphsu.bottomsheetpickers.time.numberpad.INumberPadTimePicker$View,com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel,boolean)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.ButtonTextModel: void <init>(com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel,boolean)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.LocaleModel: java.lang.String getTimeSeparator(boolean)>[]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: java.lang.String getTimeSeparator(android.content.Context,boolean)>[[-i0 < 18]]--><com.philliphsu.bottomsheetpickers.time.numberpad.DateTimeFormatUtils: java.util.Locale getPrimaryLocale(android.content.Context)>[[-$i0 < 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.util.Locale get(int)>[]--><androidx.core.os.LocaleListPlatformWrapper: java.util.Locale get(int)>[]--><android.os.LocaleList: java.util.Locale get(int)>
#3.the call statck between class <androidx.core.os.LocaleListCompat: java.util.Locale get(int)> to <android.os.LocaleList: java.util.Locale get(int)>has compatibility isssues！
-----------------------------------------
crashApis:204
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 423 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
10call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.oriondev.moneywallet.App: void onCreate()>[]--><com.oriondev.moneywallet.ui.notification.NotificationContract: void initializeNotificationChannels(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
9 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: boolean zzb(com.google.android.gms.common.api.internal.zzb)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.zzad: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability$zza: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
containsStatic:true
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 424 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)> to <android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
crashApis:205
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 425 Potential Issue API: SDKCheck of <android.app.RemoteInput: void setResultsSource(android.content.Intent,int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-i1 < 28]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-i1 < 28]]
-i1 < 20
i0 < 26
-i1 < 28
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-i1 < 28]]--><android.app.RemoteInput: void setResultsSource(android.content.Intent,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 426 Potential Issue API: SDKCheck of <java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)> to <java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)> to <java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)>has compatibility isssues！
-----------------------------------------
crashApis:206
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 427 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: java.awt.Graphics getGraphics()> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
crashApis:207
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 428 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()>has compatibility isssues！
-----------------------------------------
crashApis:208
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 429 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager.RemoteUserInfo: java.lang.String getPackageName()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: java.lang.String getPackageName()>[]--><android.media.session.MediaSessionManager.RemoteUserInfo: java.lang.String getPackageName()>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: java.lang.String getPackageName()> to <android.media.session.MediaSessionManager.RemoteUserInfo: java.lang.String getPackageName()>has compatibility isssues！
-----------------------------------------
crashApis:209
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 430 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(float[])>[]--><java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)>
#1.the call statck between class <com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(float[])> to <java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)>has compatibility isssues！
-----------------------------------------
crashApis:210
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 431 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.geom.AffineTransform getTransform()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.geom.AffineTransform getTransform()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.awt.geom.AffineTransform getTransform()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.geom.AffineTransform getTransform()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.geom.AffineTransform getTransform()>has compatibility isssues！
-----------------------------------------
crashApis:211
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 432 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View)>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 433 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
crashApis:212
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 434 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
crashApis:213
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 435 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[-$i0 < 28]]--><android.app.NotificationManager: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 436 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.app.AlarmManagerCompat: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)>[[-$i2 < 23]]--><android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 437 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:214
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 438 Potential Issue API: SDKCheck of <java.awt.event.AdjustmentEvent: java.awt.Adjustable getAdjustable()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)>[]--><java.awt.event.AdjustmentEvent: java.awt.Adjustable getAdjustable()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)> to <java.awt.event.AdjustmentEvent: java.awt.Adjustable getAdjustable()>has compatibility isssues！
-----------------------------------------
crashApis:215
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 439 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()>has compatibility isssues！
-----------------------------------------
crashApis:216
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 440 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetLeft()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetLeft()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 441 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 442 Potential Issue API: SDKCheck of <java.awt.event.MouseEvent: int getX()> is checking!!!
The life time of api is [1,8]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean inCheckBoxHitRegion(java.awt.event.MouseEvent)>[]--><java.awt.event.MouseEvent: int getX()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)> to <java.awt.event.MouseEvent: int getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2: void mousePressed(java.awt.event.MouseEvent)>[]--><java.awt.event.MouseEvent: int getX()>
#2.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2: void mousePressed(java.awt.event.MouseEvent)> to <java.awt.event.MouseEvent: int getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean shouldSelectCell(java.util.EventObject)>[]--><java.awt.event.MouseEvent: int getX()>
#3.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean shouldSelectCell(java.util.EventObject)> to <java.awt.event.MouseEvent: int getX()>has compatibility isssues！
-----------------------------------------
crashApis:217
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 443 Potential Issue API: SDKCheck of <android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)>[[-$i0 < 24]]--><android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>
One road protect good!
$i0 < 24
!!!this api will crash on sdk 21 22 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)>[[$i0 < 24]]--><androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks()>[]--><android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)> to <android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>has compatibility isssues！
-----------------------------------------
crashApis:218
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 444 Potential Issue API: SDKCheck of <java.awt.event.ActionListener: void actionPerformed(java.awt.event.ActionEvent)> is checking!!!
The life time of api is [1,8]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 445 Potential Issue API: SDKCheck of <java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 446 Potential Issue API: SDKCheck of <android.app.Service: void stopForeground(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.app.ServiceCompat: void stopForeground(android.app.Service,int)>[[-$i1 < 24]]--><android.app.Service: void stopForeground(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 447 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.net.Uri getUri()> is checking!!!
The life time of api is [28,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 448 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager.RemoteUserInfo: void <init>(java.lang.String,int,int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: void <init>(java.lang.String,int,int)>[]--><android.media.session.MediaSessionManager.RemoteUserInfo: void <init>(java.lang.String,int,int)>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: void <init>(java.lang.String,int,int)> to <android.media.session.MediaSessionManager.RemoteUserInfo: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:219
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 449 Potential Issue API: SDKCheck of <android.view.View: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)>[[-i1 < 28]]--><android.view.View: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 450 Potential Issue API: SDKCheck of <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
crashApis:220
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 451 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetRight()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetRight()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 452 Potential Issue API: SDKCheck of <java.awt.RenderingHints: void clear()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setRenderingHints(java.util.Map)>[]--><java.awt.RenderingHints: void clear()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setRenderingHints(java.util.Map)> to <java.awt.RenderingHints: void clear()>has compatibility isssues！
-----------------------------------------
crashApis:221
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 453 Potential Issue API: SDKCheck of <java.awt.BasicStroke: float getLineWidth()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
crashApis:222
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 454 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager.RemoteUserInfo: int getUid()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: int getUid()>[]--><android.media.session.MediaSessionManager.RemoteUserInfo: int getUid()>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: int getUid()> to <android.media.session.MediaSessionManager.RemoteUserInfo: int getUid()>has compatibility isssues！
-----------------------------------------
crashApis:223
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 455 Potential Issue API: SDKCheck of <android.media.AudioAttributes: int getVolumeControlStream()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.media.AudioAttributesCompat: int getVolumeControlStream()>[]--><androidx.media.AudioAttributesImplApi21: int getVolumeControlStream()>[[-$i0 < 26]]--><android.media.AudioAttributes: int getVolumeControlStream()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 456 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPaneTitle()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 457 Potential Issue API: SDKCheck of <java.awt.geom.PathIterator: int currentSegment(double[])> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
crashApis:224
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 458 Potential Issue API: SDKCheck of <android.view.ViewGroup: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>[[try]]--><android.view.ViewGroup: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 459 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 460 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setConversationTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setConversationTitle(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 461 Potential Issue API: SDKCheck of <android.graphics.Color: int getComponentCount()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: int getComponentCount()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: int getComponentCount()>has compatibility isssues！
-----------------------------------------
crashApis:225
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 462 Potential Issue API: SDKCheck of <java.awt.event.MouseEvent: int getClickCount()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor: boolean shouldSelectCell(java.util.EventObject)>[]--><java.awt.event.MouseEvent: int getClickCount()>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor: boolean shouldSelectCell(java.util.EventObject)>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor: boolean isCellEditable(java.util.EventObject)>[]--><java.awt.event.MouseEvent: int getClickCount()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor: boolean shouldSelectCell(java.util.EventObject)> to <java.awt.event.MouseEvent: int getClickCount()>has compatibility isssues！
-----------------------------------------
crashApis:226
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 463 Potential Issue API: SDKCheck of <android.view.View: boolean hasExplicitFocusable()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean hasExplicitFocusable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 464 Potential Issue API: SDKCheck of <android.app.Person: java.lang.CharSequence getName()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.CharSequence getName()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 465 Potential Issue API: SDKCheck of <java.awt.Component: void <init>()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D$FakeComponent: void <init>()>[]--><java.awt.Component: void <init>()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D$FakeComponent: void <init>()> to <java.awt.Component: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D$FakeComponent: void <init>(com.itextpdf.awt.PdfGraphics2D$1)>[[]]--><java.awt.Component: void <init>()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D$FakeComponent: void <init>(com.itextpdf.awt.PdfGraphics2D$1)> to <java.awt.Component: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:227
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 466 Potential Issue API: SDKCheck of <android.telephony.mbms.ServiceInfo: java.lang.CharSequence getNameForLocale(java.util.Locale)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.telephony.mbms.ServiceInfo: java.lang.CharSequence getNameForLocale(java.util.Locale)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 467 Potential Issue API: SDKCheck of <java.awt.Toolkit: java.lang.String[] getFontList()> is checking!!!
The life time of api is [1,8]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.Toolkit: java.lang.String[] getFontList()>
#1.the call statck between class <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])> to <java.awt.Toolkit: java.lang.String[] getFontList()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.Toolkit: java.lang.String[] getFontList()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.Toolkit: java.lang.String[] getFontList()>
#3.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])> to <java.awt.Toolkit: java.lang.String[] getFontList()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>[]--><java.awt.Toolkit: java.lang.String[] getFontList()>
#4.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.Toolkit: java.lang.String[] getFontList()>has compatibility isssues！
-----------------------------------------
crashApis:228
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 468 Potential Issue API: SDKCheck of <java.awt.Insets: void <init>(int,int,int,int)> is checking!!!
The life time of api is [1,8]
96call roads:
0 Mainhead roads:
96 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.gms.common.api.internal.zza$zza: void onStop()>[]--><org.apache.log4j.lf5.util.LogFileParser: void run()>[]--><org.apache.log4j.lf5.util.LogFileParser: void displayError(java.lang.String)>[]--><org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog: void <init>(javax.swing.JFrame,java.lang.String)>[]--><org.apache.log4j.lf5.viewer.LogFactor5Dialog: void wrapStringOnPanel(java.lang.String,java.awt.Container)>[]--><java.awt.Insets: void <init>(int,int,int,int)>
#44.the call statck between class <com.google.android.gms.common.api.internal.zza$zza: void onStop()> to <java.awt.Insets: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:229
containsStatic:false
containsTry:true
45call by main package
-----------------------------------------
#################################################
N 469 Potential Issue API: SDKCheck of <java.awt.Color: float[] getColorComponents(float[])> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
crashApis:230
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 470 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>[]--><android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)> to <android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:231
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 471 Potential Issue API: SDKCheck of <android.view.inputmethod.InputConnectionWrapper: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-i1 < 25]]--><androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>[]--><android.view.inputmethod.InputConnectionWrapper: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 472 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTooltipText(java.lang.CharSequence)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 473 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setItalic(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setItalic(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 474 Potential Issue API: SDKCheck of <android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)>[]--><android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)> to <android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>has compatibility isssues！
-----------------------------------------
crashApis:232
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 475 Potential Issue API: SDKCheck of <android.view.View: void setScrollIndicators(int,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)>[[-$i2 < 23]]--><android.view.View: void setScrollIndicators(int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 476 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)>[[-$i0 < 23]]--><android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 477 Potential Issue API: SDKCheck of <android.app.job.JobParameters: void completeWork(android.app.job.JobWorkItem)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void complete()>[[try]]--><android.app.job.JobParameters: void completeWork(android.app.job.JobWorkItem)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 478 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setExitTransition(android.transition.Transition)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 479 Potential Issue API: SDKCheck of <java.awt.BasicStroke: float getMiterLimit()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
crashApis:233
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 480 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i4 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)>[[], [-$i4 < 26]]--><android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)> to <android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:234
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 481 Potential Issue API: SDKCheck of <javax.imageio.ImageWriteParam: void setCompressionQuality(float)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 482 Potential Issue API: SDKCheck of <javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 483 Potential Issue API: SDKCheck of <java.awt.Component: void setSize(int,int)> is checking!!!
The life time of api is [1,8]
101call roads:
0 Mainhead roads:
101 Packageshead roads:
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFrameSize(int,int)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateFrameSize()>[]--><java.awt.Component: void setSize(int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFrameSize(int,int)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateFrameSize()>[]--><java.awt.Component: void setSize(int,int)>
#8.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.Component: void setSize(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:235
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 484 Potential Issue API: SDKCheck of <android.content.pm.PackageManager: boolean isInstantApp()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.wrappers.InstantApps: boolean isInstantApp(android.content.Context)>[[-$z0 == 0], [try]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.wrappers.InstantApps: boolean isInstantApp(android.content.Context)>[[-$z0 == 0]][[try]]
-$z0 == 0
try
Good road with try: <com.google.android.gms.common.wrappers.PackageManagerWrapper: void checkCallerIsNotInstantApp()>[]--><com.google.android.gms.common.wrappers.PackageManagerWrapper: boolean isCallerInstantApp()>[]--><com.google.android.gms.common.wrappers.InstantApps: boolean isInstantApp(android.content.Context)>[[-$z0 == 0], [try]]--><android.content.pm.PackageManager: boolean isInstantApp()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 485 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 486 Potential Issue API: SDKCheck of <android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)> is checking!!!
The life time of api is [1,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <com.github.mikephil.charting.renderer.PieChartRenderer: void drawExtras(android.graphics.Canvas)>[]--><com.github.mikephil.charting.renderer.PieChartRenderer: void drawCenterText(android.graphics.Canvas)>[]--><android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
#1.the call statck between class <com.github.mikephil.charting.renderer.PieChartRenderer: void drawExtras(android.graphics.Canvas)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.github.mikephil.charting.utils.Utils: void drawMultilineText(android.graphics.Canvas,java.lang.String,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.FSize,com.github.mikephil.charting.utils.MPPointF,float)>[]--><android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
#2.the call statck between class <com.github.mikephil.charting.utils.Utils: void drawMultilineText(android.graphics.Canvas,java.lang.String,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.FSize,com.github.mikephil.charting.utils.MPPointF,float)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:236
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 487 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)>[]--><android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)> to <android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <com.multidots.fingerprintauth.FingerPrintAuthHelper$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)>[]--><android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>
#2.the call statck between class <com.multidots.fingerprintauth.FingerPrintAuthHelper$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)> to <android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>has compatibility isssues！
-----------------------------------------
crashApis:237
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 488 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: int getHyphenationFrequency()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: int getHyphenationFrequency()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: int getHyphenationFrequency()>has compatibility isssues！
-----------------------------------------
crashApis:238
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 489 Potential Issue API: SDKCheck of <android.media.MediaMetadataRetriever: android.graphics.Bitmap getScaledFrameAtTime(long,int,int,int)> is checking!!!
The life time of api is [27,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback)>[]--><com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List)>[[try]]--><com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.resource.bitmap.VideoDecoder: android.graphics.Bitmap decodeFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)>[[-$i4 < 27]]--><com.bumptech.glide.load.resource.bitmap.VideoDecoder: android.graphics.Bitmap decodeScaledFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)>[[try]]--><android.media.MediaMetadataRetriever: android.graphics.Bitmap getScaledFrameAtTime(long,int,int,int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 490 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 491 Potential Issue API: SDKCheck of <java.awt.Polygon: void <init>()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><java.awt.Polygon: void <init>()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)> to <java.awt.Polygon: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:239
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 492 Potential Issue API: SDKCheck of <android.os.LocaleList: java.lang.String toLanguageTags()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()>[]--><androidx.core.os.LocaleListPlatformWrapper: java.lang.String toLanguageTags()>[]--><android.os.LocaleList: java.lang.String toLanguageTags()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()> to <android.os.LocaleList: java.lang.String toLanguageTags()>has compatibility isssues！
-----------------------------------------
crashApis:240
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 493 Potential Issue API: SDKCheck of <android.view.View: void updateDragShadow(android.view.View.DragShadowBuilder)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)>[[-$i0 < 24]]--><android.view.View: void updateDragShadow(android.view.View.DragShadowBuilder)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 494 Potential Issue API: SDKCheck of <java.awt.Graphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>[]--><java.awt.Graphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()> to <java.awt.Graphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>has compatibility isssues！
-----------------------------------------
crashApis:241
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 495 Potential Issue API: SDKCheck of <java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()>[]--><com.itextpdf.awt.geom.PolylineShape: java.awt.Rectangle getBounds()>[]--><com.itextpdf.awt.geom.PolylineShape: java.awt.geom.Rectangle2D getBounds2D()>[]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()> to <java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
crashApis:242
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 496 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void <init>(double[])> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void <init>(double[])>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void <init>(double[])>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
crashApis:243
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 497 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
505call roads:
1 Mainhead roads:
too lang!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 >= 21], [-i0 >= 20], [-i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26]][[i0 >= 21]][[-i0 >= 20]][[-i0 < 16]]
i0 < 26
i0 >= 21
-i0 >= 20
-i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 >= 21], [-i0 >= 20], [-i0 < 16]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
too lang!
too lang!
too lang!
too lang!
too lang!
!!!this api will crash on sdk 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.BackupListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_BackupListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.BackupListActivity: void onCreate(android.os.Bundle)>[]--><com.oriondev.moneywallet.ui.fragment.multipanel.BackupMultiPanelFragment: com.oriondev.moneywallet.ui.fragment.multipanel.BackupMultiPanelFragment newInstance(boolean,boolean)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
too lang!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
504 Packageshead roads:
!!!this api will crash on sdk 21 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()>[]--><com.google.android.material.expandable.ExpandableWidgetHelper: android.os.Bundle onSaveInstanceState()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#6.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
too lang!
too lang!
too lang!
too lang!
crashApis:244
crashApisInMain:8
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 498 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeBasic()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeBasic()>[[-$i0 < 23]]--><android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 499 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService: android.media.session.MediaSessionManager.RemoteUserInfo getCurrentBrowserInfo()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo()>[]--><android.service.media.MediaBrowserService: android.media.session.MediaSessionManager.RemoteUserInfo getCurrentBrowserInfo()>
#1.the call statck between class <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo()> to <android.service.media.MediaBrowserService: android.media.session.MediaSessionManager.RemoteUserInfo getCurrentBrowserInfo()>has compatibility isssues！
-----------------------------------------
crashApis:245
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 500 Potential Issue API: SDKCheck of <java.awt.image.BufferedImageOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><java.awt.image.BufferedImageOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.image.BufferedImageOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>has compatibility isssues！
-----------------------------------------
crashApis:246
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 501 Potential Issue API: SDKCheck of <android.app.Notification: int getBadgeIconType()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: int getBadgeIconType(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: int getBadgeIconType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 502 Potential Issue API: SDKCheck of <java.awt.geom.Point2D: double getX()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
crashApis:247
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 503 Potential Issue API: SDKCheck of <android.app.NotificationManager: boolean areNotificationsEnabled()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.app.NotificationManagerCompat: boolean areNotificationsEnabled()>[[-i0 < 24]]--><android.app.NotificationManager: boolean areNotificationsEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 504 Potential Issue API: SDKCheck of <android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])>[]--><androidx.core.os.LocaleListPlatformWrapper: java.util.Locale getFirstMatch(java.lang.String[])>[]--><android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>
#1.the call statck between class <androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])> to <android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>has compatibility isssues！
-----------------------------------------
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>
One road protect good!
crashApis:248
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 505 Potential Issue API: SDKCheck of <java.awt.Font: int getStyle()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><java.awt.Font: int getStyle()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: int getStyle()>has compatibility isssues！
-----------------------------------------
crashApis:249
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 506 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 507 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets consumeDisplayCutout()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()>[[-$i0 < 28]]--><android.view.WindowInsets: android.view.WindowInsets consumeDisplayCutout()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 508 Potential Issue API: SDKCheck of <android.os.Handler: boolean postDelayed(java.lang.Runnable,java.lang.Object,long)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>[[-i1 < 28]]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,java.lang.Object,long)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 509 Potential Issue API: SDKCheck of <java.awt.Rectangle: boolean contains(java.awt.Point)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean inCheckBoxHitRegion(java.awt.event.MouseEvent)>[]--><java.awt.Rectangle: boolean contains(java.awt.Point)>
#1.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor: boolean canEditImmediately(java.util.EventObject)> to <java.awt.Rectangle: boolean contains(java.awt.Point)>has compatibility isssues！
-----------------------------------------
crashApis:250
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 510 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 511 Potential Issue API: SDKCheck of <android.view.MenuItem: int getNumericModifiers()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: int getNumericModifiers()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)> to <android.view.MenuItem: int getNumericModifiers()>has compatibility isssues！
-----------------------------------------
crashApis:251
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 512 Potential Issue API: SDKCheck of <android.view.Window: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.view.WindowCompat: android.view.View requireViewById(android.view.Window,int)>[[-i1 < 28]]--><android.view.Window: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 513 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:252
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 514 Potential Issue API: SDKCheck of <android.app.job.JobServiceEngine: void <init>(android.app.Service)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.service.RecurrenceHandlerIntentService dummyMainMethod_com_oriondev_moneywallet_service_RecurrenceHandlerIntentService(android.content.Intent)>[]--><androidx.core.app.JobIntentService: void onCreate()>[]--><androidx.core.app.JobIntentService$JobServiceEngineImpl: void <init>(androidx.core.app.JobIntentService)>[]--><android.app.job.JobServiceEngine: void <init>(android.app.Service)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobServiceEngine: void <init>(android.app.Service)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:253
crashApisInMain:9
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 515 Potential Issue API: SDKCheck of <android.view.View: void setPointerIcon(android.view.PointerIcon)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 24
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void inflateMenu(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)>[[-$i0 < 24]]--><android.view.View: void setPointerIcon(android.view.PointerIcon)>
One road protect good!
-$i0 < 24
Good road: <com.google.android.material.tabs.TabLayout$TabView: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>[]--><androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)>[[-$i0 < 24]]--><android.view.View: void setPointerIcon(android.view.PointerIcon)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 516 Potential Issue API: SDKCheck of <android.app.Activity: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)>[[-i1 < 28]]--><android.app.Activity: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 517 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 518 Potential Issue API: SDKCheck of <android.app.ActivityOptions: void requestUsageTimeReport(android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void requestUsageTimeReport(android.app.PendingIntent)>[[-$i0 < 23]]--><android.app.ActivityOptions: void requestUsageTimeReport(android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 519 Potential Issue API: SDKCheck of <android.os.LocaleList: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23]][[-$i0 < 24]][[$i0 < 21]]
$i0 < 23
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]--><android.os.LocaleList: boolean equals(java.lang.Object)>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)>[]--><android.os.LocaleList: boolean equals(java.lang.Object)>
#2.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)> to <android.os.LocaleList: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:254
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 520 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:255
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 521 Potential Issue API: SDKCheck of <android.view.View: void dispatchStartTemporaryDetach()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.view.ViewCompat: void dispatchStartTemporaryDetach(android.view.View)>[[-i0 < 24]]--><android.view.View: void dispatchStartTemporaryDetach()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 522 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
crashApis:256
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 523 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
crashApis:257
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 524 Potential Issue API: SDKCheck of <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)>[]--><android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
#1.the call statck between class <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)> to <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>has compatibility isssues！
-----------------------------------------
crashApis:258
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 525 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isHeading()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isHeading()>[[-i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isHeading()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 526 Potential Issue API: SDKCheck of <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void init()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel)>[]--><java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>
#1.the call statck between class <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])> to <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void init()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel)>[]--><java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel)>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void init()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel)>[]--><java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>
#3.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel)> to <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void init()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel)>[]--><java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>
#4.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])> to <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void init()>[]--><org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel)>[]--><java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>
#5.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>has compatibility isssues！
-----------------------------------------
crashApis:259
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 527 Potential Issue API: SDKCheck of <android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>[[-$i1 < 24]]--><android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 528 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View)>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 529 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getChannelId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: java.lang.String getChannelId(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: java.lang.String getChannelId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 530 Potential Issue API: SDKCheck of <android.widget.PopupWindow: int getWindowLayoutType()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: int getWindowLayoutType(android.widget.PopupWindow)>[[-$i0 < 23]]--><android.widget.PopupWindow: int getWindowLayoutType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 531 Potential Issue API: SDKCheck of <android.view.View: void setNextClusterForwardId(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: void setNextClusterForwardId(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setNextClusterForwardId(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 532 Potential Issue API: SDKCheck of <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
crashApis:260
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 533 Potential Issue API: SDKCheck of <java.awt.RenderingHints: void putAll(java.util.Map)> is checking!!!
The life time of api is [1,8]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void addRenderingHints(java.util.Map)>[]--><java.awt.RenderingHints: void putAll(java.util.Map)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void addRenderingHints(java.util.Map)> to <java.awt.RenderingHints: void putAll(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><java.awt.RenderingHints: void putAll(java.util.Map)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()> to <java.awt.RenderingHints: void putAll(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setRenderingHints(java.util.Map)>[]--><java.awt.RenderingHints: void putAll(java.util.Map)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setRenderingHints(java.util.Map)> to <java.awt.RenderingHints: void putAll(java.util.Map)>has compatibility isssues！
-----------------------------------------
crashApis:261
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 534 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])> is checking!!!
The life time of api is [24,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 535 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 536 Potential Issue API: SDKCheck of <android.widget.TextView: android.text.PrecomputedText.Params getTextMetricsParams()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 28]]--><android.widget.TextView: android.text.PrecomputedText.Params getTextMetricsParams()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 537 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 538 Potential Issue API: SDKCheck of <android.widget.TextView: void setLastBaselineToBottomHeight(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 539 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 540 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: int getWidth()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 541 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()>[]--><android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()> to <android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()>has compatibility isssues！
-----------------------------------------
crashApis:262
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 542 Potential Issue API: SDKCheck of <java.beans.IntrospectionException: void <init>(java.lang.String)> is checking!!!
The life time of api is [1,8]
3988call roads:
1 Mainhead roads:
3987 Packageshead roads:
Roads number exceed, exit!3987
#################################################
N 543 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 544 Potential Issue API: SDKCheck of <java.awt.FontMetrics: int getHeight()> is checking!!!
The life time of api is [1,8]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogTable: void setFont(java.awt.Font)>[]--><java.awt.FontMetrics: int getHeight()>
#1.the call statck between class <org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])> to <java.awt.FontMetrics: int getHeight()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>[]--><org.apache.log4j.lf5.LF5Appender: void <init>()>[]--><org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>[[try]]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogTable: void setFont(java.awt.Font)>[]--><java.awt.FontMetrics: int getHeight()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogTable: void setFont(java.awt.Font)>[]--><java.awt.FontMetrics: int getHeight()>
#3.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])> to <java.awt.FontMetrics: int getHeight()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>[]--><org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>[]--><org.apache.log4j.lf5.viewer.LogTable: void setFont(java.awt.Font)>[]--><java.awt.FontMetrics: int getHeight()>
#4.the call statck between class <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)> to <java.awt.FontMetrics: int getHeight()>has compatibility isssues！
-----------------------------------------
crashApis:263
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 545 Potential Issue API: SDKCheck of <android.media.ExifInterface: void <init>(java.io.InputStream)> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)>[]--><com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)>[]--><android.media.ExifInterface: void <init>(java.io.InputStream)>
#1.the call statck between class <com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)> to <android.media.ExifInterface: void <init>(java.io.InputStream)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.bumptech.glide.load.data.mediastore.ThumbFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)>[[try]]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: java.io.InputStream openThumbInputStream()>[]--><com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: int getOrientation(android.net.Uri)>[[try]]--><com.bumptech.glide.load.ImageHeaderParserUtils: int getOrientation(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)>[[try]]--><com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)>[]--><android.media.ExifInterface: void <init>(java.io.InputStream)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeFromWrappedStreams(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks)>[]--><com.bumptech.glide.load.ImageHeaderParserUtils: int getOrientation(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)>[[try]]--><com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)>[]--><android.media.ExifInterface: void <init>(java.io.InputStream)>
One road protect good!
crashApis:264
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 546 Potential Issue API: SDKCheck of <android.view.DragAndDropPermissions: void release()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.DragAndDropPermissionsCompat: void release()>[[-$i0 < 24]]--><android.view.DragAndDropPermissions: void release()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 547 Potential Issue API: SDKCheck of <java.awt.Component: void setVisible(boolean)> is checking!!!
The life time of api is [1,8]
98call roads:
0 Mainhead roads:
98 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.gms.common.api.internal.zza$zza: void onStop()>[]--><org.apache.log4j.lf5.viewer.LogBrokerMonitor$1: void run()>[]--><java.awt.Component: void setVisible(boolean)>
#23.the call statck between class <com.google.android.gms.common.api.internal.zza$zza: void onStop()> to <java.awt.Component: void setVisible(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:265
containsStatic:false
containsTry:true
24call by main package
-----------------------------------------
#################################################
N 548 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: java.util.List getDynamicShortcuts(android.content.Context)>[[-i0 < 25]]--><android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 549 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getType()> is checking!!!
The life time of api is [1,30]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 <= 13
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.MapTileProviderBasic: boolean isDowngradedMode(long)>[]--><org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getNetworkAvailable()>[[-$i0 <= 13]]--><android.net.NetworkInfo: int getType()>
#1.the call statck between class <org.osmdroid.tileprovider.MapTileProviderBasic: boolean isDowngradedMode(long)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
-$i0 <= 13
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable loadTile(long)>[]--><org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getNetworkAvailable()>[[-$i0 <= 13]]--><android.net.NetworkInfo: int getType()>
#2.the call statck between class <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable loadTile(long)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
i0 < 16
Good road: <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>[[i0 < 16]]--><android.net.NetworkInfo: int getType()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>[]--><android.net.NetworkInfo: int getType()>
#4.the call statck between class <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
crashApis:266
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 550 Potential Issue API: SDKCheck of <android.os.UserManager: boolean isUserUnlocked()> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <com.google.android.gms.common.config.GservicesValue: java.lang.Object getBinderSafe()>[]--><com.google.android.gms.common.config.GservicesValue: java.lang.Object get()>[[try]]--><com.google.android.gms.common.config.GservicesValue: boolean zzd(android.content.Context)>[[-$yysi0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
try
Good road with try: <com.google.android.gms.common.config.GservicesValue: void zza(android.content.Context,com.google.android.gms.common.config.GservicesValue$zza,java.util.HashSet)>[[try]]--><com.google.android.gms.common.config.GservicesValue: boolean zzd(android.content.Context)>[[-$yysi0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
-$yysi0 < 24
Good road: <com.google.android.gms.common.config.GservicesValue: void init(android.content.Context)>[]--><com.google.android.gms.common.config.GservicesValue: boolean zzd(android.content.Context)>[[-$yysi0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
-$i0 < 24
Good road: <androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
containsStatic:true
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 551 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannelGroup(android.app.NotificationChannelGroup)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(android.app.NotificationChannelGroup)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannelGroup(android.app.NotificationChannelGroup)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 552 Potential Issue API: SDKCheck of <android.view.View: void setImportantForAutofill(int)> is checking!!!
The life time of api is [26,31]
15call roads:
0 Mainhead roads:
15 Packageshead roads:
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedPinLockView: void <init>(android.content.Context)>[]--><com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.mikepenz.materialdrawer.MiniDrawer: android.view.View build(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedPinLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedTimelineView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.oriondev.moneywallet.ui.view.calendar.TimelineView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.fragment.stub.StubListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.oriondev.moneywallet.ui.view.theme.ThemedMonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.oriondev.moneywallet.ui.view.calendar.MonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
containsStatic:false
containsTry:false
16call by main package
-----------------------------------------
#################################################
N 553 Potential Issue API: SDKCheck of <android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)>[]--><android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)> to <android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)>has compatibility isssues！
-----------------------------------------
crashApis:267
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 554 Potential Issue API: SDKCheck of <java.beans.PropertyEditor: void setAsText(java.lang.String)> is checking!!!
The life time of api is [1,8]
3984call roads:
1 Mainhead roads:
3983 Packageshead roads:
Roads number exceed, exit!3983
#################################################
N 555 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 556 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setImportantForAccessibility(boolean)>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 557 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
-i0 < 23
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.LockActivity: void onResume()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: void startAuth()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean checkFingerPrintAvailability(android.content.Context)>[[-i0 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()>[[-i0 < 23]]--><android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 558 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 559 Potential Issue API: SDKCheck of <android.graphics.Paint: android.os.LocaleList getTextLocales()> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24]][[$i0 < 21]]
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24], [$i0 < 21]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23]][[-$i0 < 24]][[$i0 < 21]]
$i0 < 23
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
-$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: int hashCode()>[[-$i0 < 24]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 560 Potential Issue API: SDKCheck of <java.awt.Shape: java.awt.Rectangle getBounds()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()>[]--><java.awt.Shape: java.awt.Rectangle getBounds()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()> to <java.awt.Shape: java.awt.Rectangle getBounds()>has compatibility isssues！
-----------------------------------------
crashApis:268
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 561 Potential Issue API: SDKCheck of <android.app.Person: java.lang.String getKey()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getKey()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 562 Potential Issue API: SDKCheck of <android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()>[]--><android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>
#1.the call statck between class <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()> to <android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>has compatibility isssues！
-----------------------------------------
crashApis:269
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 563 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()>[]--><android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()> to <android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>has compatibility isssues！
-----------------------------------------
crashApis:270
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 564 Potential Issue API: SDKCheck of <android.os.LocaleList: boolean isEmpty()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: boolean isEmpty()>[]--><androidx.core.os.LocaleListPlatformWrapper: boolean isEmpty()>[]--><android.os.LocaleList: boolean isEmpty()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: boolean isEmpty()> to <android.os.LocaleList: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
crashApis:271
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 565 Potential Issue API: SDKCheck of <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)> is checking!!!
The life time of api is [1,8]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
crashApis:272
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 566 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)> is checking!!!
The life time of api is [24,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
-i0 < 24
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 567 Potential Issue API: SDKCheck of <android.content.Context: int getColor(int)> is checking!!!
The life time of api is [23,31]
518call roads:
1 Mainhead roads:
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditPersonActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditPersonActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CategorySortActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CategorySortActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.dropbox.core.android.AuthActivity dummyMainMethod_com_dropbox_core_android_AuthActivity(android.content.Intent)>[]--><com.dropbox.core.android.AuthActivity: void onResume()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.WalletSortActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_WalletSortActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.BackendExplorerActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_BackendExplorerActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditTransactionModelActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditTransactionModelActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditCategoryActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditCategoryActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.BackupListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_BackupListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.BackupListActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditCurrencyActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditCurrencyActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.WalletListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_WalletListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditDebtActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditDebtActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.AboutActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_AboutActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.DonationActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_DonationActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.SearchActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_SearchActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LauncherActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LauncherActivity(android.content.Intent)>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.MapActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_MapActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.MapActivity: void onPause()>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.TransactionListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_TransactionListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditTransferModelActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditTransferModelActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CalculatorActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CalculatorActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditWalletActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditWalletActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CurrencyListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CurrencyListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CalendarActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CalendarActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.MultiPanelActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.IconListActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_IconListActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransactionActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditRecurrentTransactionActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditEventActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditEventActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditSavingActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditSavingActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditTransferActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditTransferActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CategoryPickerActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CategoryPickerActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditBudgetActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditBudgetActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.MainActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_MainActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.TutorialActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_TutorialActivity(android.content.Intent)>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.ImportExportActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_ImportExportActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditTransactionActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditTransactionActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditPlaceActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditPlaceActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.NewEditPlaceActivity: void onPause()>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.CurrencyConverterActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_CurrencyConverterActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.PeriodDetailActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_PeriodDetailActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.PlacePickerActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_PlacePickerActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.PlacePickerActivity: void onPause()>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onPause()>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.fragment.app.FragmentController: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchPause()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.NewEditRecurrentTransferActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_NewEditRecurrentTransferActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.base.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
517 Packageshead roads:
-$i1 < 23
Good road: <androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.bumptech.glide.request.RequestFutureTarget: boolean cancel(boolean)>[[try]]--><com.bumptech.glide.request.RequestFutureTarget: void clearOnMainThread()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.google.android.gms.common.api.GoogleApi: void <init>(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings)>[]--><com.google.android.gms.common.api.internal.zzad: void zza(android.app.Activity,com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.internal.zzh)>[]--><com.google.android.gms.common.api.internal.zzad: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>[]--><com.google.android.gms.common.api.internal.zzbr: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zzp: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager$zza: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.internal.zzp: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.zzbd: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>[[try]]--><com.google.android.gms.common.api.internal.zzaj: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>[]--><com.google.android.gms.common.api.internal.zzaj: void zzat()>[]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner: void run()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.bumptech.glide.RequestBuilder$1: void run()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.bumptech.glide.RequestManager$2: void run()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.MessageThreadUtil$1: void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.YearPickerView$YearAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.philliphsu.bottomsheetpickers.date.TextViewWithIndicator: void setTheme(android.content.Context,boolean)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.PagingDayPickerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.philliphsu.bottomsheetpickers.date.PagingDayPickerView: void init(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.date.MonthPickerView: void setTheme(android.content.Context,boolean)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.views.MapView: void onDetachedFromWindow()>[]--><org.osmdroid.views.MapView: void onDetach()>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDetach(org.osmdroid.views.MapView)>[]--><org.osmdroid.views.overlay.TilesOverlay: void onDetach(org.osmdroid.views.MapView)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.views.MapView: void setTileProvider(org.osmdroid.tileprovider.MapTileProviderBase)>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void clearTileCache()>[]--><org.osmdroid.tileprovider.MapTileCache: void clear()>[]--><org.osmdroid.tileprovider.MapTileCache: void remove(long)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.views.MapView: void setTileProvider(org.osmdroid.tileprovider.MapTileProviderBase)>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void detach()>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void clearTileCache()>[]--><org.osmdroid.tileprovider.MapTileCache: void clear()>[]--><org.osmdroid.tileprovider.MapTileCache: void remove(long)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.ui.view.theme.ThemedPinLockView: void <init>(android.content.Context)>[]--><com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context)>[]--><com.andrognito.pinlockview.PinLockView: void init(android.util.AttributeSet,int)>[[try]]--><com.andrognito.pinlockview.ResourceUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.ui.fragment.secondary.UtilitySettingFragment: void onCreate(android.os.Bundle)>[]--><androidx.preference.PreferenceFragmentCompat: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.grid.MinutesGrid: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.grid.MinutesGrid: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.grid.HoursGrid: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.PagingMonthAdapter: com.philliphsu.bottomsheetpickers.date.MonthView createMonthView(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.date.PagingMonthAdapter: com.philliphsu.bottomsheetpickers.date.MonthView createMonthView(android.content.Context,boolean)>[]--><com.philliphsu.bottomsheetpickers.date.PagingMonthAdapter: com.philliphsu.bottomsheetpickers.date.MonthView createMonthView(android.content.Context,boolean,int)>[]--><com.philliphsu.bottomsheetpickers.date.SimpleMonthView: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.date.MonthView: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.date.MonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Callable)>[]--><com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.EngineJob$MainThreadCallback: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.load.engine.EngineJob: void handleResultOnMainThread()>[]--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: void recycle()>[]--><com.bumptech.glide.load.engine.EngineResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void clear()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.NewEditPlaceActivity$1: void onClick(android.view.View)>[]--><com.oriondev.moneywallet.picker.IconPicker: void showPicker()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: com.github.rubensousa.bottomsheetbuilder.BottomSheetMenuDialog createDialog()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: void setupThemeColors(android.content.res.TypedArray)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: void onConnectionSuspended(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.DatePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.AccountHeader: void updateProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile)>[]--><com.mikepenz.materialdrawer.AccountHeader: void updateProfileByIdentifier(com.mikepenz.materialdrawer.model.interfaces.IProfile)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void <init>()>[]--><androidx.fragment.app.FragmentActivity: void <init>()>[]--><androidx.fragment.app.FragmentActivity: void init()>[]--><androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>[]--><androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>[]--><androidx.fragment.app.FragmentActivity$2: void onContextAvailable(android.content.Context)>[]--><androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>[]--><androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>[]--><androidx.fragment.app.FragmentStateManager: void ensureInflatedView()>[]--><androidx.fragment.app.Fragment: void performViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.DatePickerDialog: void onCreate(android.os.Bundle)>[]--><com.philliphsu.bottomsheetpickers.BottomSheetPickerDialog: void onCreate(android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.ui.view.theme.ThemedPatternLockView: void <init>(android.content.Context)>[]--><com.andrognito.patternlockview.PatternLockView: void <init>(android.content.Context)>[]--><com.andrognito.patternlockview.PatternLockView: void <init>(android.content.Context,android.util.AttributeSet)>[[try]]--><com.andrognito.patternlockview.utils.ResourceUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader: void tileLoadedScaled(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable)>[]--><org.osmdroid.tileprovider.MapTileProviderArray: void mapTileRequestExpiredTile(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable)>[]--><org.osmdroid.tileprovider.MapTileProviderArray: void runAsyncNextProvider(org.osmdroid.tileprovider.MapTileRequestState)>[]--><org.osmdroid.tileprovider.modules.MapTileModuleProviderBase: void loadMapTileAsync(org.osmdroid.tileprovider.MapTileRequestState)>[[try]]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.AccountHeader: void removeProfile(int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SecondaryDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder setIconTintColorResource(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.CurrencyConverterActivity: void onCurrencyChanged(java.lang.String,com.oriondev.moneywallet.model.CurrencyUnit)>[]--><com.oriondev.moneywallet.ui.activity.CurrencyConverterActivity: void loadCurrencyFlag(android.widget.ImageView,java.lang.String)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.ModernAsyncTask: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.ModernAsyncTask: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.ModernAsyncTask: void execute(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.request.target.PreloadTarget$1: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.request.target.PreloadTarget: void clear()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$6: void onViewDetachedFromWindow(android.view.View)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.images.ImageManager$ImageReceiver: void onReceiveResult(int,android.os.Bundle)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.images.ImageManager$ImageReceiver: void onReceiveResult(int,android.os.Bundle)>[]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.views.overlay.Marker: void onDetach(org.osmdroid.views.MapView)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder widgetColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.app.LoaderManagerImpl$LoaderObserver: void reset()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoaderReset(androidx.loader.content.Loader)>[]--><com.mikepenz.materialdrawer.AccountHeader: void clear()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.grid.GridTimePickerDialog: void onCreate(android.os.Bundle)>[]--><com.philliphsu.bottomsheetpickers.BottomSheetPickerDialog: void onCreate(android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.NewEditDebtActivity$1: void onClick(android.view.View)>[]--><com.oriondev.moneywallet.picker.IconPicker: void showPicker()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: com.github.rubensousa.bottomsheetbuilder.BottomSheetMenuDialog createDialog()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: void setupThemeColors(android.content.res.TypedArray)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.TextViewWithHighlightIndicator: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable shadowRes(int,int,int,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)>[]--><com.google.android.material.shadow.ShadowDrawableWrapper: void <init>(android.content.Context,android.graphics.drawable.Drawable,float,float,float)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zzi$zza: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.zzk: void zzb(com.google.android.gms.common.ConnectionResult,int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.tasks.Task makeGooglePlayServicesAvailable(android.app.Activity)>[]--><com.google.android.gms.common.api.internal.zzbt: com.google.android.gms.common.api.internal.zzbt zzd(android.app.Activity)>[]--><com.google.android.gms.common.api.internal.zzbt: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>[]--><com.google.android.gms.common.api.internal.zzbr: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.tasks.Task makeGooglePlayServicesAvailable(android.app.Activity)>[]--><com.google.android.gms.common.api.internal.zzk: void zzb(com.google.android.gms.common.ConnectionResult,int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.fragment.secondary.TransactionItemFragment: void onShowItemId(long)>[]--><com.oriondev.moneywallet.ui.fragment.secondary.TransactionItemFragment: void setLoadingScreen(boolean)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void setAttachments(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void addAttachment(int,com.oriondev.moneywallet.model.Attachment)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.load.resource.gif.GifDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void clear()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: void recycle()>[]--><com.bumptech.glide.load.engine.EngineResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void clear()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.load.engine.EngineResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void clear()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: void recycle()>[]--><com.bumptech.glide.load.engine.EngineResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void clear()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.load.engine.EngineJob: void reschedule(com.bumptech.glide.load.engine.DecodeJob)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder itemsColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.NewEditEventActivity$1: void onClick(android.view.View)>[]--><com.oriondev.moneywallet.picker.IconPicker: void showPicker()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: com.github.rubensousa.bottomsheetbuilder.BottomSheetMenuDialog createDialog()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: void setupThemeColors(android.content.res.TypedArray)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.SimpleMonthAdapter: com.philliphsu.bottomsheetpickers.date.MonthView createMonthView(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.date.SimpleMonthAdapter: com.philliphsu.bottomsheetpickers.date.MonthView createMonthView(android.content.Context,boolean)>[]--><com.philliphsu.bottomsheetpickers.date.SimpleMonthView: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.date.MonthView: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.date.MonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.internal.zzbd: void onConnected(android.os.Bundle)>[[try]]--><com.google.android.gms.common.api.internal.zzaj: void onConnected(android.os.Bundle)>[]--><com.google.android.gms.common.api.internal.zzaj: void zzat()>[]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.DateTimePicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
try
Good road with try: <com.oriondev.moneywallet.picker.PersonPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileSettingDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileSettingDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.CategoryPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder inputRange(int,int,int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.ColorPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.MapTileProviderArray: android.graphics.drawable.Drawable getMapTile(long)>[]--><org.osmdroid.tileprovider.MapTileProviderArray: void runAsyncNextProvider(org.osmdroid.tileprovider.MapTileRequestState)>[]--><org.osmdroid.tileprovider.modules.MapTileModuleProviderBase: void loadMapTileAsync(org.osmdroid.tileprovider.MapTileRequestState)>[[try]]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void <init>(int)>[]--><androidx.activity.ComponentActivity: void <init>(int)>[]--><androidx.activity.ComponentActivity: void <init>()>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void <init>(int)>[]--><androidx.fragment.app.FragmentActivity: void init()>[]--><androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>[]--><androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>[]--><androidx.fragment.app.FragmentActivity$2: void onContextAvailable(android.content.Context)>[]--><androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.WalletPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: void connect()>[]--><com.google.android.gms.common.api.internal.zzby: void zza(com.google.android.gms.common.api.internal.zzcb)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.IconPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
try
Good road with try: <com.github.rubensousa.bottomsheetbuilder.util.BottomSheetBuilderUtils: void restoreState(android.os.Bundle,com.google.android.material.bottomsheet.BottomSheetBehavior)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.bumptech.glide.RequestManager$2: void run()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner: void run()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.bumptech.glide.RequestBuilder$1: void run()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedTextColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.holder.BadgeStyle: void style(android.widget.TextView,android.content.res.ColorStateList)>[]--><com.mikepenz.materialize.holder.ColorHolder: void applyToOr(com.mikepenz.materialize.holder.ColorHolder,android.widget.TextView,android.content.res.ColorStateList)>[]--><com.mikepenz.materialize.holder.ColorHolder: void applyToOr(android.widget.TextView,android.content.res.ColorStateList)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
try
Good road with try: <com.oriondev.moneywallet.picker.PlacePicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.fragment.secondary.TransferItemFragment: void onShowItemId(long)>[]--><com.oriondev.moneywallet.ui.fragment.secondary.TransferItemFragment: void setLoadingScreen(boolean)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void setAttachments(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void addAttachment(int,com.oriondev.moneywallet.model.Attachment)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase: void notifyChildrenChanged(java.lang.String,android.os.Bundle)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$yysi0 < 19
-$i1 < 23
Good road: <androidx.transition.FragmentTransitionSupport: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)>[]--><androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)>[[-$yysi0 < 19]]--><androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)>[]--><androidx.transition.Scene: void exit()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void onStop()>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void onStop()>[]--><androidx.fragment.app.FragmentController: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><com.bumptech.glide.RequestManager$2: void run()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner: void run()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><com.bumptech.glide.RequestBuilder$1: void run()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner: void run()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><com.bumptech.glide.RequestBuilder$1: void run()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><com.bumptech.glide.RequestManager$2: void run()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.andrognito.patternlockview.PatternLockView$5: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.adapter.recycler.CurrencyCursorAdapter: void onBindViewHolder(com.oriondev.moneywallet.ui.adapter.recycler.CurrencyCursorAdapter$CurrencyViewHolder,android.database.Cursor)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable backgroundContourColorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentManager$2: void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)>[]--><androidx.fragment.app.FragmentManager: void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <org.osmdroid.views.overlay.gridlines.LatLonGridlineOverlay2: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.FolderOverlay: void onDetach(org.osmdroid.views.MapView)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDetach(org.osmdroid.views.MapView)>[]--><org.osmdroid.views.overlay.TilesOverlay: void onDetach(org.osmdroid.views.MapView)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.internal.zza$zza: void onStop()>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zza$zza: void onStop()>[]--><com.google.android.gms.common.images.ImageManager$zze: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zza$zza: void onStop()>[]--><com.google.android.gms.common.util.concurrent.zza: void run()>[]--><com.google.android.gms.common.images.ImageManager$zzb: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zza$zza: void onStop()>[]--><com.google.android.gms.common.images.ImageManager$zzb: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog: void setProgressPercentFormat(java.text.NumberFormat)>[]--><com.afollestad.materialdialogs.MaterialDialog: void setProgress(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.engine.LockedResource: void unlock()>[[try]]--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: void recycle()>[]--><com.bumptech.glide.load.engine.EngineResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void clear()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.grid.HoursGrid: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.swiperefreshlayout.widget.CircleImageView: void setBackgroundColorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)>[]--><androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.AccountHeader: void setHeaderBackground(com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>[]--><androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.bumptech.glide.RequestManager$2: void run()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.bumptech.glide.RequestBuilder$1: void run()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner: void run()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.AccountHeader: void setProfiles(java.util.List)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.load.engine.prefill.BitmapPreFiller: void preFill(com.bumptech.glide.load.engine.prefill.PreFillType$Builder[])>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.preference.ListPreferenceDialogFragmentCompat: void onCreate(android.os.Bundle)>[]--><androidx.preference.PreferenceDialogFragmentCompat: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
try
Good road with try: <com.philliphsu.bottomsheetpickers.date.DayPickerView$ScrollStateRunnable: void doScrollStateChange(android.widget.AbsListView,int)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void onPostResume()>[]--><androidx.fragment.app.FragmentActivity: void onResumeFragments()>[]--><androidx.fragment.app.FragmentController: void dispatchResume()>[]--><androidx.fragment.app.FragmentManager: void dispatchResume()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
i0 >= 16
-$i1 < 23
Good road: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.transition.TransitionManager: void transitionTo(androidx.transition.Scene)>[]--><androidx.transition.TransitionManager: void changeScene(androidx.transition.Scene,androidx.transition.Transition)>[]--><androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)>[]--><androidx.transition.Scene: void exit()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
try
Good road with try: <com.oriondev.moneywallet.ui.view.theme.ThemedPatternLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.andrognito.patternlockview.PatternLockView: void <init>(android.content.Context,android.util.AttributeSet)>[[try]]--><com.andrognito.patternlockview.utils.ResourceUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.ImportExportFormatPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.holder.ImageHolder: void applyToOrSetInvisible(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.ProfileDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.ProfileDrawerItem: int getSelectedTextColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.internal.zzby: void onConnected(android.os.Bundle)>[]--><com.google.android.gms.signin.internal.SignInClientImpl: void signIn(com.google.android.gms.signin.internal.ISignInCallbacks)>[[try]]--><com.google.android.gms.common.api.internal.zzby: void onSignInComplete(com.google.android.gms.signin.internal.SignInResponse)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zzbt: void zzr()>[]--><com.google.android.gms.common.api.internal.zzk: void zzb(com.google.android.gms.common.ConnectionResult,int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.ui.view.theme.ThemedPinLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.andrognito.pinlockview.PinLockView: void init(android.util.AttributeSet,int)>[[try]]--><com.andrognito.pinlockview.ResourceUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void scrollToPreference(androidx.preference.Preference)>[]--><androidx.preference.PreferenceFragment: void scrollToPreferenceInternal(androidx.preference.Preference,java.lang.String)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$yysi0 < 19
-$i1 < 23
Good road: <androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup)>[]--><androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)>[[-$yysi0 < 19]]--><androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)>[]--><androidx.transition.Scene: void exit()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentStatePagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>[]--><androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target preload()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target preload(int,int)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
too lang!
-$i1 < 23
Good road: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.ui.fragment.multipanel.BackupMultiPanelFragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
too lang!
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.view.calendar.DotView: void setColorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.transition.TransitionManager: void go(androidx.transition.Scene)>[]--><androidx.transition.TransitionManager: void changeScene(androidx.transition.Scene,androidx.transition.Transition)>[]--><androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)>[]--><androidx.transition.Scene: void exit()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.loader.app.LoaderManagerImpl$LoaderInfo: void markForRedelivery()>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.app.LoaderManagerImpl$LoaderInfo: void markForRedelivery()>[]--><androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragmentCompat: void scrollToPreference(java.lang.String)>[]--><androidx.preference.PreferenceFragmentCompat: void scrollToPreferenceInternal(androidx.preference.Preference,java.lang.String)>[]--><com.bumptech.glide.RequestBuilder$1: void run()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.MessageThreadUtil$2: void maybeExecuteBackgroundRunnable()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.MessageThreadUtil$2: void maybeExecuteBackgroundRunnable()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.MessageThreadUtil$2: void maybeExecuteBackgroundRunnable()>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zza$zza: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>[]--><com.google.android.gms.common.api.internal.zzbr: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zza$zza: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>[]--><com.google.android.gms.common.api.internal.zzcc: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.MapTileProviderArray: void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource)>[[try]]--><org.osmdroid.tileprovider.MapTileProviderBase: void clearTileCache()>[]--><org.osmdroid.tileprovider.MapTileCache: void clear()>[]--><org.osmdroid.tileprovider.MapTileCache: void remove(long)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.tileprovider.MapTileProviderArray: void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void clearTileCache()>[]--><org.osmdroid.tileprovider.MapTileCache: void clear()>[]--><org.osmdroid.tileprovider.MapTileCache: void remove(long)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target downloadOnly(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.views.MapView: void setBackgroundColor(int)>[]--><org.osmdroid.views.overlay.TilesOverlay: void setLoadingBackgroundColor(int)>[]--><org.osmdroid.views.overlay.TilesOverlay: void clearLoadingTile()>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.tileprovider.modules.OfflineTileProvider: void detach()>[]--><org.osmdroid.tileprovider.MapTileProviderArray: void detach()>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void detach()>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void clearTileCache()>[]--><org.osmdroid.tileprovider.MapTileCache: void clear()>[]--><org.osmdroid.tileprovider.MapTileCache: void remove(long)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.views.overlay.MinimapOverlay: void <init>(android.content.Context,android.os.Handler)>[]--><org.osmdroid.views.overlay.MinimapOverlay: void <init>(android.content.Context,android.os.Handler,org.osmdroid.tileprovider.MapTileProviderBase)>[]--><org.osmdroid.views.overlay.MinimapOverlay: void <init>(android.content.Context,android.os.Handler,org.osmdroid.tileprovider.MapTileProviderBase,int)>[]--><org.osmdroid.views.overlay.TilesOverlay: void setLoadingLineColor(int)>[]--><org.osmdroid.views.overlay.TilesOverlay: void clearLoadingTile()>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.transition.TransitionManager: void go(androidx.transition.Scene,androidx.transition.Transition)>[]--><androidx.transition.TransitionManager: void changeScene(androidx.transition.Scene,androidx.transition.Transition)>[]--><androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)>[]--><androidx.transition.Scene: void exit()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SecondaryToggleDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: void onConnected(android.os.Bundle)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.FutureTarget submit()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.FutureTarget submit(int,int)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceGroup: boolean removePreference(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroup: boolean removePreferenceInt(androidx.preference.Preference)>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceGroupAdapter: void onPreferenceVisibilityChange(androidx.preference.Preference)>[]--><androidx.preference.CollapsiblePreferenceGroupController: boolean onPreferenceVisibilityChange(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroupAdapter: void onPreferenceHierarchyChange(androidx.preference.Preference)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.NewEditTransferActivity: void onAttachmentListChanged(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void setAttachments(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void addAttachment(int,com.oriondev.moneywallet.model.Attachment)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.MoneyPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.AsyncTaskLoader: void onForceLoad()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zzav: void stopAutoManage(androidx.fragment.app.FragmentActivity)>[]--><com.google.android.gms.common.api.internal.zzi: com.google.android.gms.common.api.internal.zzi zza(com.google.android.gms.common.api.internal.LifecycleActivity)>[]--><com.google.android.gms.common.api.internal.zzi: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>[]--><com.google.android.gms.common.api.internal.zzcc: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase: void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerDialog: void onCreate(android.os.Bundle)>[]--><com.philliphsu.bottomsheetpickers.BottomSheetPickerDialog: void onCreate(android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentController: void dispatchDestroyView()>[]--><androidx.fragment.app.FragmentManager: void dispatchDestroyView()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.grid.TwentyFourHoursGrid: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.time.grid.TwentyFourHoursGrid: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.philliphsu.bottomsheetpickers.time.grid.TwentyFourHoursGrid: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.grid.HoursGrid: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.simplelist.MaterialSimpleListItem$Builder: com.afollestad.materialdialogs.simplelist.MaterialSimpleListItem$Builder backgroundColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.api.GoogleApiClient build()>[]--><com.google.android.gms.common.api.internal.zzi: com.google.android.gms.common.api.internal.zzi zza(com.google.android.gms.common.api.internal.LifecycleActivity)>[]--><com.google.android.gms.common.api.internal.zzi: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>[]--><com.google.android.gms.common.api.internal.zzcc: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.AttachmentPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SecondarySwitchDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.AccountHeader: void removeProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile)>[]--><com.mikepenz.materialdrawer.AccountHeader: void removeProfileByIdentifier(long)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentStatePagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>[]--><androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.RequestManager: void clear(android.view.View)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragmentCompat: void scrollToPreference(androidx.preference.Preference)>[]--><androidx.preference.PreferenceFragmentCompat: void scrollToPreferenceInternal(androidx.preference.Preference,java.lang.String)>[]--><com.bumptech.glide.RequestBuilder$1: void run()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.load.resource.gif.GifDrawable: void startFromFirstFrame()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void setNextStartFromFirstFrame()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.internal.zzav: void maybeSignOut()>[]--><com.google.android.gms.common.api.internal.zzr: void maybeSignOut()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><com.bumptech.glide.RequestBuilder$1: void run()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner: void run()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><com.bumptech.glide.RequestManager$2: void run()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ServiceHandler: void postOrRun(java.lang.Runnable)>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractSwitchableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractSwitchableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void completeTransaction()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void completeTransaction()>[]--><androidx.fragment.app.FragmentManager: void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean)>[]--><androidx.fragment.app.FragmentManager: void moveToState(int,boolean)>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragmentCompat: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
try
Good road with try: <com.andrognito.pinlockview.PinLockView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.andrognito.pinlockview.PinLockView: void init(android.util.AttributeSet,int)>[[try]]--><com.andrognito.pinlockview.ResourceUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader: void tileLoadedExpired(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable)>[]--><org.osmdroid.tileprovider.MapTileProviderArray: void mapTileRequestExpiredTile(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable)>[]--><org.osmdroid.tileprovider.MapTileProviderArray: void runAsyncNextProvider(org.osmdroid.tileprovider.MapTileRequestState)>[]--><org.osmdroid.tileprovider.modules.MapTileModuleProviderBase: void loadMapTileAsync(org.osmdroid.tileprovider.MapTileRequestState)>[[try]]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTabStrip: void setTabIndicatorColorResource(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.MapPlacePicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><com.bumptech.glide.RequestBuilder$1: void run()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><com.bumptech.glide.RequestManager$2: void run()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner: void run()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader: void tileLoadedFailed(org.osmdroid.tileprovider.MapTileRequestState)>[]--><org.osmdroid.tileprovider.MapTileProviderArray: void mapTileRequestFailed(org.osmdroid.tileprovider.MapTileRequestState)>[]--><org.osmdroid.tileprovider.MapTileProviderArray: void runAsyncNextProvider(org.osmdroid.tileprovider.MapTileRequestState)>[]--><org.osmdroid.tileprovider.modules.MapTileModuleProviderBase: void loadMapTileAsync(org.osmdroid.tileprovider.MapTileRequestState)>[[try]]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.grid.GridTimePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.philliphsu.bottomsheetpickers.time.grid.GridPickerLayout: void setTheme(android.content.Context,boolean)>[]--><com.philliphsu.bottomsheetpickers.time.grid.TwentyFourHoursGrid: void setTheme(android.content.Context,boolean)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.NewEditSavingActivity$1: void onClick(android.view.View)>[]--><com.oriondev.moneywallet.picker.IconPicker: void showPicker()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: com.github.rubensousa.bottomsheetbuilder.BottomSheetMenuDialog createDialog()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: void setupThemeColors(android.content.res.TypedArray)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.ListPreloader: void onScroll(android.widget.AbsListView,int,int,int)>[]--><com.bumptech.glide.ListPreloader: void preload(int,boolean)>[]--><com.bumptech.glide.ListPreloader: void cancelAll()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.MonthPickerView: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.date.MonthPickerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.color.CircleView: void setBackgroundResource(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.adapter.recycler.BackupFileAdapter: void onBindViewHolder(com.oriondev.moneywallet.ui.adapter.recycler.BackupFileAdapter$ViewHolder,int)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.BudgetTypePicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.internal.zzas: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.common.api.internal.zzaj: void zzj(com.google.android.gms.common.api.internal.zzaj)>[]--><com.google.android.gms.common.api.internal.zzaj: void zzas()>[]--><com.google.android.gms.common.api.internal.zzaj: void zzat()>[]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.danielstone.materialaboutlibrary.MaterialAboutActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><androidx.activity.ComponentActivity: void onBackPressed()>[]--><androidx.activity.OnBackPressedDispatcher: void onBackPressed()>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder contentColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.RecurrencePicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.PagingMonthAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>[]--><com.philliphsu.bottomsheetpickers.date.PagingMonthAdapter: com.philliphsu.bottomsheetpickers.date.MonthView createMonthView(android.content.Context,boolean,int)>[]--><com.philliphsu.bottomsheetpickers.date.SimpleMonthView: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.date.MonthView: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.date.MonthView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.numberpad.NumberPadTimePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.view.BezelImageView: void setImageURI(android.net.Uri)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.NewEditTransactionActivity: void onAttachmentListChanged(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void setAttachments(java.util.List)>[]--><com.oriondev.moneywallet.ui.view.AttachmentView: void addAttachment(int,com.oriondev.moneywallet.model.Attachment)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.MiniDrawerItem: void bindView(com.mikepenz.materialdrawer.model.MiniDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.MiniDrawerItem: void bindView(com.mikepenz.materialdrawer.model.MiniDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.MiniDrawerItem: void bindView(com.mikepenz.materialdrawer.model.MiniDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.holder.BadgeStyle: void style(android.widget.TextView)>[]--><com.mikepenz.materialdrawer.holder.BadgeStyle: void style(android.widget.TextView,android.content.res.ColorStateList)>[]--><com.mikepenz.materialize.holder.ColorHolder: void applyToOr(com.mikepenz.materialize.holder.ColorHolder,android.widget.TextView,android.content.res.ColorStateList)>[]--><com.mikepenz.materialize.holder.ColorHolder: void applyToOr(android.widget.TextView,android.content.res.ColorStateList)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.MiniDrawerItem: void bindView(com.mikepenz.materialdrawer.model.MiniDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 21
-$i1 < 23
Good road: <com.github.paolorotolo.appintro.AppIntroBase: void setNavBarColor(int)>[[-$i1 < 21]]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog: void incrementProgress(int)>[]--><com.afollestad.materialdialogs.MaterialDialog: void setProgress(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.NewEditPersonActivity$1: void onClick(android.view.View)>[]--><com.oriondev.moneywallet.picker.IconPicker: void showPicker()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: com.github.rubensousa.bottomsheetbuilder.BottomSheetMenuDialog createDialog()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: void setupThemeColors(android.content.res.TypedArray)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21: void notifyChildrenChangedForCompat(java.lang.String,android.os.Bundle)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTabHost: void onAttachedToWindow()>[]--><androidx.fragment.app.FragmentManager: boolean executePendingTransactions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask execute(java.lang.Object[])>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)>[]--><androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity$1: android.os.Bundle saveState()>[]--><androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()>[]--><androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllState()>[]--><androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.lifecycle.LiveData: void removeObservers(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ListAdapter: void submitList(java.util.List)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void submitList(java.util.List)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceGroup: void removeAll()>[[try]]--><androidx.preference.PreferenceGroup: boolean removePreferenceInt(androidx.preference.Preference)>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.TextViewWithHighlightIndicator: void setTheme(android.content.Context,boolean)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.date.TextViewWithHighlightIndicator: void setTheme(android.content.Context,boolean)>[]--><com.philliphsu.bottomsheetpickers.date.TextViewWithIndicator: void setTheme(android.content.Context,boolean)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.CurrencyConverterPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void onDestroy()>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void onDestroy()>[]--><androidx.fragment.app.FragmentController: void dispatchDestroy()>[]--><androidx.fragment.app.FragmentManager: void dispatchDestroy()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.fragment.dialog.CurrencyConverterDialog: void onDetach()>[]--><androidx.fragment.app.DialogFragment: void onDetach()>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.Engine: void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)>[]--><com.bumptech.glide.load.engine.ResourceRecycler: void recycle(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: void recycle()>[]--><com.bumptech.glide.load.engine.EngineResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void clear()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.github.paolorotolo.appintro.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>[]--><androidx.fragment.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>[]--><androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder backgroundColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.preference.MultiSelectListPreferenceDialogFragmentCompat: void onCreate(android.os.Bundle)>[]--><androidx.preference.PreferenceDialogFragmentCompat: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void cancelTransaction()>[]--><androidx.fragment.app.FragmentManager: void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean)>[]--><androidx.fragment.app.FragmentManager: void moveToState(int,boolean)>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.bumptech.glide.RequestManager$2: void run()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner: void run()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.bumptech.glide.RequestBuilder$1: void run()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.ui.fragment.secondary.BackupHandlerFragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.views.overlay.MinimapOverlay: void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void clearTileCache()>[]--><org.osmdroid.tileprovider.MapTileCache: void clear()>[]--><org.osmdroid.tileprovider.MapTileCache: void remove(long)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder inputRangeRes(int,int,int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder buttonRippleColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.AsyncTaskLoader: void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object)>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void onStartEnterTransition()>[]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.apache.commons.collections.StaticBucketMap: void atomic(java.lang.Runnable)>[]--><org.apache.commons.collections.StaticBucketMap: void atomic(java.lang.Runnable,int)>[]--><com.google.android.gms.common.images.ImageManager$zze: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.NewEditWalletActivity$1: void onClick(android.view.View)>[]--><com.oriondev.moneywallet.picker.IconPicker: void showPicker()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: com.github.rubensousa.bottomsheetbuilder.BottomSheetMenuDialog createDialog()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: void setupThemeColors(android.content.res.TypedArray)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentManager$1: void handleOnBackPressed()>[]--><androidx.fragment.app.FragmentManager: void handleOnBackPressed()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void complete()>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.CurrencyPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.MiniProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.MiniProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.holder.ImageHolder: void applyToOrSetInvisible(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView)>[]--><com.mikepenz.materialize.holder.ImageHolder: void applyToOrSetInvisible(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void onStart()>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void onStart()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void onStart()>[]--><androidx.fragment.app.FragmentController: void dispatchActivityCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchActivityCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void onStart()>[]--><androidx.fragment.app.FragmentController: void dispatchStart()>[]--><androidx.fragment.app.FragmentManager: void dispatchStart()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.AccountHeader: void setSelectionSecondLineShown(boolean)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.tileprovider.MapTileProviderBasic: void detach()>[]--><org.osmdroid.tileprovider.MapTileProviderArray: void detach()>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void detach()>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void clearTileCache()>[]--><org.osmdroid.tileprovider.MapTileCache: void clear()>[]--><org.osmdroid.tileprovider.MapTileCache: void remove(long)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback)>[]--><com.bumptech.glide.load.engine.EngineJob: void start(com.bumptech.glide.load.engine.DecodeJob)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void scrollToPreference(java.lang.String)>[]--><androidx.preference.PreferenceFragment: void scrollToPreferenceInternal(androidx.preference.Preference,java.lang.String)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.oriondev.moneywallet.model.VectorIcon: boolean apply(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.lifecycle.MediatorLiveData$Source: void unplug()>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialize.holder.ImageHolder: void applyToOrSetGone(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView)>[]--><com.mikepenz.materialize.holder.ImageHolder: void applyToOrSetGone(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.load.resource.gif.GifFrameLoader: void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget)>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.github.rubensousa.bottomsheetbuilder.util.BottomSheetBuilderUtils: void delayDismiss(com.google.android.material.bottomsheet.BottomSheetBehavior)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.mikepenz.materialdrawer.DrawerBuilder$6$1: void run()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void loadSection(int)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentManager: void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentManager: void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.BackStackRecord: void executeOps()>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
try
Good road with try: <androidx.preference.EditTextPreferenceDialogFragmentCompat: void onCreate(android.os.Bundle)>[]--><androidx.preference.PreferenceDialogFragmentCompat: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i0 >= 21
-$i1 < 23
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 >= 21]]--><com.google.android.material.bottomnavigation.BottomNavigationView: void addCompatibilityTopDivider(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback)>[]--><com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.gif.GifDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void clear()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zzbl: void onSignOutComplete()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.dynamic.SupportFragmentWrapper: void setUserVisibleHint(boolean)>[]--><androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.FutureTarget into(int,int)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.FutureTarget submit(int,int)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.internal.zzas: void onConnected(android.os.Bundle)>[]--><com.google.android.gms.signin.internal.SignInClientImpl: void signIn(com.google.android.gms.signin.internal.ISignInCallbacks)>[[try]]--><com.google.android.gms.common.api.internal.zzby: void onSignInComplete(com.google.android.gms.signin.internal.SignInResponse)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.NewEditCategoryActivity$1: void onClick(android.view.View)>[]--><com.oriondev.moneywallet.picker.IconPicker: void showPicker()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: com.github.rubensousa.bottomsheetbuilder.BottomSheetMenuDialog createDialog()>[]--><com.github.rubensousa.bottomsheetbuilder.BottomSheetBuilder: void setupThemeColors(android.content.res.TypedArray)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SectionDrawerItem: void bindView(com.mikepenz.materialdrawer.model.SectionDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.internal.zzal: void onReportServiceBinding(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.common.api.internal.zzaj: void zzj(com.google.android.gms.common.api.internal.zzaj)>[]--><com.google.android.gms.common.api.internal.zzaj: void zzas()>[]--><com.google.android.gms.common.api.internal.zzaj: void zzat()>[]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable contourColorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.BackupListActivity$2: void onReceive(android.content.Context,android.content.Intent)>[]--><com.oriondev.moneywallet.ui.fragment.dialog.GenericProgressDialog: void updateProgress(int,int)>[]--><com.afollestad.materialdialogs.MaterialDialog: void setProgress(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$ConnectionRecord: void binderDied()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder dividerColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
i1 < 23
-$i1 < 23
Good road: <androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[i1 < 23]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
too lang!
try
Good road with try: <com.bumptech.glide.load.engine.Engine: void onResourceRemoved(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.engine.ResourceRecycler: void recycle(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: void recycle()>[]--><com.bumptech.glide.load.engine.EngineResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void recycle()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void clear()>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.tasks.zzu$zza: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>[]--><com.google.android.gms.common.api.internal.zzbr: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.tasks.zzu$zza: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>[]--><com.google.android.gms.common.api.internal.zzcc: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: boolean zzh(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.common.api.internal.zzk: void zzb(com.google.android.gms.common.ConnectionResult,int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase: void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog: void setProgressNumberFormat(java.lang.String)>[]--><com.afollestad.materialdialogs.MaterialDialog: void setProgress(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: void tileLoaded(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.FutureTarget downloadOnly(int,int)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.FutureTarget submit(int,int)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.LocalFilePicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21: void notifyChildrenChangedForCompat(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
-$i1 < 23
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder titleColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.OverviewSettingPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.oriondev.moneywallet.ui.activity.LauncherActivity: void access$300(com.oriondev.moneywallet.ui.activity.LauncherActivity)>[]--><com.oriondev.moneywallet.ui.activity.LauncherActivity: void showUpgradeLegacyEditionErrorMessage()>[]--><com.oriondev.moneywallet.ui.view.theme.ThemedDialog: com.afollestad.materialdialogs.MaterialDialog$Builder buildMaterialDialog(android.content.Context)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
too lang!
try
Good road with try: <androidx.fragment.app.BackStackRecord: int commitAllowingStateLoss()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.ExportColumnsPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <org.osmdroid.views.overlay.TilesOverlay$1: void callback(org.osmdroid.views.drawing.MapSnapshot)>[]--><org.osmdroid.views.drawing.MapSnapshot: void onDetach()>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void detach()>[]--><org.osmdroid.tileprovider.MapTileProviderBase: void clearTileCache()>[]--><org.osmdroid.tileprovider.MapTileCache: void clear()>[]--><org.osmdroid.tileprovider.MapTileCache: void remove(long)>[]--><org.osmdroid.tileprovider.BitmapPool: void asyncRecycle(android.graphics.drawable.Drawable)>[]--><com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.internal.zzcc: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment$SavedState saveInstanceState()>[]--><androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()>[]--><androidx.fragment.app.FragmentStateManager: void saveViewState()>[]--><androidx.fragment.app.FragmentViewLifecycleOwner: void performSave(android.os.Bundle)>[]--><androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)>[]--><androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity$1: android.os.Bundle saveState()>[]--><androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()>[]--><androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllState()>[]--><androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractToggleableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractToggleableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.github.paolorotolo.appintro.AppIntroBaseFragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zzc: void onReportServiceBinding(com.google.android.gms.common.ConnectionResult)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.philliphsu.bottomsheetpickers.time.grid.MinutesGrid: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.philliphsu.bottomsheetpickers.time.grid.NumbersGrid: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.holder.BadgeStyle: void style(android.widget.TextView,android.content.res.ColorStateList)>[]--><com.mikepenz.materialize.holder.ColorHolder: void applyToOr(com.mikepenz.materialize.holder.ColorHolder,android.widget.TextView,android.content.res.ColorStateList)>[]--><com.mikepenz.materialize.holder.ColorHolder: void applyToOr(android.widget.TextView,android.content.res.ColorStateList)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedTextColor(android.content.Context)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.CollapsiblePreferenceGroupController$1: boolean onPreferenceClick(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroupAdapter: void onPreferenceHierarchyChange(androidx.preference.Preference)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.gms.common.api.internal.zzar: void zzaq()>[]--><com.google.android.gms.common.api.internal.zzaj: void zza(com.google.android.gms.common.api.internal.zzaj,com.google.android.gms.signin.internal.SignInResponse)>[]--><com.google.android.gms.common.api.internal.zzaj: void zza(com.google.android.gms.signin.internal.SignInResponse)>[]--><com.google.android.gms.common.api.internal.zzaj: void zzas()>[]--><com.google.android.gms.common.api.internal.zzaj: void zzat()>[]--><com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.AccountHeader: void setSelectionFirstLineShown(boolean)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <com.oriondev.moneywallet.picker.EventPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStop()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[]--><androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void attach()>[]--><androidx.fragment.app.Fragment: void performAttach()>[]--><androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)>[]--><androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>[]--><androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>[]--><androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)>[]--><androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.mikepenz.materialdrawer.AccountHeader: void addProfile(com.mikepenz.materialdrawer.model.interfaces.IProfile,int)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void updateHeaderAndList()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void buildProfiles()>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: void setImageOrPlaceholder(android.widget.ImageView,com.mikepenz.materialdrawer.holder.ImageHolder)>[]--><com.mikepenz.materialize.holder.ImageHolder: boolean applyTo(com.mikepenz.materialize.holder.ImageHolder,android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.holder.ImageHolder: boolean applyTo(android.widget.ImageView,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.DrawerImageLoader: boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String)>[]--><com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader: android.graphics.drawable.Drawable placeholder(android.content.Context)>[]--><com.mikepenz.materialdrawer.util.DrawerUIUtils: android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)>[]--><com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
containsStatic:true
containsTry:true
518call by main package
-----------------------------------------
#################################################
N 568 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.LockActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_LockActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.LockActivity: void onResume()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: void startAuth()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: android.hardware.fingerprint.FingerprintManager$CryptoObject getCryptoObject()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean cipherInit()>[]--><com.multidots.fingerprintauth.FingerPrintAuthHelper: boolean generateKey()>[[try]]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 569 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_DailyBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.DailyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 570 Potential Issue API: SDKCheck of <android.app.NotificationChannel: java.lang.CharSequence getName()> is checking!!!
The life time of api is [26,31]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: boolean zzb(com.google.android.gms.common.api.internal.zzb)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.zzad: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability$zza: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
containsStatic:true
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 571 Potential Issue API: SDKCheck of <android.view.Menu: void setGroupDividerEnabled(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)>[[], [-$i0 < 28]]--><android.view.Menu: void setGroupDividerEnabled(boolean)>
#1.the call statck between class <androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)> to <android.view.Menu: void setGroupDividerEnabled(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:273
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 572 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 573 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View,int)>[[-$i1 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 574 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService: android.os.Bundle getBrowserRootHints()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26: android.os.Bundle getBrowserRootHints()>[]--><androidx.media.MediaBrowserServiceCompatApi26: android.os.Bundle getBrowserRootHints(java.lang.Object)>[]--><android.service.media.MediaBrowserService: android.os.Bundle getBrowserRootHints()>
#1.the call statck between class <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26: android.os.Bundle getBrowserRootHints()> to <android.service.media.MediaBrowserService: android.os.Bundle getBrowserRootHints()>has compatibility isssues！
-----------------------------------------
crashApis:274
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 575 Potential Issue API: SDKCheck of <android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 576 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isScreenReaderFocusable()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScreenReaderFocusable()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isScreenReaderFocusable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 577 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getTooltipText()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 578 Potential Issue API: SDKCheck of <java.awt.geom.Line2D: boolean intersects(java.awt.geom.Rectangle2D)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)>[]--><com.itextpdf.awt.geom.PolylineShape: boolean intersects(java.awt.geom.Rectangle2D)>[]--><java.awt.geom.Line2D: boolean intersects(java.awt.geom.Rectangle2D)>
#1.the call statck between class <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)> to <java.awt.geom.Line2D: boolean intersects(java.awt.geom.Rectangle2D)>has compatibility isssues！
-----------------------------------------
crashApis:275
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 579 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 580 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
crashApis:276
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 581 Potential Issue API: SDKCheck of <android.widget.ThemedSpinnerAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 582 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)>[[-$i4 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 583 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 584 Potential Issue API: SDKCheck of <android.app.Person: boolean isBot()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isBot()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 585 Potential Issue API: SDKCheck of <java.awt.event.MouseAdapter: void <init>()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor)>[]--><java.awt.event.MouseAdapter: void <init>()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2: void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor)> to <java.awt.event.MouseAdapter: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:277
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 586 Potential Issue API: SDKCheck of <android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)> is checking!!!
The life time of api is [26,31]
5call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.broadcast.NotificationBroadcastReceiver dummyMainMethod_com_oriondev_moneywallet_broadcast_NotificationBroadcastReceiver(android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.oriondev.moneywallet.broadcast.NotificationBroadcastReceiver: void restartAutoBackupIntentService(android.content.Context,android.os.Bundle)>[]--><com.oriondev.moneywallet.service.BackupHandlerIntentService: void startInForeground(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
4 Packageshead roads:
-$i0 < 26
Good road: <androidx.media.session.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.media.session.MediaButtonReceiver: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 587 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setEnterTransition(android.transition.Transition)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 588 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addMessage(android.app.Notification.MessagingStyle.Message)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addMessage(android.app.Notification.MessagingStyle.Message)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 589 Potential Issue API: SDKCheck of <android.content.pm.PackageManager: boolean isInstantApp(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$yysi0 < 26
Good road: <com.google.android.gms.common.wrappers.PackageManagerWrapper: void checkCallerIsNotInstantApp()>[]--><com.google.android.gms.common.wrappers.PackageManagerWrapper: boolean isCallerInstantApp()>[[-$yysi0 < 26]]--><android.content.pm.PackageManager: boolean isInstantApp(java.lang.String)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 590 Potential Issue API: SDKCheck of <android.view.MenuItem: android.content.res.ColorStateList getIconTintList()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.content.res.ColorStateList getIconTintList()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)> to <android.view.MenuItem: android.content.res.ColorStateList getIconTintList()>has compatibility isssues！
-----------------------------------------
crashApis:278
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 591 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)> is checking!!!
The life time of api is [26,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: boolean zzb(com.google.android.gms.common.api.internal.zzb)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.zzad: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,android.content.Intent)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability$zza: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability: void setDefaultNotificationChannelId(android.content.Context,java.lang.String)>[[-$yysi0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zzd(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zza: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean showWrappedErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><com.google.android.gms.common.GoogleApiAvailability: java.lang.String zza(android.content.Context,android.app.NotificationManager)>[]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
containsStatic:true
containsTry:false
12call by main package
-----------------------------------------
#################################################
N 592 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager: boolean isTrustedForMediaControl(android.media.session.MediaSessionManager.RemoteUserInfo)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28: boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl)>[]--><android.media.session.MediaSessionManager: boolean isTrustedForMediaControl(android.media.session.MediaSessionManager.RemoteUserInfo)>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28: boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl)> to <android.media.session.MediaSessionManager: boolean isTrustedForMediaControl(android.media.session.MediaSessionManager.RemoteUserInfo)>has compatibility isssues！
-----------------------------------------
crashApis:279
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 593 Potential Issue API: SDKCheck of <java.awt.geom.PathIterator: int getWindingRule()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
crashApis:280
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 594 Potential Issue API: SDKCheck of <java.awt.event.KeyAdapter: void <init>()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.apache.log4j.lf5.viewer.LogFactor5InputDialog$1: void <init>(org.apache.log4j.lf5.viewer.LogFactor5InputDialog)>[]--><java.awt.event.KeyAdapter: void <init>()>
#1.the call statck between class <org.apache.log4j.lf5.viewer.LogFactor5InputDialog$1: void <init>(org.apache.log4j.lf5.viewer.LogFactor5InputDialog)> to <java.awt.event.KeyAdapter: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:281
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 595 Potential Issue API: SDKCheck of <android.widget.LinearLayout: void onRtlPropertiesChanged(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void onRtlPropertiesChanged(int)>[]--><android.widget.LinearLayout: void onRtlPropertiesChanged(int)>
#1.the call statck between class <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void onRtlPropertiesChanged(int)> to <android.widget.LinearLayout: void onRtlPropertiesChanged(int)>has compatibility isssues！
-----------------------------------------
crashApis:282
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 596 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person build()> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 597 Potential Issue API: SDKCheck of <java.awt.geom.Area: void <init>(java.awt.Shape)> is checking!!!
The life time of api is [1,8]
17call roads:
0 Mainhead roads:
17 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
crashApis:283
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 598 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void removeAllDynamicShortcuts()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void removeAllDynamicShortcuts()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 599 Potential Issue API: SDKCheck of <java.awt.image.ColorModel: int getPixelSize()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 600 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean setLayoutDirection(int)> is checking!!!
The life time of api is [23,31]
30call roads:
1 Mainhead roads:
-i1 >= 21
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.oriondev.moneywallet.ui.activity.MainActivity dummyMainMethod_com_oriondev_moneywallet_ui_activity_MainActivity(android.content.Intent)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void onCreate(android.os.Bundle)>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void initializeUi()>[]--><com.oriondev.moneywallet.ui.activity.MainActivity: void initializeNavigationDrawer()>[]--><com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer build()>[]--><com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer buildView()>[]--><com.mikepenz.materialdrawer.DrawerBuilder: void createContent()>[[-i1 >= 21]]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveRightShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
29 Packageshead roads:
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
#3.the call statck between class <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)> to <android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>has compatibility isssues！
-----------------------------------------
-i1 < 23
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
try
Good road with try: <com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int)>[[try]]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
crashApis:284
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 601 Potential Issue API: SDKCheck of <java.awt.Font: boolean isItalic()> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: boolean isItalic()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: boolean isItalic()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
crashApis:285
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 602 Potential Issue API: SDKCheck of <java.awt.Font: float getItalicAngle()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: float getItalicAngle()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: float getItalicAngle()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: float getItalicAngle()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: float getItalicAngle()>has compatibility isssues！
-----------------------------------------
crashApis:286
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 603 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void fill(java.awt.Shape)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFillPaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 604 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeMaxTextSize()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeMaxTextSize(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeMaxTextSize()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 605 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetTop()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetTop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 606 Potential Issue API: SDKCheck of <java.beans.PropertyEditorManager: java.beans.PropertyEditor findEditor(java.lang.Class)> is checking!!!
The life time of api is [1,8]
3984call roads:
1 Mainhead roads:
