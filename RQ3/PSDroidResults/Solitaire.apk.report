/home/ys/桌面/CompactDroid（复件）/dataset2/Solitaire.apk
Entry Points[org.secuso.privacyfriendlysolitaire.Activities.SplashActivity, org.secuso.privacyfriendlysolitaire.Activities.MainActivity, org.secuso.privacyfriendlysolitaire.Activities.SettingsActivity, org.secuso.privacyfriendlysolitaire.Activities.MenuActivity, org.secuso.privacyfriendlysolitaire.Activities.HelpActivity, org.secuso.privacyfriendlysolitaire.Activities.AboutActivity, org.secuso.privacyfriendlysolitaire.Activities.Solitaire]
FllowDroidcallgraph size:978
Soot started on Mon Jul 11 12:27:53 CST 2022
Soot finished on Mon Jul 11 12:28:26 CST 2022
Soot has run for 0 min. 32 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 21
Declared Target Sdk version is: 24
Declared Max Sdk version is: -1
Collected 594 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <junit.framework.TestListener: void addError(junit.framework.Test,java.lang.Throwable)> is checking!!!
The life time of api is [26,27]
19call roads:
1 Mainhead roads:
18 Packageshead roads:
try
Good road with try: <junit.framework.JUnit4TestAdapterCache$1: void testFailure(org.junit.runner.notification.Failure)>[]--><junit.framework.TestResult: void addError(junit.framework.Test,java.lang.Throwable)>[[try]]--><junit.framework.TestListener: void addError(junit.framework.Test,java.lang.Throwable)>
One road protect good!
containsStatic:false
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <junit.framework.TestCase: junit.framework.TestResult createResult()> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: junit.framework.TestResult createResult()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: junit.framework.TestResult createResult()>
#1.the call statck between class <junit.framework.TestCase: junit.framework.TestResult run()> to <junit.framework.TestCase: junit.framework.TestResult createResult()>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [26,27]
19call roads:
0 Mainhead roads:
19 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,float,float,float)> to <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)> to <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#3.the call statck between class <junit.framework.TestCase: void assertEquals(boolean,boolean)> to <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#4.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#5.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)> to <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#6.the call statck between class <junit.framework.TestCase: void assertEquals(char,char)> to <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#7.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> to <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#8.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)> to <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#9.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)> to <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(float,float,float)>[]--><junit.framework.Assert: void assertEquals(float,float,float)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(float,float,float)>[]--><junit.framework.Assert: void assertEquals(float,float,float)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#10.the call statck between class <junit.framework.TestCase: void assertEquals(float,float,float)> to <junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.secuso.privacyfriendlysolitaire.Activities.Solitaire dummyMainMethod_org_secuso_privacyfriendlysolitaire_Activities_Solitaire(android.content.Intent)>[]--><org.secuso.privacyfriendlysolitaire.Activities.Solitaire: void onCreate(android.os.Bundle)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
17 Packageshead roads:
try
Good road with try: <com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: boolean act(float)>[]--><com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void run()>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
#3.the call statck between class <junit.framework.TestCase: junit.framework.TestResult run()> to <junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.junit.runners.ParentRunner: void access$000(org.junit.runners.ParentRunner,org.junit.runner.notification.RunNotifier)>[]--><org.junit.runners.ParentRunner: void runChildren(org.junit.runner.notification.RunNotifier)>[[try]]--><org.junit.runners.ParentRunner$1: void schedule(java.lang.Runnable)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
#5.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
#9.the call statck between class <junit.textui.TestRunner: void runAndWait(junit.framework.Test)> to <junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.junit.internal.runners.JUnit4ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.ClassRoadie: void runProtected()>[[try]]--><org.junit.internal.runners.ClassRoadie: void runUnprotected()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
crashApis:3
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(boolean,boolean)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(boolean,boolean)> to <junit.framework.Assert: void assertEquals(boolean,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:4
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <junit.framework.TestSuite: void <init>(java.lang.String)> is checking!!!
The life time of api is [26,27]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.String)>
#6.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.String)> to <junit.framework.TestSuite: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertFalse(java.lang.String,boolean)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertFalse(boolean)>[]--><junit.framework.Assert: void assertFalse(boolean)>[]--><junit.framework.Assert: void assertFalse(java.lang.String,boolean)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertFalse(boolean)>[]--><junit.framework.Assert: void assertFalse(boolean)>[]--><junit.framework.Assert: void assertFalse(java.lang.String,boolean)>
#1.the call statck between class <junit.framework.TestCase: void assertFalse(boolean)> to <junit.framework.Assert: void assertFalse(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertFalse(java.lang.String,boolean)>[]--><junit.framework.Assert: void assertFalse(java.lang.String,boolean)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertFalse(java.lang.String,boolean)>[]--><junit.framework.Assert: void assertFalse(java.lang.String,boolean)>
#2.the call statck between class <junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> to <junit.framework.Assert: void assertFalse(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <junit.framework.TestFailure: java.lang.Throwable thrownException()> is checking!!!
The life time of api is [26,27]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestFailure: boolean isFailure()>[]--><junit.framework.TestFailure: java.lang.Throwable thrownException()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestFailure: boolean isFailure()>[]--><junit.framework.TestFailure: java.lang.Throwable thrownException()>
#1.the call statck between class <junit.framework.TestFailure: boolean isFailure()> to <junit.framework.TestFailure: java.lang.Throwable thrownException()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestFailure: java.lang.String exceptionMessage()>[]--><junit.framework.TestFailure: java.lang.Throwable thrownException()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestFailure: java.lang.String exceptionMessage()>[]--><junit.framework.TestFailure: java.lang.Throwable thrownException()>
#2.the call statck between class <junit.framework.TestFailure: java.lang.String exceptionMessage()> to <junit.framework.TestFailure: java.lang.Throwable thrownException()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>[]--><junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>[]--><junit.textui.ResultPrinter: void printDefectTrace(junit.framework.TestFailure)>[]--><junit.framework.TestFailure: java.lang.String trace()>[]--><junit.framework.TestFailure: java.lang.Throwable thrownException()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>[]--><junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>[]--><junit.textui.ResultPrinter: void printDefectTrace(junit.framework.TestFailure)>[]--><junit.framework.TestFailure: java.lang.String trace()>[]--><junit.framework.TestFailure: java.lang.Throwable thrownException()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>[]--><junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>[]--><junit.textui.ResultPrinter: void printDefectTrace(junit.framework.TestFailure)>[]--><junit.framework.TestFailure: java.lang.String trace()>[]--><junit.framework.TestFailure: java.lang.Throwable thrownException()>
One road protect good!
crashApis:7
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <junit.framework.TestResult: boolean wasSuccessful()> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFooter(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean wasSuccessful()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFooter(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean wasSuccessful()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFooter(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean wasSuccessful()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.framework.TestResult: boolean wasSuccessful()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)> is checking!!!
The life time of api is [26,27]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>[]--><junit.framework.TestSuite: junit.framework.Test testCaseForClass(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>[]--><junit.framework.TestSuite: junit.framework.Test testCaseForClass(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
#1.the call statck between class <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)> to <junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
#2.the call statck between class <junit.framework.TestSuite: void addTestSuite(java.lang.Class)> to <junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)>[]--><org.junit.internal.runners.JUnit38ClassRunner: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)>[]--><org.junit.internal.runners.JUnit38ClassRunner: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
#3.the call statck between class <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)> to <junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
#4.the call statck between class <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)> to <junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
#5.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request,org.junit.runner.JUnitCore)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request,org.junit.runner.JUnitCore)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
#7.the call statck between class <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)> to <junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
#8.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)> to <junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>
#9.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)> to <junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.TestSetup: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[[try]]--><junit.extensions.TestSetup$1: void protect()>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>
One road protect good!
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <junit.framework.TestResult: int runCount()> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFooter(junit.framework.TestResult)>[]--><junit.framework.TestResult: int runCount()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFooter(junit.framework.TestResult)>[]--><junit.framework.TestResult: int runCount()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFooter(junit.framework.TestResult)>[]--><junit.framework.TestResult: int runCount()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <junit.framework.TestCase: void runTest()> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <junit.framework.TestCase: void setUp()> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(long,long)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(long,long)> to <junit.framework.Assert: void assertEquals(long,long)>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(double,double,double)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(double,double,double)>[]--><junit.framework.Assert: void assertEquals(double,double,double)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(double,double,double)>[]--><junit.framework.Assert: void assertEquals(double,double,double)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(double,double,double)> to <junit.framework.Assert: void assertEquals(double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <junit.framework.Test: void run(junit.framework.TestResult)> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.Test: void run(junit.framework.TestResult)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.Test: void run(junit.framework.TestResult)>
#4.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.Test: void run(junit.framework.TestResult)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.Test: void run(junit.framework.TestResult)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.Test: void run(junit.framework.TestResult)>
#9.the call statck between class <junit.textui.TestRunner: void runAndWait(junit.framework.Test)> to <junit.framework.Test: void run(junit.framework.TestResult)>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertFalse(boolean)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertFalse(boolean)>[]--><junit.framework.Assert: void assertFalse(boolean)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertFalse(boolean)>[]--><junit.framework.Assert: void assertFalse(boolean)>
#1.the call statck between class <junit.framework.TestCase: void assertFalse(boolean)> to <junit.framework.Assert: void assertFalse(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:14
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,int,int)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(int,int)>[]--><junit.framework.Assert: void assertEquals(int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,int,int)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(int,int)>[]--><junit.framework.Assert: void assertEquals(int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,int,int)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(int,int)> to <junit.framework.Assert: void assertEquals(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,int,int)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,int,int)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> to <junit.framework.Assert: void assertEquals(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:15
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <junit.framework.TestCase: void run(junit.framework.TestResult)> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
try
Good road with try: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[[try]]--><junit.extensions.TestSetup$1: void protect()>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[[try]]--><junit.extensions.TestSetup$1: void protect()>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[[try]]--><junit.extensions.TestSetup$1: void protect()>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[[try]]--><junit.extensions.TestSetup$1: void protect()>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[[try]]--><junit.extensions.TestSetup$1: void protect()>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>
One road protect good!
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <junit.framework.TestFailure: java.lang.String trace()> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>[]--><junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>[]--><junit.textui.ResultPrinter: void printDefectTrace(junit.framework.TestFailure)>[]--><junit.framework.TestFailure: java.lang.String trace()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>[]--><junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>[]--><junit.textui.ResultPrinter: void printDefectTrace(junit.framework.TestFailure)>[]--><junit.framework.TestFailure: java.lang.String trace()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>[]--><junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>[]--><junit.textui.ResultPrinter: void printDefectTrace(junit.framework.TestFailure)>[]--><junit.framework.TestFailure: java.lang.String trace()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <junit.framework.TestSuite: int countTestCases()> is checking!!!
The life time of api is [26,27]
22call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.secuso.privacyfriendlysolitaire.Activities.Solitaire dummyMainMethod_org_secuso_privacyfriendlysolitaire_Activities_Solitaire(android.content.Intent)>[]--><org.secuso.privacyfriendlysolitaire.Activities.Solitaire: void onCreate(android.os.Bundle)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
21 Packageshead roads:
try
Good road with try: <com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: boolean act(float)>[]--><com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void run()>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
#3.the call statck between class <junit.framework.TestCase: junit.framework.TestResult run()> to <junit.framework.TestSuite: int countTestCases()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.junit.runners.ParentRunner: void access$000(org.junit.runners.ParentRunner,org.junit.runner.notification.RunNotifier)>[]--><org.junit.runners.ParentRunner: void runChildren(org.junit.runner.notification.RunNotifier)>[[try]]--><org.junit.runners.ParentRunner$1: void schedule(java.lang.Runnable)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
#5.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.TestSuite: int countTestCases()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: org.junit.runner.Description asDescription(junit.framework.Test)>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description getDescription()>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description makeDescription(junit.framework.Test)>[]--><org.junit.internal.runners.JUnit38ClassRunner: java.lang.String createSuiteDescription(junit.framework.TestSuite)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: org.junit.runner.Description asDescription(junit.framework.Test)>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description getDescription()>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description makeDescription(junit.framework.Test)>[]--><org.junit.internal.runners.JUnit38ClassRunner: java.lang.String createSuiteDescription(junit.framework.TestSuite)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
#7.the call statck between class <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: org.junit.runner.Description asDescription(junit.framework.Test)> to <junit.framework.TestSuite: int countTestCases()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testStarted(org.junit.runner.Description)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testStarted(org.junit.runner.Description)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
#8.the call statck between class <junit.framework.JUnit4TestAdapterCache$1: void testStarted(org.junit.runner.Description)> to <junit.framework.TestSuite: int countTestCases()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestSuite: int countTestCases()>[]--><junit.extensions.TestDecorator: int countTestCases()>[]--><junit.framework.TestSuite: int countTestCases()>
One road protect good!
crashApis:16
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <junit.framework.TestCase: void tearDown()> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <junit.framework.TestResult: void endTest(junit.framework.Test)> is checking!!!
The life time of api is [26,27]
19call roads:
1 Mainhead roads:
18 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testFinished(org.junit.runner.Description)>[]--><junit.framework.TestResult: void endTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testFinished(org.junit.runner.Description)>[]--><junit.framework.TestResult: void endTest(junit.framework.Test)>
#11.the call statck between class <junit.framework.JUnit4TestAdapterCache$1: void testFinished(org.junit.runner.Description)> to <junit.framework.TestResult: void endTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
crashApis:17
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)> to <junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(double,double,double)>[]--><junit.framework.Assert: void assertEquals(double,double,double)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(double,double,double)>[]--><junit.framework.Assert: void assertEquals(double,double,double)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(double,double,double)> to <junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:18
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <junit.framework.TestCase: void setName(java.lang.String)> is checking!!!
The life time of api is [26,27]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
try
Good road with try: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>[]--><junit.framework.TestSuite: junit.framework.Test testCaseForClass(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestCase: void setName(java.lang.String)>
One road protect good!
try
Good road with try: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestCase: void setName(java.lang.String)>
One road protect good!
try
Good road with try: <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)>[]--><org.junit.internal.runners.JUnit38ClassRunner: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestCase: void setName(java.lang.String)>
One road protect good!
try
Good road with try: <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestCase: void setName(java.lang.String)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestCase: void setName(java.lang.String)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestCase: void setName(java.lang.String)>
One road protect good!
try
Good road with try: <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request,org.junit.runner.JUnitCore)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestCase: void setName(java.lang.String)>
One road protect good!
try
Good road with try: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestCase: void setName(java.lang.String)>
One road protect good!
try
Good road with try: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestCase: void setName(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>
#2.the call statck between class <junit.framework.TestCase: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>
#3.the call statck between class <junit.framework.TestCase: void assertSame(java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertNull(java.lang.Object)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void assertNull(java.lang.Object)> to <junit.framework.Assert: void assertNull(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <junit.framework.TestResult: void startTest(junit.framework.Test)> is checking!!!
The life time of api is [26,27]
19call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.secuso.privacyfriendlysolitaire.Activities.Solitaire dummyMainMethod_org_secuso_privacyfriendlysolitaire_Activities_Solitaire(android.content.Intent)>[]--><org.secuso.privacyfriendlysolitaire.Activities.Solitaire: void onCreate(android.os.Bundle)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
18 Packageshead roads:
try
Good road with try: <com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: boolean act(float)>[]--><com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void run()>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
#3.the call statck between class <junit.framework.TestCase: junit.framework.TestResult run()> to <junit.framework.TestResult: void startTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.junit.runners.ParentRunner: void access$000(org.junit.runners.ParentRunner,org.junit.runner.notification.RunNotifier)>[]--><org.junit.runners.ParentRunner: void runChildren(org.junit.runner.notification.RunNotifier)>[[try]]--><org.junit.runners.ParentRunner$1: void schedule(java.lang.Runnable)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
#5.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.TestResult: void startTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testStarted(org.junit.runner.Description)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testStarted(org.junit.runner.Description)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
#7.the call statck between class <junit.framework.JUnit4TestAdapterCache$1: void testStarted(org.junit.runner.Description)> to <junit.framework.TestResult: void startTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>
#10.the call statck between class <junit.textui.TestRunner: void runAndWait(junit.framework.Test)> to <junit.framework.TestResult: void startTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
crashApis:21
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <junit.framework.Assert: void fail()> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void fail()>[]--><junit.framework.Assert: void fail()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void fail()>[]--><junit.framework.Assert: void fail()>
#1.the call statck between class <junit.framework.TestCase: void fail()> to <junit.framework.Assert: void fail()>has compatibility isssues！
-----------------------------------------
crashApis:22
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <junit.framework.TestSuite: junit.framework.Test testAt(int)> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: org.junit.runner.Description asDescription(junit.framework.Test)>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description getDescription()>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description makeDescription(junit.framework.Test)>[]--><junit.framework.TestSuite: junit.framework.Test testAt(int)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: org.junit.runner.Description asDescription(junit.framework.Test)>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description getDescription()>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description makeDescription(junit.framework.Test)>[]--><junit.framework.TestSuite: junit.framework.Test testAt(int)>
#3.the call statck between class <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: org.junit.runner.Description asDescription(junit.framework.Test)> to <junit.framework.TestSuite: junit.framework.Test testAt(int)>has compatibility isssues！
-----------------------------------------
crashApis:23
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> to <junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>
#2.the call statck between class <junit.framework.TestCase: void assertNull(java.lang.Object)> to <junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:24
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <junit.framework.Test: int countTestCases()> is checking!!!
The life time of api is [26,27]
22call roads:
1 Mainhead roads:
21 Packageshead roads:
containsStatic:false
containsTry:true
22call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [26,27]
21call roads:
0 Mainhead roads:
21 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.ComparisonFailure: java.lang.String getMessage()>[]--><junit.framework.ComparisonCompactor: java.lang.String compact(java.lang.String)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.ComparisonFailure: java.lang.String getMessage()>[]--><junit.framework.ComparisonCompactor: java.lang.String compact(java.lang.String)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
#1.the call statck between class <junit.framework.ComparisonFailure: java.lang.String getMessage()> to <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,float,float,float)> to <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
#3.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)> to <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
#4.the call statck between class <junit.framework.TestCase: void assertEquals(boolean,boolean)> to <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
#5.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
#6.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)> to <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
#7.the call statck between class <junit.framework.TestCase: void assertEquals(char,char)> to <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
#8.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> to <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
#9.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)> to <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>
#10.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)> to <junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <junit.framework.TestResult: int failureCount()> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFailures(junit.framework.TestResult)>[]--><junit.framework.TestResult: int failureCount()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFailures(junit.framework.TestResult)>[]--><junit.framework.TestResult: int failureCount()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFailures(junit.framework.TestResult)>[]--><junit.framework.TestResult: int failureCount()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.framework.TestResult: boolean wasSuccessful()>[[try]]--><junit.framework.TestResult: int failureCount()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <junit.framework.TestResult: java.util.Enumeration errors()> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.framework.TestResult: java.util.Enumeration errors()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.framework.TestResult: java.util.Enumeration errors()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.framework.TestResult: java.util.Enumeration errors()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <junit.framework.TestListener: void endTest(junit.framework.Test)> is checking!!!
The life time of api is [26,27]
19call roads:
1 Mainhead roads:
18 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testFinished(org.junit.runner.Description)>[]--><junit.framework.TestResult: void endTest(junit.framework.Test)>[]--><junit.framework.TestListener: void endTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testFinished(org.junit.runner.Description)>[]--><junit.framework.TestResult: void endTest(junit.framework.Test)>[]--><junit.framework.TestListener: void endTest(junit.framework.Test)>
#11.the call statck between class <junit.framework.JUnit4TestAdapterCache$1: void testFinished(org.junit.runner.Description)> to <junit.framework.TestListener: void endTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(byte,byte)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(byte,byte)>[]--><junit.framework.Assert: void assertEquals(byte,byte)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(byte,byte)>[]--><junit.framework.Assert: void assertEquals(byte,byte)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(byte,byte)> to <junit.framework.Assert: void assertEquals(byte,byte)>has compatibility isssues！
-----------------------------------------
crashApis:27
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <junit.framework.TestSuite: void setName(java.lang.String)> is checking!!!
The life time of api is [26,27]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void setName(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void setName(java.lang.String)>
#3.the call statck between class <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)> to <junit.framework.TestSuite: void setName(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.String)>[]--><junit.framework.TestSuite: void setName(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.String)>[]--><junit.framework.TestSuite: void setName(java.lang.String)>
#7.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.String)> to <junit.framework.TestSuite: void setName(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void setName(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void setName(java.lang.String)>
#8.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)> to <junit.framework.TestSuite: void setName(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:28
containsStatic:false
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,short,short)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(short,short)>[]--><junit.framework.Assert: void assertEquals(short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(short,short)>[]--><junit.framework.Assert: void assertEquals(short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(short,short)> to <junit.framework.Assert: void assertEquals(java.lang.String,short,short)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)> to <junit.framework.Assert: void assertEquals(java.lang.String,short,short)>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <junit.framework.TestSuite: void <init>()> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>()>[]--><junit.framework.TestSuite: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>()>[]--><junit.framework.TestSuite: void <init>()>
#1.the call statck between class <junit.extensions.ActiveTestSuite: void <init>()> to <junit.framework.TestSuite: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <junit.framework.TestSuite: void run(junit.framework.TestResult)> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <junit.framework.TestResult: void run(junit.framework.TestCase)> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <junit.framework.Protectable: void protect()> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,float,float,float)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,float,float,float)> to <junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(float,float,float)>[]--><junit.framework.Assert: void assertEquals(float,float,float)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(float,float,float)>[]--><junit.framework.Assert: void assertEquals(float,float,float)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(float,float,float)> to <junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>has compatibility isssues！
-----------------------------------------
crashApis:31
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertTrue(java.lang.String,boolean)> is checking!!!
The life time of api is [26,27]
25call roads:
1 Mainhead roads:
24 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>[]--><junit.framework.Assert: void assertTrue(java.lang.String,boolean)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>[]--><junit.framework.Assert: void assertTrue(java.lang.String,boolean)>
#2.the call statck between class <junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> to <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertFalse(java.lang.String,boolean)>[]--><junit.framework.Assert: void assertFalse(java.lang.String,boolean)>[]--><junit.framework.Assert: void assertTrue(java.lang.String,boolean)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertFalse(java.lang.String,boolean)>[]--><junit.framework.Assert: void assertFalse(java.lang.String,boolean)>[]--><junit.framework.Assert: void assertTrue(java.lang.String,boolean)>
#8.the call statck between class <junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> to <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:32
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(short,short)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(short,short)>[]--><junit.framework.Assert: void assertEquals(short,short)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(short,short)>[]--><junit.framework.Assert: void assertEquals(short,short)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(short,short)> to <junit.framework.Assert: void assertEquals(short,short)>has compatibility isssues！
-----------------------------------------
crashApis:33
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,char,char)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(char,char)> to <junit.framework.Assert: void assertEquals(java.lang.String,char,char)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)> to <junit.framework.Assert: void assertEquals(java.lang.String,char,char)>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>
#1.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)> to <junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:35
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <junit.framework.TestCase: void <init>(java.lang.String)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite$1: void <init>(java.lang.String,java.lang.String)>[]--><junit.framework.TestCase: void <init>(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite$1: void <init>(java.lang.String,java.lang.String)>[]--><junit.framework.TestCase: void <init>(java.lang.String)>
#1.the call statck between class <junit.framework.TestSuite$1: void <init>(java.lang.String,java.lang.String)> to <junit.framework.TestCase: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <junit.framework.Assert: void fail(java.lang.String)> is checking!!!
The life time of api is [26,27]
52call roads:
1 Mainhead roads:
51 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(boolean,boolean)> to <junit.framework.Assert: void fail(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void failSame(java.lang.String)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void failSame(java.lang.String)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>
#3.the call statck between class <junit.framework.TestCase: void failSame(java.lang.String)> to <junit.framework.Assert: void fail(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>
#6.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)> to <junit.framework.Assert: void fail(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>
#7.the call statck between class <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void fail(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>
#8.the call statck between class <junit.framework.TestCase: void assertEquals(long,long)> to <junit.framework.Assert: void fail(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>[]--><junit.framework.Assert: void assertTrue(java.lang.String,boolean)>[]--><junit.framework.Assert: void fail(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>[]--><junit.framework.Assert: void assertTrue(java.lang.String,boolean)>[]--><junit.framework.Assert: void fail(java.lang.String)>
#10.the call statck between class <junit.framework.TestCase: void assertNull(java.lang.Object)> to <junit.framework.Assert: void fail(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:37
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <junit.framework.AssertionFailedError: void <init>(java.lang.String)> is checking!!!
The life time of api is [26,27]
54call roads:
1 Mainhead roads:
53 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(boolean,boolean)> to <junit.framework.AssertionFailedError: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void failSame(java.lang.String)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void failSame(java.lang.String)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
#3.the call statck between class <junit.framework.TestCase: void failSame(java.lang.String)> to <junit.framework.AssertionFailedError: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
#6.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)> to <junit.framework.AssertionFailedError: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
#7.the call statck between class <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.AssertionFailedError: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
#8.the call statck between class <junit.framework.TestCase: void assertEquals(long,long)> to <junit.framework.AssertionFailedError: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>(java.lang.String)>
#10.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> to <junit.framework.AssertionFailedError: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:38
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <junit.framework.TestFailure: junit.framework.Test failedTest()> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>[]--><junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>[]--><junit.textui.ResultPrinter: void printDefectHeader(junit.framework.TestFailure,int)>[]--><junit.framework.TestFailure: junit.framework.Test failedTest()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>[]--><junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>[]--><junit.textui.ResultPrinter: void printDefectHeader(junit.framework.TestFailure,int)>[]--><junit.framework.TestFailure: junit.framework.Test failedTest()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>[]--><junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>[]--><junit.textui.ResultPrinter: void printDefectHeader(junit.framework.TestFailure,int)>[]--><junit.framework.TestFailure: junit.framework.Test failedTest()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <junit.framework.TestSuite: void addTest(junit.framework.Test)> is checking!!!
The life time of api is [26,27]
15call roads:
0 Mainhead roads:
15 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
#2.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.TestSuite: void addTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request,org.junit.runner.JUnitCore)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request,org.junit.runner.JUnitCore)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
#3.the call statck between class <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)> to <junit.framework.TestSuite: void addTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
#4.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)> to <junit.framework.TestSuite: void addTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
#7.the call statck between class <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)> to <junit.framework.TestSuite: void addTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
#8.the call statck between class <junit.framework.TestSuite: void addTestSuite(java.lang.Class)> to <junit.framework.TestSuite: void addTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)>[]--><org.junit.internal.runners.JUnit38ClassRunner: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)>[]--><org.junit.internal.runners.JUnit38ClassRunner: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: void addTest(junit.framework.Test)>
#10.the call statck between class <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)> to <junit.framework.TestSuite: void addTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
crashApis:39
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <junit.framework.TestSuite: java.lang.String getName()> is checking!!!
The life time of api is [26,27]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: java.lang.String toString()>[]--><junit.framework.TestSuite: java.lang.String getName()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: java.lang.String toString()>[]--><junit.framework.TestSuite: java.lang.String getName()>
#2.the call statck between class <junit.framework.TestSuite: java.lang.String toString()> to <junit.framework.TestSuite: java.lang.String getName()>has compatibility isssues！
-----------------------------------------
crashApis:40
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>
#2.the call statck between class <junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:41
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <junit.framework.AssertionFailedError: void <init>()> is checking!!!
The life time of api is [26,27]
52call roads:
1 Mainhead roads:
51 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(boolean,boolean)> to <junit.framework.AssertionFailedError: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void failSame(java.lang.String)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void failSame(java.lang.String)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
#3.the call statck between class <junit.framework.TestCase: void failSame(java.lang.String)> to <junit.framework.AssertionFailedError: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
#6.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)> to <junit.framework.AssertionFailedError: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failSame(java.lang.String)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
#7.the call statck between class <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.AssertionFailedError: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
#8.the call statck between class <junit.framework.TestCase: void assertEquals(long,long)> to <junit.framework.AssertionFailedError: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>[]--><junit.framework.Assert: void assertTrue(java.lang.String,boolean)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>[]--><junit.framework.Assert: void assertTrue(java.lang.String,boolean)>[]--><junit.framework.Assert: void fail(java.lang.String)>[]--><junit.framework.AssertionFailedError: void <init>()>
#10.the call statck between class <junit.framework.TestCase: void assertNull(java.lang.Object)> to <junit.framework.AssertionFailedError: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:42
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> to <junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> to <junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:43
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <junit.framework.TestSuite: int testCount()> is checking!!!
The life time of api is [26,27]
21call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.secuso.privacyfriendlysolitaire.Activities.Solitaire dummyMainMethod_org_secuso_privacyfriendlysolitaire_Activities_Solitaire(android.content.Intent)>[]--><org.secuso.privacyfriendlysolitaire.Activities.Solitaire: void onCreate(android.os.Bundle)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
20 Packageshead roads:
try
Good road with try: <com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: boolean act(float)>[]--><com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void run()>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
try
Good road with try: <org.junit.runners.ParentRunner: void access$000(org.junit.runners.ParentRunner,org.junit.runner.notification.RunNotifier)>[]--><org.junit.runners.ParentRunner: void runChildren(org.junit.runner.notification.RunNotifier)>[[try]]--><org.junit.runners.ParentRunner$1: void schedule(java.lang.Runnable)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: org.junit.runner.Description asDescription(junit.framework.Test)>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description getDescription()>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description makeDescription(junit.framework.Test)>[]--><junit.framework.TestSuite: int testCount()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: org.junit.runner.Description asDescription(junit.framework.Test)>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description getDescription()>[]--><org.junit.internal.runners.JUnit38ClassRunner: org.junit.runner.Description makeDescription(junit.framework.Test)>[]--><junit.framework.TestSuite: int testCount()>
#7.the call statck between class <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: org.junit.runner.Description asDescription(junit.framework.Test)> to <junit.framework.TestSuite: int testCount()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.extensions.ActiveTestSuite: void waitUntilFinished()>[[try]]--><junit.framework.TestSuite: int testCount()>
One road protect good!
crashApis:44
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <junit.framework.TestResult: void addError(junit.framework.Test,java.lang.Throwable)> is checking!!!
The life time of api is [26,27]
19call roads:
1 Mainhead roads:
18 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testFailure(org.junit.runner.notification.Failure)>[]--><junit.framework.TestResult: void addError(junit.framework.Test,java.lang.Throwable)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testFailure(org.junit.runner.notification.Failure)>[]--><junit.framework.TestResult: void addError(junit.framework.Test,java.lang.Throwable)>
#9.the call statck between class <junit.framework.JUnit4TestAdapterCache$1: void testFailure(org.junit.runner.notification.Failure)> to <junit.framework.TestResult: void addError(junit.framework.Test,java.lang.Throwable)>has compatibility isssues！
-----------------------------------------
crashApis:45
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.media.MediaPlayer: void setVolume(float,float)> is checking!!!
The life time of api is [1,17]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.badlogic.gdx.backends.android.AndroidMusic: void setVolume(float)>[]--><android.media.MediaPlayer: void setVolume(float,float)>
#1.the call statck between class <com.badlogic.gdx.backends.android.AndroidMusic: void setVolume(float)> to <android.media.MediaPlayer: void setVolume(float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.badlogic.gdx.backends.android.AndroidMusic: void setPan(float,float)>[]--><android.media.MediaPlayer: void setVolume(float,float)>
#2.the call statck between class <com.badlogic.gdx.backends.android.AndroidMusic: void setPan(float,float)> to <android.media.MediaPlayer: void setVolume(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:46
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)> is checking!!!
The life time of api is [26,27]
19call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.secuso.privacyfriendlysolitaire.Activities.Solitaire dummyMainMethod_org_secuso_privacyfriendlysolitaire_Activities_Solitaire(android.content.Intent)>[]--><org.secuso.privacyfriendlysolitaire.Activities.Solitaire: void onCreate(android.os.Bundle)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
18 Packageshead roads:
try
Good road with try: <com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: boolean act(float)>[]--><com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void run()>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <org.junit.runners.ParentRunner: void access$000(org.junit.runners.ParentRunner,org.junit.runner.notification.RunNotifier)>[]--><org.junit.runners.ParentRunner: void runChildren(org.junit.runner.notification.RunNotifier)>[[try]]--><org.junit.runners.ParentRunner$1: void schedule(java.lang.Runnable)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <junit.framework.JUnit4TestAdapterCache$1: void testFailure(org.junit.runner.notification.Failure)>[]--><junit.framework.TestResult: void addError(junit.framework.Test,java.lang.Throwable)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit4ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.ClassRoadie: void runProtected()>[[try]]--><org.junit.internal.runners.ClassRoadie: void runUnprotected()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void initialize(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void <init>(com.badlogic.gdx.backends.android.AndroidLiveWallpaper,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: void initialize(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidDaydream: void initialize(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.TestSetup: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphics: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphics: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphics: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphics: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidDaydream: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>
One road protect good!
containsStatic:false
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <junit.framework.TestResult: boolean shouldStop()> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.secuso.privacyfriendlysolitaire.Activities.Solitaire dummyMainMethod_org_secuso_privacyfriendlysolitaire_Activities_Solitaire(android.content.Intent)>[]--><org.secuso.privacyfriendlysolitaire.Activities.Solitaire: void onCreate(android.os.Bundle)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
17 Packageshead roads:
try
Good road with try: <com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: boolean act(float)>[]--><com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void run()>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <org.junit.runners.ParentRunner: void access$000(org.junit.runners.ParentRunner,org.junit.runner.notification.RunNotifier)>[]--><org.junit.runners.ParentRunner: void runChildren(org.junit.runner.notification.RunNotifier)>[[try]]--><org.junit.runners.ParentRunner$1: void schedule(java.lang.Runnable)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit4ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.ClassRoadie: void runProtected()>[[try]]--><org.junit.internal.runners.ClassRoadie: void runUnprotected()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void initialize(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void <init>(com.badlogic.gdx.backends.android.AndroidLiveWallpaper,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: void initialize(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidDaydream: void initialize(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: boolean shouldStop()>
#15.the call statck between class <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)> to <junit.framework.TestResult: boolean shouldStop()>has compatibility isssues！
-----------------------------------------
crashApis:47
containsStatic:false
containsTry:true
16call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,byte,byte)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(byte,byte)>[]--><junit.framework.Assert: void assertEquals(byte,byte)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,byte,byte)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(byte,byte)>[]--><junit.framework.Assert: void assertEquals(byte,byte)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,byte,byte)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(byte,byte)> to <junit.framework.Assert: void assertEquals(java.lang.String,byte,byte)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,byte,byte)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,byte,byte)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,byte,byte)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,byte,byte)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,byte,byte)> to <junit.framework.Assert: void assertEquals(java.lang.String,byte,byte)>has compatibility isssues！
-----------------------------------------
crashApis:48
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <junit.framework.Assert: void <init>()> is checking!!!
The life time of api is [26,27]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void <init>()>[]--><junit.framework.Assert: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void <init>()>[]--><junit.framework.Assert: void <init>()>
#1.the call statck between class <junit.framework.TestCase: void <init>()> to <junit.framework.Assert: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite$1: void <init>(java.lang.String,java.lang.String)>[]--><junit.framework.TestCase: void <init>(java.lang.String)>[]--><junit.framework.Assert: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite$1: void <init>(java.lang.String,java.lang.String)>[]--><junit.framework.TestCase: void <init>(java.lang.String)>[]--><junit.framework.Assert: void <init>()>
#2.the call statck between class <junit.framework.TestSuite$1: void <init>(java.lang.String,java.lang.String)> to <junit.framework.Assert: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.TestSetup: void <init>(junit.framework.Test)>[]--><junit.extensions.TestDecorator: void <init>(junit.framework.Test)>[]--><junit.framework.Assert: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.TestSetup: void <init>(junit.framework.Test)>[]--><junit.extensions.TestDecorator: void <init>(junit.framework.Test)>[]--><junit.framework.Assert: void <init>()>
#3.the call statck between class <junit.extensions.TestSetup: void <init>(junit.framework.Test)> to <junit.framework.Assert: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.RepeatedTest: void <init>(junit.framework.Test,int)>[]--><junit.extensions.TestDecorator: void <init>(junit.framework.Test)>[]--><junit.framework.Assert: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.RepeatedTest: void <init>(junit.framework.Test,int)>[]--><junit.extensions.TestDecorator: void <init>(junit.framework.Test)>[]--><junit.framework.Assert: void <init>()>
#4.the call statck between class <junit.extensions.RepeatedTest: void <init>(junit.framework.Test,int)> to <junit.framework.Assert: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:49
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.secuso.privacyfriendlysolitaire.Activities.Solitaire dummyMainMethod_org_secuso_privacyfriendlysolitaire_Activities_Solitaire(android.content.Intent)>[]--><org.secuso.privacyfriendlysolitaire.Activities.Solitaire: void onCreate(android.os.Bundle)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
17 Packageshead roads:
try
Good road with try: <com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: boolean act(float)>[]--><com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void run()>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <org.junit.runners.ParentRunner: void access$000(org.junit.runners.ParentRunner,org.junit.runner.notification.RunNotifier)>[]--><org.junit.runners.ParentRunner: void runChildren(org.junit.runner.notification.RunNotifier)>[[try]]--><org.junit.runners.ParentRunner$1: void schedule(java.lang.Runnable)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit4ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.ClassRoadie: void runProtected()>[[try]]--><org.junit.internal.runners.ClassRoadie: void runUnprotected()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void initialize(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void <init>(com.badlogic.gdx.backends.android.AndroidLiveWallpaper,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: void initialize(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidDaydream: void initialize(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.TestSetup: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphics: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphics: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphics: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphics: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidDaydream: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>[]--><junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>[[try]]--><junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
One road protect good!
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(int,int)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(int,int)>[]--><junit.framework.Assert: void assertEquals(int,int)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(int,int)>[]--><junit.framework.Assert: void assertEquals(int,int)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(int,int)> to <junit.framework.Assert: void assertEquals(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:50
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertTrue(boolean)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertTrue(boolean)>[]--><junit.framework.Assert: void assertTrue(boolean)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertTrue(boolean)>[]--><junit.framework.Assert: void assertTrue(boolean)>
#1.the call statck between class <junit.framework.TestCase: void assertTrue(boolean)> to <junit.framework.Assert: void assertTrue(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:51
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertSame(java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.Object,java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void assertSame(java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void assertSame(java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:52
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(char,char)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(char,char)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(char,char)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(char,char)> to <junit.framework.Assert: void assertEquals(char,char)>has compatibility isssues！
-----------------------------------------
crashApis:53
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <junit.framework.Assert: void failSame(java.lang.String)> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void failSame(java.lang.String)>[]--><junit.framework.Assert: void failSame(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void failSame(java.lang.String)>[]--><junit.framework.Assert: void failSame(java.lang.String)>
#1.the call statck between class <junit.framework.TestCase: void failSame(java.lang.String)> to <junit.framework.Assert: void failSame(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failSame(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failSame(java.lang.String)>
#2.the call statck between class <junit.framework.TestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void failSame(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failSame(java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void failSame(java.lang.String)>
#3.the call statck between class <junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void failSame(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:54
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <junit.framework.TestResult: void <init>()> is checking!!!
The life time of api is [26,27]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult createTestResult()>[]--><junit.framework.TestResult: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult createTestResult()>[]--><junit.framework.TestResult: void <init>()>
#1.the call statck between class <junit.textui.TestRunner: void runAndWait(junit.framework.Test)> to <junit.framework.TestResult: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: junit.framework.TestResult createResult()>[]--><junit.framework.TestResult: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: junit.framework.TestResult createResult()>[]--><junit.framework.TestResult: void <init>()>
#2.the call statck between class <junit.framework.TestCase: junit.framework.TestResult run()> to <junit.framework.TestResult: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult createTestResult()>[]--><junit.framework.TestResult: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult createTestResult()>[]--><junit.framework.TestResult: void <init>()>
#3.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.TestResult: void <init>()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult createTestResult()>[]--><junit.framework.TestResult: void <init>()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestResult: void <init>()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestResult: void <init>()>
#5.the call statck between class <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)> to <junit.framework.TestResult: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:55
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertNotNull(java.lang.Object)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNotNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNotNull(java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNotNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNotNull(java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void assertNotNull(java.lang.Object)> to <junit.framework.Assert: void assertNotNull(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:56
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertNotSame(java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:57
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <junit.framework.TestResult: void addListener(junit.framework.TestListener)> is checking!!!
The life time of api is [26,27]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestResult: void addListener(junit.framework.TestListener)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestResult: void addListener(junit.framework.TestListener)>
#1.the call statck between class <junit.textui.TestRunner: void runAndWait(junit.framework.Test)> to <junit.framework.TestResult: void addListener(junit.framework.TestListener)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestResult: void addListener(junit.framework.TestListener)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestResult: void addListener(junit.framework.TestListener)>
#2.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.TestResult: void addListener(junit.framework.TestListener)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestResult: void addListener(junit.framework.TestListener)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestResult: void addListener(junit.framework.TestListener)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)>[]--><junit.framework.TestResult: void addListener(junit.framework.TestListener)>
#4.the call statck between class <org.junit.internal.runners.JUnit38ClassRunner: void run(org.junit.runner.notification.RunNotifier)> to <junit.framework.TestResult: void addListener(junit.framework.TestListener)>has compatibility isssues！
-----------------------------------------
crashApis:58
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <junit.framework.TestResult: java.util.Enumeration failures()> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFailures(junit.framework.TestResult)>[]--><junit.framework.TestResult: java.util.Enumeration failures()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFailures(junit.framework.TestResult)>[]--><junit.framework.TestResult: java.util.Enumeration failures()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printFailures(junit.framework.TestResult)>[]--><junit.framework.TestResult: java.util.Enumeration failures()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <junit.framework.TestCase: void runBare()> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,long,long)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(long,long)> to <junit.framework.Assert: void assertEquals(java.lang.String,long,long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,long,long)> to <junit.framework.Assert: void assertEquals(java.lang.String,long,long)>has compatibility isssues！
-----------------------------------------
crashApis:59
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertNotNull(java.lang.String,java.lang.Object)> is checking!!!
The life time of api is [26,27]
19call roads:
1 Mainhead roads:
18 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertNotNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNotNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNotNull(java.lang.String,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertNotNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNotNull(java.lang.Object)>[]--><junit.framework.Assert: void assertNotNull(java.lang.String,java.lang.Object)>
#12.the call statck between class <junit.framework.TestCase: void assertNotNull(java.lang.Object)> to <junit.framework.Assert: void assertNotNull(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:60
containsStatic:false
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [26,27]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(boolean,boolean)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#3.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,short,short)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#4.the call statck between class <junit.framework.TestCase: void assertEquals(char,char)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,int,int)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#5.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,char,char)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#6.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,char,char)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#7.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#8.the call statck between class <junit.framework.TestCase: void assertEquals(long,long)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,long,long)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#9.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,long,long)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(short,short)>[]--><junit.framework.Assert: void assertEquals(short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(short,short)>[]--><junit.framework.Assert: void assertEquals(short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,short,short)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>
#10.the call statck between class <junit.framework.TestCase: void assertEquals(short,short)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:61
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <junit.framework.TestCase: java.lang.String getName()> is checking!!!
The life time of api is [26,27]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: java.lang.String getName(junit.framework.Test)>[]--><junit.framework.TestCase: java.lang.String getName()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: java.lang.String getName(junit.framework.Test)>[]--><junit.framework.TestCase: java.lang.String getName()>
#1.the call statck between class <org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener: java.lang.String getName(junit.framework.Test)> to <junit.framework.TestCase: java.lang.String getName()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: java.lang.String toString()>[]--><junit.framework.TestCase: java.lang.String getName()>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: java.lang.String toString()>[]--><junit.framework.TestCase: java.lang.String getName()>
#2.the call statck between class <junit.framework.TestCase: java.lang.String toString()> to <junit.framework.TestCase: java.lang.String getName()>has compatibility isssues！
-----------------------------------------
crashApis:62
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <junit.framework.TestResult: int errorCount()> is checking!!!
The life time of api is [26,27]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.framework.TestResult: int errorCount()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.framework.TestResult: int errorCount()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>[[try]]--><junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>[]--><junit.framework.TestResult: int errorCount()>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.framework.TestResult: boolean wasSuccessful()>[[try]]--><junit.framework.TestResult: int errorCount()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <junit.framework.TestListener: void startTest(junit.framework.Test)> is checking!!!
The life time of api is [26,27]
19call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.secuso.privacyfriendlysolitaire.Activities.Solitaire dummyMainMethod_org_secuso_privacyfriendlysolitaire_Activities_Solitaire(android.content.Intent)>[]--><org.secuso.privacyfriendlysolitaire.Activities.Solitaire: void onCreate(android.os.Bundle)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
18 Packageshead roads:
try
Good road with try: <com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: boolean act(float)>[]--><com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void run()>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>[[try]]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: junit.framework.TestResult run()>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
#3.the call statck between class <junit.framework.TestCase: junit.framework.TestResult run()> to <junit.framework.TestListener: void startTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.junit.runners.ParentRunner: void access$000(org.junit.runners.ParentRunner,org.junit.runner.notification.RunNotifier)>[]--><org.junit.runners.ParentRunner: void runChildren(org.junit.runner.notification.RunNotifier)>[[try]]--><org.junit.runners.ParentRunner$1: void schedule(java.lang.Runnable)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
#5.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.TestListener: void startTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testStarted(org.junit.runner.Description)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.JUnit4TestAdapterCache$1: void testStarted(org.junit.runner.Description)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
#7.the call statck between class <junit.framework.JUnit4TestAdapterCache$1: void testStarted(org.junit.runner.Description)> to <junit.framework.TestListener: void startTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidDaydream: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidNet: boolean openURI(java.lang.String)>[]--><com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void runOnUiThread(java.lang.Runnable)>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
try
Good road with try: <com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)>[]--><com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: void <init>(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)>[]--><com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()>[]--><com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()>[[try]]--><com.badlogic.gdx.utils.PauseableThread: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner$1: void run()>[]--><org.junit.internal.runners.JUnit4ClassRunner: void runMethods(org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>[]--><org.junit.internal.runners.MethodRoadie: void run()>[[try]]--><org.junit.internal.runners.MethodRoadie: void runWithTimeout(long)>[]--><org.junit.internal.runners.MethodRoadie: void runBeforesThenTestThenAfters(java.lang.Runnable)>[[try]]--><junit.extensions.ActiveTestSuite$1: void run()>[[try]]--><junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void run(junit.framework.TestResult)>[]--><junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>[]--><junit.extensions.RepeatedTest: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void run(junit.framework.TestResult)>[]--><junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void runAndWait(junit.framework.Test)>[]--><junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>[]--><junit.framework.TestCase: void run(junit.framework.TestResult)>[]--><junit.framework.TestResult: void run(junit.framework.TestCase)>[]--><junit.framework.TestResult: void startTest(junit.framework.Test)>[]--><junit.framework.TestListener: void startTest(junit.framework.Test)>
#10.the call statck between class <junit.textui.TestRunner: void runAndWait(junit.framework.Test)> to <junit.framework.TestListener: void startTest(junit.framework.Test)>has compatibility isssues！
-----------------------------------------
crashApis:63
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)> is checking!!!
The life time of api is [26,27]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
try
Good road with try: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>[]--><junit.framework.TestSuite: junit.framework.Test testCaseForClass(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>
One road protect good!
try
Good road with try: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>
One road protect good!
try
Good road with try: <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)>[]--><org.junit.internal.runners.JUnit38ClassRunner: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>
One road protect good!
try
Good road with try: <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>
One road protect good!
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>
One road protect good!
try
Good road with try: <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request,org.junit.runner.JUnitCore)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>
One road protect good!
try
Good road with try: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>
One road protect good!
try
Good road with try: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>[[try]]--><junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 86 Potential Issue API: SDKCheck of <junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)> is checking!!!
The life time of api is [26,27]
18call roads:
1 Mainhead roads:
17 Packageshead roads:
containsStatic:false
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 87 Potential Issue API: SDKCheck of <junit.framework.TestSuite: void <init>(java.lang.Class[])> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>
#1.the call statck between class <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)> to <junit.framework.TestSuite: void <init>(java.lang.Class[])>has compatibility isssues！
-----------------------------------------
crashApis:64
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 88 Potential Issue API: SDKCheck of <junit.framework.TestSuite: void <init>(java.lang.Class)> is checking!!!
The life time of api is [26,27]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>[]--><junit.framework.TestSuite: junit.framework.Test testCaseForClass(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>[]--><junit.framework.TestSuite: junit.framework.Test testCaseForClass(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
#1.the call statck between class <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)> to <junit.framework.TestSuite: void <init>(java.lang.Class)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
#2.the call statck between class <junit.framework.TestSuite: void addTestSuite(java.lang.Class)> to <junit.framework.TestSuite: void <init>(java.lang.Class)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)>[]--><org.junit.internal.runners.JUnit38ClassRunner: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)>[]--><org.junit.internal.runners.JUnit38ClassRunner: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
#3.the call statck between class <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)> to <junit.framework.TestSuite: void <init>(java.lang.Class)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
#4.the call statck between class <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)> to <junit.framework.TestSuite: void <init>(java.lang.Class)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
#5.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.TestSuite: void <init>(java.lang.Class)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request,org.junit.runner.JUnitCore)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request,org.junit.runner.JUnitCore)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
#7.the call statck between class <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)> to <junit.framework.TestSuite: void <init>(java.lang.Class)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
#8.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)> to <junit.framework.TestSuite: void <init>(java.lang.Class)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>
#9.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)> to <junit.framework.TestSuite: void <init>(java.lang.Class)>has compatibility isssues！
-----------------------------------------
crashApis:65
containsStatic:false
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 89 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(boolean,boolean)> to <junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,boolean,boolean)> to <junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:66
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 90 Potential Issue API: SDKCheck of <junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)> is checking!!!
The life time of api is [26,27]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>[]--><junit.framework.TestSuite: junit.framework.Test testCaseForClass(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class[])>[]--><junit.framework.TestSuite: junit.framework.Test testCaseForClass(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
#1.the call statck between class <junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)> to <junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestSuite: void addTestSuite(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
#2.the call statck between class <junit.framework.TestSuite: void addTestSuite(java.lang.Class)> to <junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)>[]--><org.junit.internal.runners.JUnit38ClassRunner: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)>[]--><org.junit.internal.runners.JUnit38ClassRunner: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
#3.the call statck between class <org.junit.internal.builders.JUnit3Builder: org.junit.runner.Runner runnerForClass(java.lang.Class)> to <junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
#4.the call statck between class <org.junit.experimental.max.MaxCore: java.util.List sortedLeavesForTest(org.junit.runner.Request)> to <junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.textui.TestRunner: void run(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
#5.the call statck between class <junit.textui.TestRunner: void run(java.lang.Class)> to <junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <junit.textui.TestRunner: void main(java.lang.String[])>[[try]]--><junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>[[try]]--><junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request,org.junit.runner.JUnitCore)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Result run(org.junit.runner.Request,org.junit.runner.JUnitCore)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request sortRequest(org.junit.runner.Request)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Request constructLeafRequest(java.util.List)>[]--><org.junit.experimental.max.MaxCore: org.junit.runner.Runner buildRunner(org.junit.runner.Description)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
#7.the call statck between class <org.junit.experimental.max.MaxCore: org.junit.runner.Result run(java.lang.Class)> to <junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
#8.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class,java.lang.String)> to <junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void <init>(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestsFromTestCase(java.lang.Class)>[]--><junit.framework.TestSuite: void addTestMethod(java.lang.reflect.Method,java.util.List,java.lang.Class)>[]--><junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>
#9.the call statck between class <junit.extensions.ActiveTestSuite: void <init>(java.lang.Class)> to <junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:67
containsStatic:false
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 91 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>
#1.the call statck between class <junit.framework.TestCase: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.Object,java.lang.Object)>[]--><junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>
#2.the call statck between class <junit.framework.TestCase: void assertSame(java.lang.Object,java.lang.Object)> to <junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:68
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 92 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> is checking!!!
The life time of api is [26,27]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>[]--><junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>
#2.the call statck between class <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> to <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:69
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 93 Potential Issue API: SDKCheck of <junit.framework.Assert: void assertEquals(float,float,float)> is checking!!!
The life time of api is [26,27]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <junit.framework.TestCase: void assertEquals(float,float,float)>[]--><junit.framework.Assert: void assertEquals(float,float,float)>
!!!this api will crash on sdk 28 29 30 31 
Error road: <junit.framework.TestCase: void assertEquals(float,float,float)>[]--><junit.framework.Assert: void assertEquals(float,float,float)>
#1.the call statck between class <junit.framework.TestCase: void assertEquals(float,float,float)> to <junit.framework.Assert: void assertEquals(float,float,float)>has compatibility isssues！
-----------------------------------------
crashApis:70
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
crashApis numbers:70
crashApis numbers in main road:0
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 18 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 19 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 20 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 21 this app may have error api use(at least): 70 and error api roads: 184
On Android Version 22 this app may have error api use(at least): 70 and error api roads: 184
On Android Version 23 this app may have error api use(at least): 70 and error api roads: 184
On Android Version 24 this app may have error api use(at least): 70 and error api roads: 184
On Android Version 25 this app may have error api use(at least): 70 and error api roads: 184
On Android Version 26 this app may have error api use(at least): 1 and error api roads: 2
On Android Version 27 this app may have error api use(at least): 1 and error api roads: 2
On Android Version 28 this app may have error api use(at least): 70 and error api roads: 184
On Android Version 29 this app may have error api use(at least): 70 and error api roads: 184
On Android Version 30 this app may have error api use(at least): 70 and error api roads: 184
On Android Version 31 this app may have error api use(at least): 70 and error api roads: 184
