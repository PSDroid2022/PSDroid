/home/ys/桌面/CompactDroid（复件）/dataset2/Red_Moon.apk
Entry Points[com.jmstudios.redmoon.activity.ShadesActivity, com.jmstudios.redmoon.service.ScreenFilterService, com.jmstudios.redmoon.receiver.ScreenStateReceiver, com.jmstudios.redmoon.receiver.SwitchAppWidgetProvider, com.jmstudios.redmoon.receiver.NextProfileCommandReceiver, com.jmstudios.redmoon.activity.AutomaticSuspendPreferenceActivity, com.jmstudios.redmoon.activity.Intro, com.jmstudios.redmoon.activity.ShortcutToggleActivity, com.jmstudios.redmoon.receiver.AutomaticFilterChangeReceiver, com.jmstudios.redmoon.receiver.BootReceiver, com.jmstudios.redmoon.receiver.OrientationChangeReceiver, com.jmstudios.redmoon.activity.ShortcutCreationActivity]
FllowDroidcallgraph size:1716
Soot started on Mon Jul 11 11:37:06 CST 2022
Soot finished on Mon Jul 11 11:37:23 CST 2022
Soot has run for 0 min. 17 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 19
Declared Target Sdk version is: 23
Declared Max Sdk version is: -1
Collected 373 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.Intro dummyMainMethod_com_jmstudios_redmoon_activity_Intro(android.content.Intent)>[]--><com.github.paolorotolo.appintro.AppIntro: void onCreate(android.os.Bundle)>[]--><com.github.paolorotolo.appintro.AppIntro: void restoreLockingState(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 
Error road: <com.github.paolorotolo.appintro.AppIntro2: void onCreate(android.os.Bundle)>[]--><com.github.paolorotolo.appintro.AppIntro2: void restoreLockingState(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <com.github.paolorotolo.appintro.AppIntro2: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:1
crashApisInMain:1
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.widget.TimePicker: int getMinute()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <com.jmstudios.redmoon.preference.TimePickerPreference: void onDialogClosed(boolean)>[[-$i0 < 23]]--><android.widget.TimePicker: int getMinute()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.widget.TimePicker: int getHour()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <com.jmstudios.redmoon.preference.TimePickerPreference: void onDialogClosed(boolean)>[[-$i0 < 23]]--><android.widget.TimePicker: int getHour()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.os.BaseBundle: int size()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.github.paolorotolo.appintro.AppIntroFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int size()>
#1.the call statck between class <com.github.paolorotolo.appintro.AppIntroFragment: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: int size()>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.app.Activity: void requestPermissions(java.lang.String[],int)> is checking!!!
The life time of api is [23,31]
2call roads:
1 Mainhead roads:
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.Intro dummyMainMethod_com_jmstudios_redmoon_activity_Intro(android.content.Intent)>[]--><com.github.paolorotolo.appintro.AppIntro$2: void onClick(android.view.View)>[[-$i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
1 Packageshead roads:
-$i1 < 23
Good road: <com.github.paolorotolo.appintro.AppIntro2$1: void onClick(android.view.View)>[[-$i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.Intro dummyMainMethod_com_jmstudios_redmoon_activity_Intro(android.content.Intent)>[]--><com.github.paolorotolo.appintro.AppIntro: void onCreate(android.os.Bundle)>[]--><com.github.paolorotolo.appintro.AppIntro: void restoreLockingState(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.github.paolorotolo.appintro.AppIntroFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <com.github.paolorotolo.appintro.AppIntroFragment: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.github.paolorotolo.appintro.AppIntro2: void onCreate(android.os.Bundle)>[]--><com.github.paolorotolo.appintro.AppIntro2: void restoreLockingState(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#2.the call statck between class <com.github.paolorotolo.appintro.AppIntro2: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:3
crashApisInMain:2
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.provider.Settings.System: boolean canWrite(android.content.Context)> is checking!!!
The life time of api is [23,31]
2call roads:
1 Mainhead roads:
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.service.ScreenFilterService dummyMainMethod_com_jmstudios_redmoon_service_ScreenFilterService(android.content.Intent)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void <init>(com.jmstudios.redmoon.view.ScreenFilterView,com.jmstudios.redmoon.model.SettingsModel,com.jmstudios.redmoon.service.ServiceLifeCycleController,android.content.Context,com.jmstudios.redmoon.manager.WindowViewManager,com.jmstudios.redmoon.manager.ScreenManager,android.support.v4.app.NotificationCompat$Builder,com.jmstudios.redmoon.helper.FilterCommandFactory,com.jmstudios.redmoon.helper.FilterCommandParser)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter$SuspendState: void onScreenFilterCommand(int)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void access$2000(com.jmstudios.redmoon.presenter.ScreenFilterPresenter,com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void moveToState(com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter$OnState: void onActivation(com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void setBrightnessState(int,boolean,android.content.Context)>[[-$i1 < 23]]--><android.provider.Settings.System: boolean canWrite(android.content.Context)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.receiver.BootReceiver dummyMainMethod_com_jmstudios_redmoon_receiver_BootReceiver(android.content.Intent)>[]--><com.jmstudios.redmoon.receiver.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void setBrightnessState(int,boolean,android.content.Context)>[[-$i1 < 23]]--><android.provider.Settings.System: boolean canWrite(android.content.Context)>
One road protect good!
-$i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.ShadesActivity dummyMainMethod_com_jmstudios_redmoon_activity_ShadesActivity(android.content.Intent)>[]--><dummyMainClass: com.jmstudios.redmoon.fragment.ShadesFragment dummyMainMethod_com_jmstudios_redmoon_fragment_ShadesFragment(android.content.Intent,android.app.Activity)>[]--><com.jmstudios.redmoon.fragment.ShadesFragment: void onCreate(android.os.Bundle)>[[-$i0 < 23]]--><android.provider.Settings.System: boolean canWrite(android.content.Context)>
One road protect good!
1 Packageshead roads:
-$i1 < 23
Good road: <com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void onLowerBrightnessChanged(boolean)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void restoreBrightnessState()>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void setBrightnessState(int,boolean,android.content.Context)>[[-$i1 < 23]]--><android.provider.Settings.System: boolean canWrite(android.content.Context)>
One road protect good!
-$i1 < 23
Good road: <com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void onLowerBrightnessChanged(boolean)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void setBrightnessState(int,boolean,android.content.Context)>[[-$i1 < 23]]--><android.provider.Settings.System: boolean canWrite(android.content.Context)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.Intro dummyMainMethod_com_jmstudios_redmoon_activity_Intro(android.content.Intent)>[]--><com.github.paolorotolo.appintro.AppIntro: void onCreate(android.os.Bundle)>[]--><com.jmstudios.redmoon.activity.Intro: void init(android.os.Bundle)>[]--><com.github.paolorotolo.appintro.AppIntroFragment: com.github.paolorotolo.appintro.AppIntroFragment newInstance(java.lang.CharSequence,java.lang.CharSequence,int,int)>[]--><com.github.paolorotolo.appintro.AppIntroFragment: com.github.paolorotolo.appintro.AppIntroFragment newInstance(java.lang.CharSequence,java.lang.CharSequence,int,int,int,int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.github.paolorotolo.appintro.AppIntro2: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <com.github.paolorotolo.appintro.AppIntro2: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:4
crashApisInMain:3
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.provider.Settings: boolean canDrawOverlays(android.content.Context)> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
$i0 >= 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.ShadesActivity dummyMainMethod_com_jmstudios_redmoon_activity_ShadesActivity(android.content.Intent)>[]--><com.jmstudios.redmoon.activity.ShadesActivity$1: void onClick(android.view.View)>[]--><com.jmstudios.redmoon.activity.ShadesActivity: boolean access$000(com.jmstudios.redmoon.activity.ShadesActivity)>[]--><com.jmstudios.redmoon.activity.ShadesActivity: boolean hasOverlayPermission()>[[$i0 >= 23]]--><android.provider.Settings: boolean canDrawOverlays(android.content.Context)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.view.Window: void setNavigationBarColor(int)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 21
Good road: <com.github.paolorotolo.appintro.AppIntro2: void setNavBarColor(java.lang.String)>[[-$i0 < 21]]--><android.view.Window: void setNavigationBarColor(int)>
One road protect good!
-$i1 < 21
Good road: <com.github.paolorotolo.appintro.AppIntro: void setNavBarColor(int)>[[-$i1 < 21]]--><android.view.Window: void setNavigationBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <com.github.paolorotolo.appintro.AppIntro: void setNavBarColor(java.lang.String)>[[-$i0 < 21]]--><android.view.Window: void setNavigationBarColor(int)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean containsKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.github.paolorotolo.appintro.AppIntroFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#1.the call statck between class <com.github.paolorotolo.appintro.AppIntroFragment: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.app.Fragment: android.content.Context getContext()> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
-$i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.ShadesActivity dummyMainMethod_com_jmstudios_redmoon_activity_ShadesActivity(android.content.Intent)>[]--><dummyMainClass: com.jmstudios.redmoon.fragment.ShadesFragment dummyMainMethod_com_jmstudios_redmoon_fragment_ShadesFragment(android.content.Intent,android.app.Activity)>[]--><com.jmstudios.redmoon.fragment.ShadesFragment: void onCreate(android.os.Bundle)>[[-$i0 < 23]]--><android.app.Fragment: android.content.Context getContext()>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.app.usage.UsageStats: java.lang.String getPackageName()> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.receiver.ScreenStateReceiver dummyMainMethod_com_jmstudios_redmoon_receiver_ScreenStateReceiver(android.content.Intent)>[]--><com.jmstudios.redmoon.receiver.ScreenStateReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void onScreenTurnedOn()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStats: java.lang.String getPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.service.ScreenFilterService dummyMainMethod_com_jmstudios_redmoon_service_ScreenFilterService(android.content.Intent)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void <init>(com.jmstudios.redmoon.view.ScreenFilterView,com.jmstudios.redmoon.model.SettingsModel,com.jmstudios.redmoon.service.ServiceLifeCycleController,android.content.Context,com.jmstudios.redmoon.manager.WindowViewManager,com.jmstudios.redmoon.manager.ScreenManager,android.support.v4.app.NotificationCompat$Builder,com.jmstudios.redmoon.helper.FilterCommandFactory,com.jmstudios.redmoon.helper.FilterCommandParser)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter$SuspendState: void onScreenFilterCommand(int)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void access$2000(com.jmstudios.redmoon.presenter.ScreenFilterPresenter,com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void moveToState(com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter$OnState: void onActivation(com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void startAppMonitoring()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStats: java.lang.String getPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
-$i0 < 21
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.AutomaticSuspendPreferenceActivity dummyMainMethod_com_jmstudios_redmoon_activity_AutomaticSuspendPreferenceActivity(android.content.Intent)>[]--><com.jmstudios.redmoon.activity.AutomaticSuspendPreferenceActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.jmstudios.redmoon.preference.SwitchBarPreference: void usageStatsPermissionAttempted()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: boolean isAppMonitoringWorking(android.content.Context)>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStats: java.lang.String getPackageName()>
One road protect good!
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
try
Good road with try: <com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void onAutomaticSuspendChanged(boolean)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void startAppMonitoring()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStats: java.lang.String getPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
-$i0 < 21
-$i0 < 21
try
Good road with try: <com.jmstudios.redmoon.preference.SwitchBarPreference: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: boolean isAppMonitoringWorking(android.content.Context)>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStats: java.lang.String getPackageName()>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.Intro dummyMainMethod_com_jmstudios_redmoon_activity_Intro(android.content.Intent)>[]--><com.github.paolorotolo.appintro.AppIntro: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 
Error road: <com.github.paolorotolo.appintro.AppIntro2: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#1.the call statck between class <com.github.paolorotolo.appintro.AppIntro2: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:6
crashApisInMain:4
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.widget.TimePicker: void setHour(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <com.jmstudios.redmoon.preference.TimePickerPreference: void onBindDialogView(android.view.View)>[[-$i2 < 23]]--><android.widget.TimePicker: void setHour(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.os.PowerManager: boolean isInteractive()> is checking!!!
The life time of api is [21,31]
2call roads:
1 Mainhead roads:
-$i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.service.ScreenFilterService dummyMainMethod_com_jmstudios_redmoon_service_ScreenFilterService(android.content.Intent)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void <init>(com.jmstudios.redmoon.view.ScreenFilterView,com.jmstudios.redmoon.model.SettingsModel,com.jmstudios.redmoon.service.ServiceLifeCycleController,android.content.Context,com.jmstudios.redmoon.manager.WindowViewManager,com.jmstudios.redmoon.manager.ScreenManager,android.support.v4.app.NotificationCompat$Builder,com.jmstudios.redmoon.helper.FilterCommandFactory,com.jmstudios.redmoon.helper.FilterCommandParser)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter$SuspendState: void onScreenFilterCommand(int)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void access$2000(com.jmstudios.redmoon.presenter.ScreenFilterPresenter,com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void moveToState(com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter$OnState: void onActivation(com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void startAppMonitoring()>[[-$i0 < 20]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
1 Packageshead roads:
-$i0 < 20
Good road: <com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void onAutomaticSuspendChanged(boolean)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void startAppMonitoring()>[[-$i0 < 20]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.widget.TimePicker: void setMinute(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <com.jmstudios.redmoon.preference.TimePickerPreference: void onBindDialogView(android.view.View)>[[-$i2 < 23]]--><android.widget.TimePicker: void setMinute(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.receiver.ScreenStateReceiver dummyMainMethod_com_jmstudios_redmoon_receiver_ScreenStateReceiver(android.content.Intent)>[]--><com.jmstudios.redmoon.receiver.ScreenStateReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void onScreenTurnedOn()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.service.ScreenFilterService dummyMainMethod_com_jmstudios_redmoon_service_ScreenFilterService(android.content.Intent)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void <init>(com.jmstudios.redmoon.view.ScreenFilterView,com.jmstudios.redmoon.model.SettingsModel,com.jmstudios.redmoon.service.ServiceLifeCycleController,android.content.Context,com.jmstudios.redmoon.manager.WindowViewManager,com.jmstudios.redmoon.manager.ScreenManager,android.support.v4.app.NotificationCompat$Builder,com.jmstudios.redmoon.helper.FilterCommandFactory,com.jmstudios.redmoon.helper.FilterCommandParser)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter$SuspendState: void onScreenFilterCommand(int)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void access$2000(com.jmstudios.redmoon.presenter.ScreenFilterPresenter,com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void moveToState(com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter$OnState: void onActivation(com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void startAppMonitoring()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
-$i0 < 21
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.AutomaticSuspendPreferenceActivity dummyMainMethod_com_jmstudios_redmoon_activity_AutomaticSuspendPreferenceActivity(android.content.Intent)>[]--><com.jmstudios.redmoon.activity.AutomaticSuspendPreferenceActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.jmstudios.redmoon.preference.SwitchBarPreference: void usageStatsPermissionAttempted()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: boolean isAppMonitoringWorking(android.content.Context)>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)>
One road protect good!
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
try
Good road with try: <com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void onAutomaticSuspendChanged(boolean)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void startAppMonitoring()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
-$i0 < 21
-$i0 < 21
try
Good road with try: <com.jmstudios.redmoon.preference.SwitchBarPreference: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: boolean isAppMonitoringWorking(android.content.Context)>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.github.paolorotolo.appintro.AppIntro2: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
#1.the call statck between class <com.github.paolorotolo.appintro.AppIntro2: void onRequestPermissionsResult(int,java.lang.String[],int[])> to <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.github.paolorotolo.appintro.AppIntro: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
#2.the call statck between class <com.github.paolorotolo.appintro.AppIntro: void onRequestPermissionsResult(int,java.lang.String[],int[])> to <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>has compatibility isssues！
-----------------------------------------
crashApis:7
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.app.usage.UsageStats: long getLastTimeUsed()> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.receiver.ScreenStateReceiver dummyMainMethod_com_jmstudios_redmoon_receiver_ScreenStateReceiver(android.content.Intent)>[]--><com.jmstudios.redmoon.receiver.ScreenStateReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void onScreenTurnedOn()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStats: long getLastTimeUsed()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.service.ScreenFilterService dummyMainMethod_com_jmstudios_redmoon_service_ScreenFilterService(android.content.Intent)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void <init>(com.jmstudios.redmoon.view.ScreenFilterView,com.jmstudios.redmoon.model.SettingsModel,com.jmstudios.redmoon.service.ServiceLifeCycleController,android.content.Context,com.jmstudios.redmoon.manager.WindowViewManager,com.jmstudios.redmoon.manager.ScreenManager,android.support.v4.app.NotificationCompat$Builder,com.jmstudios.redmoon.helper.FilterCommandFactory,com.jmstudios.redmoon.helper.FilterCommandParser)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter$SuspendState: void onScreenFilterCommand(int)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void access$2000(com.jmstudios.redmoon.presenter.ScreenFilterPresenter,com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void moveToState(com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter$OnState: void onActivation(com.jmstudios.redmoon.presenter.ScreenFilterPresenter$State)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void startAppMonitoring()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStats: long getLastTimeUsed()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
-$i0 < 21
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.jmstudios.redmoon.activity.AutomaticSuspendPreferenceActivity dummyMainMethod_com_jmstudios_redmoon_activity_AutomaticSuspendPreferenceActivity(android.content.Intent)>[]--><com.jmstudios.redmoon.activity.AutomaticSuspendPreferenceActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.jmstudios.redmoon.preference.SwitchBarPreference: void usageStatsPermissionAttempted()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: boolean isAppMonitoringWorking(android.content.Context)>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStats: long getLastTimeUsed()>
One road protect good!
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
try
Good road with try: <com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void onAutomaticSuspendChanged(boolean)>[]--><com.jmstudios.redmoon.presenter.ScreenFilterPresenter: void startAppMonitoring()>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: void run()>[[try]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStats: long getLastTimeUsed()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21]][[try]]
-$i0 < 21
-$i0 < 21
try
Good road with try: <com.jmstudios.redmoon.preference.SwitchBarPreference: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: boolean isAppMonitoringWorking(android.content.Context)>[]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentApp(android.content.Context)>[[-$i0 < 21]]--><com.jmstudios.redmoon.thread.CurrentAppMonitoringThread: java.lang.String getCurrentAppUsingUsageStats(android.content.Context)>[[-$i0 < 21], [try]]--><android.app.usage.UsageStats: long getLastTimeUsed()>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
crashApis numbers:7
crashApis numbers in main road:4
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 18 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 19 this app may have error api use(at least): 7 and error api roads: 13
On Android Version 20 this app may have error api use(at least): 7 and error api roads: 13
On Android Version 21 this app may have error api use(at least): 3 and error api roads: 6
On Android Version 22 this app may have error api use(at least): 1 and error api roads: 2
On Android Version 23 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 24 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 25 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 26 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 27 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 0 and error api roads: 0
