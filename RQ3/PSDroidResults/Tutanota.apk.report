/home/ys/桌面/CompactDroid（复件）/dataset2/Tutanota.apk
Entry Points[de.tutao.tutanota.push.NetworkObserver, androidx.core.content.FileProvider, de.tutao.tutanota.alarms.AlarmBroadcastReceiver, de.tutao.tutanota.push.PushNotificationService, de.tutao.tutanota.MainActivity$3, de.tutao.tutanota.push.BootBroadcastReceiver, de.tutao.tutanota.MainActivity, androidx.room.MultiInstanceInvalidationService]
FllowDroidcallgraph size:2300
Soot started on Mon Jul 11 14:26:13 CST 2022
StaticCheck:<androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>$yysi0 < 19
StaticCheck:<androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>$yysi0 < 28
StaticCheck:<androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>i1 < 25
StaticCheck:<androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>i0 < 16
StaticCheck:<androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>i1 < 28
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>i0 < 25
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>$yysi0 < 26
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>i0 < 26
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>i0 < 25
StaticCheck:<androidx.room.RoomDatabase$JournalMode: boolean isLowRamDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>i0 < 16
StaticCheck:<androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)>i0 < 23
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>$yysi0 < 21
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>$yysi0 < 19
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>i1 < 23
StaticCheck:<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>i0 < 22
StaticCheck:<androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>$yysi0 < 24
StaticCheck:<androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE>$yysi0 < 27
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])>$yysi2 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])>$yysi4 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)>$yysi0 < 15
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)>$yysi0 < 18
StaticCheck:<androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isLayoutDirectionResolved(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)>$yysi0 < 17
StaticCheck:<androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>$yysi1 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>$yysi1 < 24
StaticCheck:<androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>$yysi1 < 21
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastN()>$yysi0 < 24
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastNMR1()>$yysi0 < 25
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastO()>$yysi0 < 26
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastOMR1()>$yysi0 < 27
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastP()>$yysi0 < 28
StaticCheck:<androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)>$yysi0 < 28
StaticCheck:<androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>$yysi0 == 26
StaticCheck:<androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>i0 < 28
StaticCheck:<androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)>$yysi0 < 24
StaticCheck:<androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>$yysi0 < 16
StaticCheck:<androidx.core.view.MarginLayoutParamsCompat: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)>$yysi0 < 17
StaticCheck:<androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>i0 < 28
StaticCheck:<androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)>i1 < 19
StaticCheck:<androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>$yysi0 < 20
StaticCheck:<androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)>$yysi0 < 20
StaticCheck:<androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>$yysi0 < 19
StaticCheck:<androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>$yysi0 < 19
StaticCheck:<androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)>i0 < 23
StaticCheck:<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>i0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>i0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>$yysi1 < 21
StaticCheck:<androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>i0 < 21
StaticCheck:<androidx.core.graphics.BitmapCompat: boolean hasMipMap(android.graphics.Bitmap)>$yysi0 < 18
StaticCheck:<androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(android.view.ScaleGestureDetector)>$yysi0 < 19
StaticCheck:<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>$yysi0 < 23
Soot finished on Mon Jul 11 14:26:24 CST 2022
Soot has run for 0 min. 11 sec.
Found 1 additional DEX files. Now visiting them one by one.
Soot started on Mon Jul 11 14:26:24 CST 2022
StaticCheck:<de.tutao.tutanota.Utils: boolean atLeastNougat()>$yysi0 < 24
StaticCheck:<de.tutao.tutanota.Utils: boolean atLeastOreo()>$yysi0 < 26
Soot finished on Mon Jul 11 14:26:27 CST 2022
Soot has run for 0 min. 2 sec.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 21
Declared Target Sdk version is: 29
Declared Max Sdk version is: -1
Collected 2008 Android APIs in the primary DEX file
Collected 207 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#1.the call statck between class <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.net.TrafficStatsCompat: void tagDatagramSocket(java.net.DatagramSocket)>[[-i0 < 24]]--><android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.app.RemoteAction: void setShouldShowIcon(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[[-$i0 < 28]]--><android.app.RemoteAction: void setShouldShowIcon(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
3call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.MainActivity: void doChangeTheme(java.lang.String)>[[-i2 < 23], [$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.MainActivity: void doChangeTheme(java.lang.String)>[[-i2 < 23]][[$yysi0 < 26]]
-i2 < 23
$yysi0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.MainActivity dummyMainMethod_de_tutao_tutanota_MainActivity(android.content.Intent)>[]--><de.tutao.tutanota.MainActivity: void onCreate(android.os.Bundle)>[]--><de.tutao.tutanota.MainActivity: void doChangeTheme(java.lang.String)>[[-i2 < 23], [$yysi0 < 26]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
2 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.MainActivity: void doChangeTheme(java.lang.String)>[[-i2 < 23], [$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.MainActivity: void doChangeTheme(java.lang.String)>[[-i2 < 23]][[$yysi0 < 26]]
-i2 < 23
$yysi0 < 26
Good road: <de.tutao.tutanota.MainActivity: void lambda$changeTheme$5$MainActivity(java.lang.String)>[]--><de.tutao.tutanota.MainActivity: void doChangeTheme(java.lang.String)>[[-i2 < 23], [$yysi0 < 26]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:true
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon create(android.graphics.Bitmap,float,float)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)>[[-$i0 < 24]]--><android.view.PointerIcon: android.view.PointerIcon create(android.graphics.Bitmap,float,float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.app.Activity: void requestPermissions(java.lang.String[],int)> is checking!!!
The life time of api is [23,31]
23call roads:
1 Mainhead roads:
22 Packageshead roads:
containsStatic:false
containsTry:true
23call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.widget.TextView: int getBreakStrategy()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23]][[i0 < 28]]
-i0 < 23
i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]--><android.widget.TextView: int getBreakStrategy()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.graphics.Paint: java.lang.String getFontVariationSettings()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21]][[$i0 < 17]][[-$i0 < 26]][[$i0 < 24]]
$i0 < 21
$i0 < 17
-$i0 < 26
$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]--><android.graphics.Paint: java.lang.String getFontVariationSettings()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()>[]--><android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()> to <android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.app.RemoteAction: boolean shouldShowIcon()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[[-$i0 < 28]]--><android.app.RemoteAction: boolean shouldShowIcon()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
crashApis:4
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.TextViewCompat: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)>[[-$i0 < 23]]--><android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.view.View: void setAccessibilityHeading(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)>[]--><android.view.View: void setAccessibilityHeading(boolean)>
#1.the call statck between class <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)> to <android.view.View: void setAccessibilityHeading(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewCompat: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>[[-i0 < 28]]--><android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.app.Dialog: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.app.DialogCompat: android.view.View requireViewById(android.app.Dialog,int)>[[-i1 < 28]]--><android.app.Dialog: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.app.RemoteInput: int getResultsSource(android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]
-i1 < 20
i0 < 26
-i0 < 28
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]--><android.app.RemoteInput: int getResultsSource(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.app.NotificationManager: int getImportance()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationManagerCompat: int getImportance()>[[-$i0 < 24]]--><android.app.NotificationManager: int getImportance()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
57call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
56 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View,int)>[[-$i1 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>[]--><android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)> to <android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>has compatibility isssues！
-----------------------------------------
crashApis:7
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.content.Context: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)>[]--><android.content.Context: int checkSelfPermission(java.lang.String)>
#1.the call statck between class <androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)> to <android.content.Context: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$z0 == 0
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>[[-$z0 == 0]]--><android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
#1.the call statck between class <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)> to <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: void <init>(android.app.Person)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><android.app.Notification.MessagingStyle: void <init>(android.app.Person)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.app.Person.Builder: void <init>()> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <android.app.job.JobWorkItem: void <init>(android.content.Intent)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setVibrationPattern(long[])> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$yysi0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[[-$yysi0 < 26]]--><de.tutao.tutanota.push.LocalNotificationsFacade: void createNotificationChannels()>[]--><android.app.NotificationChannel: void setVibrationPattern(long[])>
One road protect good!
0 Packageshead roads:
containsStatic:true
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface build()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface build()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <android.widget.TextView: android.graphics.PorterDuff.Mode getCompoundDrawableTintMode()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.TextViewCompat: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)>[[-$i0 < 23]]--><android.widget.TextView: android.graphics.PorterDuff.Mode getCompoundDrawableTintMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <android.view.WindowInsets: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 21
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.WindowInsets: boolean equals(java.lang.Object)>
#1.the call statck between class <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)> to <android.view.WindowInsets: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
-i0 < 21
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.WindowInsets: boolean equals(java.lang.Object)>
#2.the call statck between class <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)> to <android.view.WindowInsets: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>[]--><android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)> to <android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <android.content.Context: java.io.File getDataDir()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.content.ContextCompat: java.io.File getDataDir(android.content.Context)>[[-i0 < 24]]--><android.content.Context: java.io.File getDataDir()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeMinTextSize()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeMinTextSize(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeMinTextSize()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)> is checking!!!
The life time of api is [26,31]
57call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
56 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <android.os.Message: void setAsynchronous(boolean)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try], [-i0 < 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try]][[-i0 < 16]]
try
Good road with try: <androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try], [-i0 < 16]]--><android.os.Message: void setAsynchronous(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <android.view.DisplayCutout: java.util.List getBoundingRects()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: java.util.List getBoundingRects()>[[-$i0 < 28]]--><android.view.DisplayCutout: java.util.List getBoundingRects()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setOverlapAnchor(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)>[[-i0 < 23]]--><android.widget.PopupWindow: void setOverlapAnchor(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$yysi0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[[-$yysi0 < 26]]--><de.tutao.tutanota.push.LocalNotificationsFacade: void createNotificationChannels()>[]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
0 Packageshead roads:
containsStatic:true
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <android.widget.TextView: void setHyphenationFrequency(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18]][[i0 >= 23]]
i0 < 18
i0 >= 23
Good road: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]--><android.widget.TextView: void setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setWeight(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setWeight(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeStepGranularity()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeStepGranularity(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeStepGranularity()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout build()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]
-i1 < 20
i0 < 26
-i0 < 26
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]--><android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getDrawingOrder()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.String getId()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.String getId()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.String getId()>has compatibility isssues！
-----------------------------------------
crashApis:14
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.widget.PopupWindow: boolean getOverlapAnchor()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)>[[-i0 < 23]]--><android.widget.PopupWindow: boolean getOverlapAnchor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()>has compatibility isssues！
-----------------------------------------
crashApis:15
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <android.os.LocaleList: int hashCode()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: int hashCode()>[]--><android.os.LocaleList: int hashCode()>
#1.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: int hashCode()> to <android.os.LocaleList: int hashCode()>has compatibility isssues！
-----------------------------------------
crashApis:16
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <android.app.Person: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: android.graphics.drawable.Icon getIcon()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeWithDefaults(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)>[[-$i1 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeWithDefaults(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <android.app.NotificationChannelGroup: java.lang.String getId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28]][[-$i0 < 26]]
$i0 < 28
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><android.app.NotificationChannelGroup: java.lang.String getId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()>has compatibility isssues！
-----------------------------------------
crashApis:17
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon load(android.content.res.Resources,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon load(android.content.res.Resources,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>[[-i0 < 28]]--><android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: void <init>(java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle: void <init>(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
crashApis:18
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setWindowLayoutType(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)>[[-$i1 < 23]]--><android.widget.PopupWindow: void setWindowLayoutType(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <android.os.Message: boolean isAsynchronous()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try], [-i0 < 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try]][[-i0 < 16]]
try
Good road with try: <androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try], [-i0 < 16]]--><android.os.Message: boolean isAsynchronous()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)>[[-$i1 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <android.view.DisplayCutout: void <init>(android.graphics.Rect,java.util.List)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: void <init>(android.graphics.Rect,java.util.List)>[[-$i0 < 28]]--><android.view.DisplayCutout: void <init>(android.graphics.Rect,java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isImportantForAccessibility()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeTextType()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeTextType(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeTextType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <android.view.View: boolean isAccessibilityHeading()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)>[]--><android.view.View: boolean isAccessibilityHeading()>
#1.the call statck between class <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)> to <android.view.View: boolean isAccessibilityHeading()>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <android.content.res.Configuration: android.os.LocaleList getLocales()> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>[[-$i0 < 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)> is checking!!!
The life time of api is [26,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]
-i0 < 24
-i0 < 28
-i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 26
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-$i1 < 28
-i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-$i0 < 26
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 25
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 25
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: void <init>(java.io.FileDescriptor)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: void <init>(java.io.FileDescriptor)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <android.content.Context: android.content.res.ColorStateList getColorStateList(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <android.view.View: boolean isImportantForAutofill()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isImportantForAutofill()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 86 Potential Issue API: SDKCheck of <android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)> to <android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()>has compatibility isssues！
-----------------------------------------
crashApis:21
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 87 Potential Issue API: SDKCheck of <android.app.Activity: android.net.Uri getReferrer()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 22
Good road: <androidx.core.app.ActivityCompat: android.net.Uri getReferrer(android.app.Activity)>[[-i0 < 22]]--><android.app.Activity: android.net.Uri getReferrer()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 88 Potential Issue API: SDKCheck of <android.telephony.mbms.ServiceInfo: java.util.Set getNamedContentLocales()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.telephony.mbms.ServiceInfo: java.util.Set getNamedContentLocales()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 89 Potential Issue API: SDKCheck of <android.view.View: void dispatchFinishTemporaryDetach()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.view.ViewCompat: void dispatchFinishTemporaryDetach(android.view.View)>[[-i0 < 24]]--><android.view.View: void dispatchFinishTemporaryDetach()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 90 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
57call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
56 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 91 Potential Issue API: SDKCheck of <android.app.job.JobServiceEngine: android.os.IBinder getBinder()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()>[]--><android.app.job.JobServiceEngine: android.os.IBinder getBinder()>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()> to <android.app.job.JobServiceEngine: android.os.IBinder getBinder()>has compatibility isssues！
-----------------------------------------
crashApis:22
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 92 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void requestPermission()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()>[]--><android.view.inputmethod.InputContentInfo: void requestPermission()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()> to <android.view.inputmethod.InputContentInfo: void requestPermission()>has compatibility isssues！
-----------------------------------------
crashApis:23
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 93 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()>has compatibility isssues！
-----------------------------------------
crashApis:24
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 94 Potential Issue API: SDKCheck of <android.view.MenuItem: int getAlphabeticModifiers()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: int getAlphabeticModifiers()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)> to <android.view.MenuItem: int getAlphabeticModifiers()>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 95 Potential Issue API: SDKCheck of <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$yysi0 < 28
Good road: <androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>[[-$yysi0 < 28]]--><android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 96 Potential Issue API: SDKCheck of <android.app.RemoteAction: void setEnabled(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><android.app.RemoteAction: void setEnabled(boolean)>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.app.RemoteAction: void setEnabled(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 97 Potential Issue API: SDKCheck of <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 98 Potential Issue API: SDKCheck of <android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-i0 < 26]]
-i1 < 20
i0 < 26
-i0 < 26
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-i0 < 26]]--><android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 99 Potential Issue API: SDKCheck of <android.graphics.Color: float[] getComponents()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: float[] getComponents()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: float[] getComponents()>has compatibility isssues！
-----------------------------------------
crashApis:27
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 100 Potential Issue API: SDKCheck of <android.app.Notification.Action: int getSemanticAction()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 24]][[-i0 < 28]]
i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 24], [-i0 < 28]]--><android.app.Notification.Action: int getSemanticAction()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 101 Potential Issue API: SDKCheck of <android.app.RemoteAction: android.app.PendingIntent getActionIntent()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: android.app.PendingIntent getActionIntent()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: android.app.PendingIntent getActionIntent()>has compatibility isssues！
-----------------------------------------
crashApis:28
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 102 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 103 Potential Issue API: SDKCheck of <android.app.RemoteAction: boolean isEnabled()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: boolean isEnabled()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: boolean isEnabled()>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 104 Potential Issue API: SDKCheck of <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21]][[$i0 < 23]][[try]]
-$i0 < 21
$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23], [try]]--><android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 105 Potential Issue API: SDKCheck of <android.app.Person: java.lang.String getUri()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getUri()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 106 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.ColorSpace.Model getModel()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.ColorSpace.Model getModel()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.ColorSpace.Model getModel()>has compatibility isssues！
-----------------------------------------
crashApis:31
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 107 Potential Issue API: SDKCheck of <android.view.View: void setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.View: void setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 108 Potential Issue API: SDKCheck of <android.content.Context: java.lang.Object getSystemService(java.lang.Class)> is checking!!!
The life time of api is [23,31]
17call roads:
0 Mainhead roads:
17 Packageshead roads:
-i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
Good road: <androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i1 < 23
-$i0 <= 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)>[[-i1 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>[[-$i0 <= 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
i0 < 26
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26]]--><androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>[[-$i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
Good road: <androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
-$i0 <= 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()>[[-i0 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>[[-$i0 <= 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
-$i0 <= 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>[[-i0 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>[[-$i0 <= 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 24
Good road: <androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: java.util.List getDynamicShortcuts(android.content.Context)>[[-i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:false
18call by main package
-----------------------------------------
#################################################
N 109 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
58call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
57 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
-$i2 < 23
Good road: <androidx.core.app.AlarmManagerCompat: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)>[[-$i2 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void iterateAlarmOccurrences(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.Crypto,byte[],de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.AlarmModel: void iterateAlarmOccurrences(java.util.Date,java.util.TimeZone,java.util.Date,java.util.Date,de.tutao.tutanota.alarms.RepeatPeriod,int,de.tutao.tutanota.alarms.EndType,long,de.tutao.tutanota.alarms.AlarmTrigger,java.util.TimeZone,de.tutao.tutanota.alarms.AlarmModel$AlarmIterationCallback)>[]--><de.tutao.tutanota.alarms.'-$$Lambda$AlarmNotificationsManager$7PzUziXGdF7bDZ6eXMOIHqRq-N8': void call(java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void lambda$schedule$0$AlarmNotificationsManager(java.lang.String,java.lang.String,de.tutao.tutanota.alarms.AlarmNotification,java.util.Date,int,java.util.Date)>[]--><de.tutao.tutanota.alarms.SystemAlarmFacade: void scheduleAlarmOccurrenceWithSystem(java.util.Date,int,java.lang.String,java.lang.String,java.util.Date,java.lang.String)>[[-$i0 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
containsStatic:true
containsTry:true
58call by main package
-----------------------------------------
#################################################
N 110 Potential Issue API: SDKCheck of <android.os.LocaleList: void <init>(java.util.Locale[])> is checking!!!
The life time of api is [24,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i1 < 21
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)>[[$i1 < 21]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: void <clinit>()>[]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 111 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: int getLayoutDirection()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 112 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions setLaunchBounds(android.graphics.Rect)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 24
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)>[[$i0 >= 24]]--><android.app.ActivityOptions: android.app.ActivityOptions setLaunchBounds(android.graphics.Rect)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 113 Potential Issue API: SDKCheck of <android.content.Context: java.util.concurrent.Executor getMainExecutor()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>[[-$i0 < 28]]--><android.content.Context: java.util.concurrent.Executor getMainExecutor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 114 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getHintText()>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 115 Potential Issue API: SDKCheck of <android.app.NotificationManager: void deleteNotificationChannel(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteNotificationChannel(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: void deleteNotificationChannel(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 116 Potential Issue API: SDKCheck of <android.content.Context: boolean isDeviceProtectedStorage()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: boolean isDeviceProtectedStorage()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 117 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])> is checking!!!
The life time of api is [23,31]
57call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
56 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 118 Potential Issue API: SDKCheck of <android.os.LocaleList: int indexOf(java.util.Locale)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)>[]--><androidx.core.os.LocaleListPlatformWrapper: int indexOf(java.util.Locale)>[]--><android.os.LocaleList: int indexOf(java.util.Locale)>
#1.the call statck between class <androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)> to <android.os.LocaleList: int indexOf(java.util.Locale)>has compatibility isssues！
-----------------------------------------
crashApis:32
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 119 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getShortcutId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: java.lang.String getShortcutId(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: java.lang.String getShortcutId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 120 Potential Issue API: SDKCheck of <android.graphics.Paint: boolean hasGlyph(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)>[[-i0 < 23]]--><android.graphics.Paint: boolean hasGlyph(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 121 Potential Issue API: SDKCheck of <android.os.LocaleList: java.lang.String toString()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()>[]--><android.os.LocaleList: java.lang.String toString()>
#1.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()> to <android.os.LocaleList: java.lang.String toString()>has compatibility isssues！
-----------------------------------------
crashApis:33
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 122 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])> is checking!!!
The life time of api is [22,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 123 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#1.the call statck between class <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#2.the call statck between class <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 124 Potential Issue API: SDKCheck of <android.os.LocaleList: java.util.Locale get(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.util.Locale get(int)>[]--><androidx.core.os.LocaleListPlatformWrapper: java.util.Locale get(int)>[]--><android.os.LocaleList: java.util.Locale get(int)>
#1.the call statck between class <androidx.core.os.LocaleListCompat: java.util.Locale get(int)> to <android.os.LocaleList: java.util.Locale get(int)>has compatibility isssues！
-----------------------------------------
crashApis:35
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 125 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$yysi0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[[-$yysi0 < 26]]--><de.tutao.tutanota.push.LocalNotificationsFacade: void createNotificationChannels()>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
0 Packageshead roads:
containsStatic:true
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 126 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)> to <android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 127 Potential Issue API: SDKCheck of <android.app.RemoteInput: void setResultsSource(android.content.Intent,int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-i1 < 28]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-i1 < 28]]
-i1 < 20
i0 < 26
-i1 < 28
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-i1 < 28]]--><android.app.RemoteInput: void setResultsSource(android.content.Intent,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 128 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: android.app.Notification.MessagingStyle.Message setData(java.lang.String,android.net.Uri)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle.Message: android.app.Notification.MessagingStyle.Message setData(java.lang.String,android.net.Uri)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 129 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isShowingHintText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isShowingHintText()>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isShowingHintText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 130 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()>has compatibility isssues！
-----------------------------------------
crashApis:37
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 131 Potential Issue API: SDKCheck of <android.widget.TextView: int getHyphenationFrequency()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23]][[i0 < 28]]
-i0 < 23
i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]--><android.widget.TextView: int getHyphenationFrequency()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 132 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View)>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 133 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:38
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 134 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[-$i0 < 28]]--><android.app.NotificationManager: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 135 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.app.AlarmManagerCompat: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)>[[-$i2 < 23]]--><android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 136 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:39
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 137 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()>has compatibility isssues！
-----------------------------------------
crashApis:40
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 138 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetLeft()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetLeft()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 139 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 140 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])> is checking!!!
The life time of api is [23,31]
57call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
56 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 141 Potential Issue API: SDKCheck of <android.app.Service: void stopForeground(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.app.ServiceCompat: void stopForeground(android.app.Service,int)>[[-$i1 < 24]]--><android.app.Service: void stopForeground(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 142 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: int getRestrictBackgroundStatus()> is checking!!!
The life time of api is [24,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)>[[-$i0 < 24]]--><android.net.ConnectivityManager: int getRestrictBackgroundStatus()>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)> to <android.net.ConnectivityManager: int getRestrictBackgroundStatus()>has compatibility isssues！
-----------------------------------------
crashApis:41
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 143 Potential Issue API: SDKCheck of <android.app.NotificationManager: java.util.List getNotificationChannelGroups()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28]][[-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]
$i0 < 28
-$i0 < 26
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]--><android.app.NotificationManager: java.util.List getNotificationChannelGroups()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 144 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.net.Uri getUri()> is checking!!!
The life time of api is [28,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 145 Potential Issue API: SDKCheck of <android.view.View: void setScreenReaderFocusable(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Boolean)>[]--><android.view.View: void setScreenReaderFocusable(boolean)>
#1.the call statck between class <androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Boolean)> to <android.view.View: void setScreenReaderFocusable(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:42
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 146 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)> is checking!!!
The life time of api is [23,31]
57call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
56 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 147 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()>[[-$i0 < 28]]--><android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 148 Potential Issue API: SDKCheck of <android.view.View: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)>[[-i1 < 28]]--><android.view.View: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 149 Potential Issue API: SDKCheck of <android.app.Notification.DecoratedCustomViewStyle: void <init>()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]]--><android.app.Notification.DecoratedCustomViewStyle: void <init>()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 150 Potential Issue API: SDKCheck of <android.app.NotificationManager: java.util.List getNotificationChannels()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannels()>[[-$i0 < 26]]--><android.app.NotificationManager: java.util.List getNotificationChannels()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 151 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetRight()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetRight()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 152 Potential Issue API: SDKCheck of <android.app.Notification: int getGroupAlertBehavior()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: int getGroupAlertBehavior(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: int getGroupAlertBehavior()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 153 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 154 Potential Issue API: SDKCheck of <android.view.View: void setKeyboardNavigationCluster(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setKeyboardNavigationCluster(android.view.View,boolean)>[[-$i0 < 26]]--><android.view.View: void setKeyboardNavigationCluster(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 155 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()>has compatibility isssues！
-----------------------------------------
crashApis:43
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 156 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 157 Potential Issue API: SDKCheck of <android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-i1 < 25]]--><android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
-i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-i1 < 25]]--><androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>[[]]--><android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 158 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)>[[-i1 < 23]]--><android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 159 Potential Issue API: SDKCheck of <android.view.View: int getScrollIndicators()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.ViewCompat: int getScrollIndicators(android.view.View)>[[-$i0 < 23]]--><android.view.View: int getScrollIndicators()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 160 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPaneTitle()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 161 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setBot(boolean)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 162 Potential Issue API: SDKCheck of <android.app.job.JobWorkItem: android.content.Intent getIntent()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()>[]--><android.app.job.JobWorkItem: android.content.Intent getIntent()>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()> to <android.app.job.JobWorkItem: android.content.Intent getIntent()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()>[]--><android.app.job.JobWorkItem: android.content.Intent getIntent()>
#2.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()> to <android.app.job.JobWorkItem: android.content.Intent getIntent()>has compatibility isssues！
-----------------------------------------
crashApis:44
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 163 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]
-i0 < 24
-i0 < 28
i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
i0 < 26
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
-i0 < 23
i0 < 26
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-$i1 < 28
i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-$i0 < 26
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 25
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 25
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
crashApis:45
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 164 Potential Issue API: SDKCheck of <android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 165 Potential Issue API: SDKCheck of <android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)> is checking!!!
The life time of api is [26,31]
57call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
56 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 166 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 167 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:46
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 168 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: float getScaledVerticalScrollFactor()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 169 Potential Issue API: SDKCheck of <android.app.RemoteAction: java.lang.CharSequence getTitle()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: java.lang.CharSequence getTitle()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: java.lang.CharSequence getTitle()>has compatibility isssues！
-----------------------------------------
crashApis:47
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 170 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setConversationTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setConversationTitle(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 171 Potential Issue API: SDKCheck of <android.graphics.Color: int getComponentCount()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: int getComponentCount()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: int getComponentCount()>has compatibility isssues！
-----------------------------------------
crashApis:48
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 172 Potential Issue API: SDKCheck of <android.content.pm.PermissionInfo: int getProtection()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.pm.PermissionInfoCompat: int getProtection(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtection()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 173 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
-$yysi0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[[-$yysi0 < 26]]--><de.tutao.tutanota.push.LocalNotificationsFacade: void createNotificationChannels()>[]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(android.app.NotificationChannel)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 174 Potential Issue API: SDKCheck of <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] stop()>[]--><android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] stop()> to <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)>[]--><android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>
#2.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)> to <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>has compatibility isssues！
-----------------------------------------
crashApis:49
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 175 Potential Issue API: SDKCheck of <android.view.View: boolean hasExplicitFocusable()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean hasExplicitFocusable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 176 Potential Issue API: SDKCheck of <android.app.Person: java.lang.CharSequence getName()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.CharSequence getName()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 177 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
crashApis:50
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 178 Potential Issue API: SDKCheck of <android.telephony.mbms.ServiceInfo: java.lang.CharSequence getNameForLocale(java.util.Locale)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.telephony.mbms.ServiceInfo: java.lang.CharSequence getNameForLocale(java.util.Locale)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 179 Potential Issue API: SDKCheck of <android.view.MenuItem: java.lang.CharSequence getContentDescription()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: java.lang.CharSequence getContentDescription()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)> to <android.view.MenuItem: java.lang.CharSequence getContentDescription()>has compatibility isssues！
-----------------------------------------
crashApis:51
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 180 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>[]--><android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)> to <android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:52
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 181 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 24
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: android.graphics.Rect getLaunchBounds()>[[$i0 >= 24]]--><android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 182 Potential Issue API: SDKCheck of <android.os.Handler: android.os.Handler createAsync(android.os.Looper)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 28
Good road: <androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)>[[-i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[[try]]--><androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler createAsync(android.os.Looper)>[[-i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 183 Potential Issue API: SDKCheck of <android.view.inputmethod.InputConnectionWrapper: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-i1 < 25]]--><androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>[]--><android.view.inputmethod.InputConnectionWrapper: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 184 Potential Issue API: SDKCheck of <android.view.FrameMetrics: long getMetric(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)>[]--><android.view.FrameMetrics: long getMetric(int)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)> to <android.view.FrameMetrics: long getMetric(int)>has compatibility isssues！
-----------------------------------------
crashApis:53
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 185 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTooltipText(java.lang.CharSequence)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 186 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
!!!this api will crash on sdk 24 25 26 27 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]]--><android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)>
#1.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)> to <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)>has compatibility isssues！
-----------------------------------------
crashApis:54
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 187 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.util.Set getCategories()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.util.Set getCategories()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.util.Set getCategories()>has compatibility isssues！
-----------------------------------------
crashApis:55
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 188 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:56
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 189 Potential Issue API: SDKCheck of <android.view.MenuItem: java.lang.CharSequence getTooltipText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: java.lang.CharSequence getTooltipText()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)> to <android.view.MenuItem: java.lang.CharSequence getTooltipText()>has compatibility isssues！
-----------------------------------------
crashApis:57
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 190 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setItalic(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setItalic(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 191 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
crashApis:58
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 192 Potential Issue API: SDKCheck of <android.view.View: void setScrollIndicators(int,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)>[[-$i2 < 23]]--><android.view.View: void setScrollIndicators(int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 193 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]
-i0 < 24
-i0 < 28
i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
i0 < 26
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>has compatibility isssues！
-----------------------------------------
-i0 < 23
i0 < 26
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-$i1 < 28
i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-$i0 < 26
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 25
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 25
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
crashApis:59
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 194 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)>[[-$i0 < 23]]--><android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 195 Potential Issue API: SDKCheck of <android.app.job.JobParameters: void completeWork(android.app.job.JobWorkItem)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void complete()>[[try]]--><android.app.job.JobParameters: void completeWork(android.app.job.JobWorkItem)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 196 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i4 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)>[[], [-$i4 < 26]]--><android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)> to <android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:60
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 197 Potential Issue API: SDKCheck of <android.app.Person: boolean isImportant()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isImportant()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 198 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
58call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.NetworkObserver dummyMainMethod_de_tutao_tutanota_push_NetworkObserver(android.content.Intent)>[]--><de.tutao.tutanota.push.NetworkObserver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.NetworkObserver: boolean hasNetworkConnection()>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
57 Packageshead roads:
crashApis:61
crashApisInMain:1
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 199 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContextClickable()>[[-$i0 < 23]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 200 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 201 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannels(java.util.List)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannels(java.util.List)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannels(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 202 Potential Issue API: SDKCheck of <android.database.CursorWindow: void <init>(java.lang.String,long)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 28
Good road: <androidx.core.database.CursorWindowCompat: android.database.CursorWindow create(java.lang.String,long)>[[-$i1 < 28]]--><android.database.CursorWindow: void <init>(java.lang.String,long)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 203 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)> is checking!!!
The life time of api is [26,31]
57call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
56 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 204 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannelGroups(java.util.List)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroups(java.util.List)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannelGroups(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 205 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)>[]--><android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)> to <android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>has compatibility isssues！
-----------------------------------------
crashApis:62
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 206 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: int getHyphenationFrequency()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: int getHyphenationFrequency()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: int getHyphenationFrequency()>has compatibility isssues！
-----------------------------------------
crashApis:63
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 207 Potential Issue API: SDKCheck of <android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
crashApis:64
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 208 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>has compatibility isssues！
-----------------------------------------
crashApis:65
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 209 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)> is checking!!!
The life time of api is [26,31]
57call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
56 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 210 Potential Issue API: SDKCheck of <android.app.RemoteAction: java.lang.CharSequence getContentDescription()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: java.lang.CharSequence getContentDescription()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: java.lang.CharSequence getContentDescription()>has compatibility isssues！
-----------------------------------------
crashApis:66
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 211 Potential Issue API: SDKCheck of <android.os.LocaleList: java.lang.String toLanguageTags()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()>[]--><androidx.core.os.LocaleListPlatformWrapper: java.lang.String toLanguageTags()>[]--><android.os.LocaleList: java.lang.String toLanguageTags()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()> to <android.os.LocaleList: java.lang.String toLanguageTags()>has compatibility isssues！
-----------------------------------------
crashApis:67
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 212 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: boolean isActiveNetworkMetered()> is checking!!!
The life time of api is [16,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 16
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>[[-i0 < 16]]--><android.net.ConnectivityManager: boolean isActiveNetworkMetered()>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)> to <android.net.ConnectivityManager: boolean isActiveNetworkMetered()>has compatibility isssues！
-----------------------------------------
crashApis:68
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 213 Potential Issue API: SDKCheck of <android.widget.TextView: void setFirstBaselineToTopHeight(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)>[[-i1 < 28]]--><android.widget.TextView: void setFirstBaselineToTopHeight(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 214 Potential Issue API: SDKCheck of <android.view.View: void updateDragShadow(android.view.View.DragShadowBuilder)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)>[[-$i0 < 24]]--><android.view.View: void updateDragShadow(android.view.View.DragShadowBuilder)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 215 Potential Issue API: SDKCheck of <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)>[]--><android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>
#1.the call statck between class <androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)> to <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
crashApis:69
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 216 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.CharSequence getTitle()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 217 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
64call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
-i0 < 20
i0 < 24
!!!this api will crash on sdk 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
63 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
crashApis:70
crashApisInMain:2
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 218 Potential Issue API: SDKCheck of <android.os.LocaleList: int size()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: int size()>[]--><androidx.core.os.LocaleListPlatformWrapper: int size()>[]--><android.os.LocaleList: int size()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: int size()> to <android.os.LocaleList: int size()>has compatibility isssues！
-----------------------------------------
crashApis:71
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 219 Potential Issue API: SDKCheck of <android.app.Notification.Action: boolean getAllowGeneratedReplies()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-i0 < 24]]--><android.app.Notification.Action: boolean getAllowGeneratedReplies()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 220 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void enableLights(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$yysi0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[[-$yysi0 < 26]]--><de.tutao.tutanota.push.LocalNotificationsFacade: void createNotificationChannels()>[]--><android.app.NotificationChannel: void enableLights(boolean)>
One road protect good!
0 Packageshead roads:
containsStatic:true
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 221 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeBasic()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeBasic()>[[-$i0 < 23]]--><android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 222 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 223 Potential Issue API: SDKCheck of <android.app.Notification: int getBadgeIconType()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: int getBadgeIconType(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: int getBadgeIconType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 224 Potential Issue API: SDKCheck of <android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 < 23
-$i0 < 23
Good road: <androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 225 Potential Issue API: SDKCheck of <android.net.TrafficStats: void untagDatagramSocket(java.net.DatagramSocket)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.net.TrafficStatsCompat: void untagDatagramSocket(java.net.DatagramSocket)>[[-i0 < 24]]--><android.net.TrafficStats: void untagDatagramSocket(java.net.DatagramSocket)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 226 Potential Issue API: SDKCheck of <android.app.NotificationManager: boolean areNotificationsEnabled()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.app.NotificationManagerCompat: boolean areNotificationsEnabled()>[[-i0 < 24]]--><android.app.NotificationManager: boolean areNotificationsEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 227 Potential Issue API: SDKCheck of <android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])>[]--><androidx.core.os.LocaleListPlatformWrapper: java.util.Locale getFirstMatch(java.lang.String[])>[]--><android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>
#1.the call statck between class <androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])> to <android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>has compatibility isssues！
-----------------------------------------
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>
One road protect good!
crashApis:72
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 228 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>[[-i0 < 23]]--><android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 229 Potential Issue API: SDKCheck of <android.graphics.Path: float[] approximate(float)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)>[]--><androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path,float)>[]--><android.graphics.Path: float[] approximate(float)>
#1.the call statck between class <androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)> to <android.graphics.Path: float[] approximate(float)>has compatibility isssues！
-----------------------------------------
crashApis:73
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 230 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 231 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets consumeDisplayCutout()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()>[[-$i0 < 28]]--><android.view.WindowInsets: android.view.WindowInsets consumeDisplayCutout()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 232 Potential Issue API: SDKCheck of <android.os.Handler: boolean postDelayed(java.lang.Runnable,java.lang.Object,long)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>[[-i1 < 28]]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,java.lang.Object,long)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 233 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
!!!this api will crash on sdk 21 
Error road: <androidx.core.content.pm.ShortcutInfoCompat: boolean getLongLivedFromExtra(android.os.PersistableBundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat: boolean getLongLivedFromExtra(android.os.PersistableBundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><androidx.core.content.pm.ShortcutInfoCompat: androidx.core.app.Person[] getPersonsFromExtra(android.os.PersistableBundle)>[]--><androidx.core.app.Person: androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#2.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: boolean getExtendSelection()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#3.the call statck between class <androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: boolean getExtendSelection()> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)>[]--><androidx.core.app.NotificationManagerCompat: void notify(java.lang.String,int,android.app.Notification)>[]--><androidx.core.app.NotificationManagerCompat: boolean useSideChannelForNotification(android.app.Notification)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#4.the call statck between class <androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)>[]--><androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[])>[]--><androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#5.the call statck between class <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)>[]--><androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[])>[]--><androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#6.the call statck between class <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]]--><androidx.core.app.Person: androidx.core.app.Person fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#8.the call statck between class <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)>[]--><androidx.core.app.Person: androidx.core.app.Person fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#9.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>[[$i0 < 20], [-$i0 < 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>[[$i0 < 20]][[-$i0 < 16]]
$i0 < 20
-$i0 < 16
Good road: <androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>[[$i0 < 20], [-$i0 < 16]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
crashApis:74
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 234 Potential Issue API: SDKCheck of <android.view.View: boolean isKeyboardNavigationCluster()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isKeyboardNavigationCluster()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 235 Potential Issue API: SDKCheck of <android.widget.TextView: int[] getAutoSizeTextAvailableSizes()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int[] getAutoSizeTextAvailableSizes()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 236 Potential Issue API: SDKCheck of <android.view.MenuItem: int getNumericModifiers()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: int getNumericModifiers()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)> to <android.view.MenuItem: int getNumericModifiers()>has compatibility isssues！
-----------------------------------------
crashApis:75
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 237 Potential Issue API: SDKCheck of <android.view.Window: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.view.WindowCompat: android.view.View requireViewById(android.view.Window,int)>[[-i1 < 28]]--><android.view.Window: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 238 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:76
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 239 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)> to <android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
crashApis:77
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 240 Potential Issue API: SDKCheck of <android.app.job.JobServiceEngine: void <init>(android.app.Service)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: void <init>(androidx.core.app.JobIntentService)>[]--><android.app.job.JobServiceEngine: void <init>(android.app.Service)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: void <init>(androidx.core.app.JobIntentService)> to <android.app.job.JobServiceEngine: void <init>(android.app.Service)>has compatibility isssues！
-----------------------------------------
crashApis:78
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 241 Potential Issue API: SDKCheck of <android.view.View: void setPointerIcon(android.view.PointerIcon)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)>[[-$i0 < 24]]--><android.view.View: void setPointerIcon(android.view.PointerIcon)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 242 Potential Issue API: SDKCheck of <android.app.NotificationManager: void deleteNotificationChannelGroup(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteNotificationChannelGroup(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: void deleteNotificationChannelGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 243 Potential Issue API: SDKCheck of <android.app.Activity: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)>[[-i1 < 28]]--><android.app.Activity: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 244 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 245 Potential Issue API: SDKCheck of <android.app.ActivityOptions: void requestUsageTimeReport(android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void requestUsageTimeReport(android.app.PendingIntent)>[[-$i0 < 23]]--><android.app.ActivityOptions: void requestUsageTimeReport(android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 246 Potential Issue API: SDKCheck of <android.os.LocaleList: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23]][[-$i0 < 24]][[$i0 < 21]]
$i0 < 23
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]--><android.os.LocaleList: boolean equals(java.lang.Object)>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)>[]--><android.os.LocaleList: boolean equals(java.lang.Object)>
#2.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)> to <android.os.LocaleList: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:79
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 247 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setDrawingOrder(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDrawingOrder(int)>[[-$i1 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: void setDrawingOrder(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 248 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:80
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 249 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
!!!this api will crash on sdk 24 25 26 27 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)>
#1.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)> to <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:81
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 250 Potential Issue API: SDKCheck of <android.view.View: void dispatchStartTemporaryDetach()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.view.ViewCompat: void dispatchStartTemporaryDetach(android.view.View)>[[-i0 < 24]]--><android.view.View: void dispatchStartTemporaryDetach()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 251 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
crashApis:82
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 252 Potential Issue API: SDKCheck of <android.content.Context: android.content.Context createDeviceProtectedStorageContext()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 253 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
crashApis:83
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 254 Potential Issue API: SDKCheck of <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)>[]--><android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
#1.the call statck between class <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)> to <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>has compatibility isssues！
-----------------------------------------
crashApis:84
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 255 Potential Issue API: SDKCheck of <android.view.View: boolean isFocusedByDefault()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isFocusedByDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 256 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 < 26
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26]]--><androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>[[-$i0 < 26]]--><android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 257 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)> is checking!!!
The life time of api is [28,31]
57call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
-i0 < 20
i0 < 24
-i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
56 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 258 Potential Issue API: SDKCheck of <android.view.View: boolean isScreenReaderFocusable()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$3: java.lang.Boolean frameworkGet(android.view.View)>[]--><android.view.View: boolean isScreenReaderFocusable()>
#1.the call statck between class <androidx.core.view.ViewCompat$3: java.lang.Boolean frameworkGet(android.view.View)> to <android.view.View: boolean isScreenReaderFocusable()>has compatibility isssues！
-----------------------------------------
crashApis:85
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 259 Potential Issue API: SDKCheck of <android.database.sqlite.SQLiteCursor: void setFillWindowForwardOnly(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.database.sqlite.SQLiteCursorCompat: void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean)>[[-$i0 < 28]]--><android.database.sqlite.SQLiteCursor: void setFillWindowForwardOnly(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 260 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isHeading()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isHeading()>[[-i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isHeading()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 261 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnectedOrConnecting()> is checking!!!
The life time of api is [1,30]
57call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.NetworkObserver dummyMainMethod_de_tutao_tutanota_push_NetworkObserver(android.content.Intent)>[]--><de.tutao.tutanota.push.NetworkObserver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.NetworkObserver: boolean hasNetworkConnection()>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: boolean isConnectedOrConnecting()>has compatibility isssues！
-----------------------------------------
56 Packageshead roads:
crashApis:86
crashApisInMain:3
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 262 Potential Issue API: SDKCheck of <android.view.View: void setAutofillHints(java.lang.String[])> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setAutofillHints(android.view.View,java.lang.String[])>[[-$i0 < 26]]--><android.view.View: void setAutofillHints(java.lang.String[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 263 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void releasePermission()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void releasePermission()>[]--><android.view.inputmethod.InputContentInfo: void releasePermission()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void releasePermission()> to <android.view.inputmethod.InputContentInfo: void releasePermission()>has compatibility isssues！
-----------------------------------------
crashApis:87
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 264 Potential Issue API: SDKCheck of <android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>[[-$i1 < 24]]--><android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 265 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
57call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
56 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 266 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View)>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 267 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getChannelId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: java.lang.String getChannelId(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: java.lang.String getChannelId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 268 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList getDefault()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 269 Potential Issue API: SDKCheck of <android.widget.PopupWindow: int getWindowLayoutType()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: int getWindowLayoutType(android.widget.PopupWindow)>[[-$i0 < 23]]--><android.widget.PopupWindow: int getWindowLayoutType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 270 Potential Issue API: SDKCheck of <android.os.Handler: android.os.Handler createAsync(android.os.Looper,android.os.Handler.Callback)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback)>[[-i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper,android.os.Handler.Callback)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 271 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)> is checking!!!
The life time of api is [26,31]
57call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
56 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 272 Potential Issue API: SDKCheck of <android.graphics.Color: float alpha()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: float alpha()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: float alpha()>has compatibility isssues！
-----------------------------------------
crashApis:88
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 273 Potential Issue API: SDKCheck of <android.view.View: void setNextClusterForwardId(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: void setNextClusterForwardId(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setNextClusterForwardId(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 274 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])> is checking!!!
The life time of api is [24,31]
57call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
56 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 275 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
crashApis:89
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 276 Potential Issue API: SDKCheck of <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 277 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()>has compatibility isssues！
-----------------------------------------
crashApis:90
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 278 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setShowBadge(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$yysi0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[[-$yysi0 < 26]]--><de.tutao.tutanota.push.LocalNotificationsFacade: void createNotificationChannels()>[]--><android.app.NotificationChannel: void setShowBadge(boolean)>
One road protect good!
0 Packageshead roads:
containsStatic:true
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 279 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 280 Potential Issue API: SDKCheck of <android.widget.TextView: android.text.PrecomputedText.Params getTextMetricsParams()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 28]]--><android.widget.TextView: android.text.PrecomputedText.Params getTextMetricsParams()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 281 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()>has compatibility isssues！
-----------------------------------------
crashApis:91
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 282 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 283 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 284 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
57call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
56 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 285 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()>[]--><android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()> to <android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()>has compatibility isssues！
-----------------------------------------
crashApis:92
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 286 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextAppearance(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 287 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 288 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 289 Potential Issue API: SDKCheck of <android.widget.TextView: void setBreakStrategy(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18]][[i0 >= 23]]
i0 < 18
i0 >= 23
Good road: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]--><android.widget.TextView: void setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 290 Potential Issue API: SDKCheck of <android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <de.tutao.tutanota.Native: void lambda$initPushNotifications$5$Native()>[]--><de.tutao.tutanota.MainActivity: void askBatteryOptinmizationsIfNeeded()>[[-$i0 < 23]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 291 Potential Issue API: SDKCheck of <android.view.DragAndDropPermissions: void release()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.DragAndDropPermissionsCompat: void release()>[[-$i0 < 24]]--><android.view.DragAndDropPermissions: void release()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 292 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: java.util.List getDynamicShortcuts(android.content.Context)>[[-i0 < 25]]--><android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 293 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getType()> is checking!!!
The life time of api is [1,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
i0 < 16
Good road: <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>[[i0 < 16]]--><android.net.NetworkInfo: int getType()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>[]--><android.net.NetworkInfo: int getType()>
#2.the call statck between class <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
crashApis:93
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 294 Potential Issue API: SDKCheck of <android.os.UserManager: boolean isUserUnlocked()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 295 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannelGroup(android.app.NotificationChannelGroup)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(android.app.NotificationChannelGroup)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannelGroup(android.app.NotificationChannelGroup)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 296 Potential Issue API: SDKCheck of <android.view.View: void setImportantForAutofill(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 297 Potential Issue API: SDKCheck of <android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)>[]--><android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)> to <android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)>has compatibility isssues！
-----------------------------------------
crashApis:94
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 298 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 299 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setImportantForAccessibility(boolean)>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 300 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>has compatibility isssues！
-----------------------------------------
crashApis:95
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 301 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()>[[-i0 < 23]]--><android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 302 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 303 Potential Issue API: SDKCheck of <android.graphics.Paint: android.os.LocaleList getTextLocales()> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24]][[$i0 < 21]]
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24], [$i0 < 21]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23]][[-$i0 < 24]][[$i0 < 21]]
$i0 < 23
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
-$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: int hashCode()>[[-$i0 < 24]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 304 Potential Issue API: SDKCheck of <android.app.Person: java.lang.String getKey()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getKey()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 305 Potential Issue API: SDKCheck of <android.view.View: boolean restoreDefaultFocus()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean restoreDefaultFocus()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 306 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[]--><android.text.PrecomputedText.Params: boolean equals(java.lang.Object)>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)> to <android.text.PrecomputedText.Params: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:96
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 307 Potential Issue API: SDKCheck of <android.view.View: int getNextClusterForwardId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: int getNextClusterForwardId(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getNextClusterForwardId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 308 Potential Issue API: SDKCheck of <android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()>[]--><android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>
#1.the call statck between class <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()> to <android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>has compatibility isssues！
-----------------------------------------
crashApis:97
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 309 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()>[]--><android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()> to <android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>has compatibility isssues！
-----------------------------------------
crashApis:98
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 310 Potential Issue API: SDKCheck of <android.os.LocaleList: boolean isEmpty()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: boolean isEmpty()>[]--><androidx.core.os.LocaleListPlatformWrapper: boolean isEmpty()>[]--><android.os.LocaleList: boolean isEmpty()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: boolean isEmpty()> to <android.os.LocaleList: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
crashApis:99
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 311 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void removeDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void removeDynamicShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 312 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)> is checking!!!
The life time of api is [24,31]
58call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
-i0 < 24
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
57 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[-i0 < 20]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
containsStatic:true
containsTry:true
58call by main package
-----------------------------------------
#################################################
N 313 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 314 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setLightColor(int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$yysi0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[[-$yysi0 < 26]]--><de.tutao.tutanota.push.LocalNotificationsFacade: void createNotificationChannels()>[]--><android.app.NotificationChannel: void setLightColor(int)>
One road protect good!
0 Packageshead roads:
containsStatic:true
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 315 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: int getScaledHoverSlop()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)>[[-$i0 < 28]]--><android.view.ViewConfiguration: int getScaledHoverSlop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 316 Potential Issue API: SDKCheck of <android.app.RemoteAction: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>has compatibility isssues！
-----------------------------------------
crashApis:100
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 317 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 318 Potential Issue API: SDKCheck of <android.view.View: void setFocusedByDefault(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setFocusedByDefault(android.view.View,boolean)>[[-$i0 < 26]]--><android.view.View: void setFocusedByDefault(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 319 Potential Issue API: SDKCheck of <android.content.Context: int getColor(int)> is checking!!!
The life time of api is [23,31]
2call roads:
1 Mainhead roads:
-$yysi0 < 26
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.MainActivity dummyMainMethod_de_tutao_tutanota_MainActivity(android.content.Intent)>[]--><de.tutao.tutanota.MainActivity: void onCreate(android.os.Bundle)>[]--><de.tutao.tutanota.MainActivity: void doChangeTheme(java.lang.String)>[[-$yysi0 < 26]]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
1 Packageshead roads:
-$yysi0 < 26
-$i1 < 23
Good road: <de.tutao.tutanota.MainActivity: void lambda$changeTheme$5$MainActivity(java.lang.String)>[]--><de.tutao.tutanota.MainActivity: void doChangeTheme(java.lang.String)>[[-$yysi0 < 26]]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 320 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()> is checking!!!
The life time of api is [23,31]
57call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
56 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNotAuthorized(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void unscheduleAlarms(java.lang.String)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: void cancelSavedAlarm(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager: byte[] resolveSessionKey(de.tutao.tutanota.alarms.AlarmNotification,de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver)>[]--><de.tutao.tutanota.alarms.AlarmNotificationsManager$PushKeyResolver: byte[] resolvePushSessionKey(java.lang.String)>[]--><de.tutao.tutanota.push.SseStorage: byte[] getPushIdentifierSessionKey(java.lang.String)>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: byte[] decryptKey(byte[])>[]--><de.tutao.tutanota.AndroidKeyStoreFacade: void initialize()>[[try]]--><de.tutao.tutanota.AndroidKeyStoreFacade: void generateSymmetricKey()>[]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 321 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)> is checking!!!
The life time of api is [26,31]
57call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.PushNotificationService dummyMainMethod_de_tutao_tutanota_push_PushNotificationService(android.content.Intent)>[]--><de.tutao.tutanota.push.PushNotificationService: void onCreate()>[]--><de.tutao.tutanota.push.SseClient: void <init>(de.tutao.tutanota.Crypto,de.tutao.tutanota.push.SseStorage,de.tutao.tutanota.push.NetworkObserver,de.tutao.tutanota.push.SseClient$SseListener)>[]--><de.tutao.tutanota.push.LooperThread: void run()>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.alarms.AlarmBroadcastReceiver dummyMainMethod_de_tutao_tutanota_alarms_AlarmBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.alarms.AlarmBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showAlarmNotification(android.content.Context,long,java.lang.String,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
56 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData$3: void onInvalidated(java.util.Set)>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.SseClient: void lambda$new$0$SseClient(boolean)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearKeys()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clearUsers()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.Native: void lambda$invoke$2$Native(java.lang.String)>[[try]]--><de.tutao.tutanota.Native: org.jdeferred.Promise invokeMethod(java.lang.String,org.json.JSONArray)>[[try]]--><de.tutao.tutanota.push.SseStorage: void storePushIdentifier(java.lang.String,java.lang.String)>[]--><de.tutao.tutanota.data.KeyValueDao_Impl: void putString(java.lang.String,java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomTrackingLiveData: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void close()>[[try]]--><androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation()>[]--><androidx.room.MultiInstanceInvalidationClient: void stop()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void clear()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)>[]--><androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertPushIdentifierKey(de.tutao.tutanota.data.PushIdentifierKey)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void deleteUser(java.lang.String)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.UserInfoDao_Impl: void insertUser(de.tutao.tutanota.data.User)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28]][[try]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
$i0 < 28
i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[i0 < 28], [try], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.data.AppDatabase_Impl: void clearAllTables()>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[]--><androidx.room.RoomDatabase: void endTransaction()>[]--><androidx.room.InvalidationTracker: void refreshVersionsAsync()>[]--><androidx.room.TransactionExecutor: void execute(java.lang.Runnable)>[[try]]--><androidx.room.TransactionExecutor: void scheduleNext()>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.room.RoomTrackingLiveData$2: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 >= 16
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[i0 >= 16]]--><androidx.room.TransactionExecutor$1: void run()>[[try]]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <de.tutao.tutanota.push.PushNotificationService: void lambda$onCreate$0$PushNotificationService(de.tutao.tutanota.push.SseStorage,java.util.List)>[]--><de.tutao.tutanota.push.SseClient: void restartConnectionIfNeeded(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.SseClient: void reschedule(int)>[]--><de.tutao.tutanota.push.'-$$Lambda$SseClient$PxJpDhDEsSd8t-AFTJAEtAxeezM': void run()>[]--><de.tutao.tutanota.push.SseClient: void lambda$PxJpDhDEsSd8t-AFTJAEtAxeezM(de.tutao.tutanota.push.SseClient)>[]--><de.tutao.tutanota.push.SseClient: void connect()>[[try]]--><de.tutao.tutanota.push.SseClient: void handleLine(java.lang.String)>[]--><de.tutao.tutanota.push.PushNotificationService$1: void onMessage(java.lang.String,de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: void onNewNotificationAvailable(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.TutanotaNotificationsHandler: de.tutao.tutanota.push.MissedNotification downloadMissedNotification(de.tutao.tutanota.data.SseInfo)>[]--><de.tutao.tutanota.push.LocalNotificationsFacade: void showErrorNotification(int,java.lang.Throwable)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
containsStatic:true
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 322 Potential Issue API: SDKCheck of <android.view.Menu: void setGroupDividerEnabled(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)>[[], [-$i0 < 28]]--><android.view.Menu: void setGroupDividerEnabled(boolean)>
#1.the call statck between class <androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)> to <android.view.Menu: void setGroupDividerEnabled(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:101
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 323 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.ColorSpace getColorSpace()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.ColorSpace getColorSpace()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
crashApis:102
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 324 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 325 Potential Issue API: SDKCheck of <android.view.View: int getImportantForAutofill()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 326 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View,int)>[[-$i1 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 327 Potential Issue API: SDKCheck of <android.view.View: void cancelDragAndDrop()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void cancelDragAndDrop(android.view.View)>[[-$i0 < 24]]--><android.view.View: void cancelDragAndDrop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 328 Potential Issue API: SDKCheck of <android.view.View: android.view.View keyboardNavigationClusterSearch(android.view.View,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)>[[-$i1 < 26]]--><android.view.View: android.view.View keyboardNavigationClusterSearch(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 329 Potential Issue API: SDKCheck of <android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 330 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isScreenReaderFocusable()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScreenReaderFocusable()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isScreenReaderFocusable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 331 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getTooltipText()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 332 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContextClickable(boolean)>[[-$i0 < 23]]--><android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 333 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 334 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)>[[-$i4 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 335 Potential Issue API: SDKCheck of <android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)>[[-i0 < 23]]--><android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 336 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 337 Potential Issue API: SDKCheck of <android.app.Person: boolean isBot()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isBot()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 338 Potential Issue API: SDKCheck of <android.content.pm.PermissionInfo: int getProtectionFlags()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.pm.PermissionInfoCompat: int getProtectionFlags(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtectionFlags()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 339 Potential Issue API: SDKCheck of <android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.tutao.tutanota.push.BootBroadcastReceiver dummyMainMethod_de_tutao_tutanota_push_BootBroadcastReceiver(android.content.Intent)>[]--><de.tutao.tutanota.push.BootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 340 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addMessage(android.app.Notification.MessagingStyle.Message)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addMessage(android.app.Notification.MessagingStyle.Message)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 341 Potential Issue API: SDKCheck of <android.view.MenuItem: android.content.res.ColorStateList getIconTintList()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.content.res.ColorStateList getIconTintList()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)> to <android.view.MenuItem: android.content.res.ColorStateList getIconTintList()>has compatibility isssues！
-----------------------------------------
crashApis:103
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 342 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList getAdjustedDefault()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getAdjustedDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 343 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 344 Potential Issue API: SDKCheck of <android.view.View: void addOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewCompat: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>[[-i0 < 28]]--><android.view.View: void addOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 345 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person build()> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 346 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)>[[-$i0 < 23]]--><android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 347 Potential Issue API: SDKCheck of <android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()>[[try]]--><android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 348 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void removeAllDynamicShortcuts()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void removeAllDynamicShortcuts()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 349 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean setLayoutDirection(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 23
Good road: <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 350 Potential Issue API: SDKCheck of <android.location.LocationManager: boolean isLocationEnabled()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)>[[-$i0 < 28]]--><android.location.LocationManager: boolean isLocationEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 351 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: java.lang.String getResPackage()> is checking!!!
The life time of api is [28,31]
12call roads:
0 Mainhead roads:
12 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26], [-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26]][[-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
i0 < 26
-$yysi0 < 26
try
Good road with try: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26], [-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 26
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-i0 < 24
-i0 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i1 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
$i0 < 26
try
Good road with try: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 26
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 25
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: java.lang.String toString()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 25
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
containsStatic:true
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 352 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: int getBreakStrategy()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: int getBreakStrategy()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: int getBreakStrategy()>has compatibility isssues！
-----------------------------------------
crashApis:104
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 353 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 354 Potential Issue API: SDKCheck of <android.app.Notification: long getTimeoutAfter()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.app.NotificationCompat: long getTimeoutAfter(android.app.Notification)>[[-$i1 < 26]]--><android.app.Notification: long getTimeoutAfter()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 355 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeMaxTextSize()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeMaxTextSize(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeMaxTextSize()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 356 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetTop()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetTop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 357 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 358 Potential Issue API: SDKCheck of <android.view.View: void setScrollIndicators(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int)>[[-$i1 < 23]]--><android.view.View: void setScrollIndicators(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 359 Potential Issue API: SDKCheck of <android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>[[-$i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 360 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 23
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int)>[[-$i4 < 23]]--><android.app.ActivityOptions: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 361 Potential Issue API: SDKCheck of <android.app.Activity: android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.app.ActivityCompat: androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)>[]--><androidx.core.view.DragAndDropPermissionsCompat: androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent)>[[-i0 < 24]]--><android.app.Activity: android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 362 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: int getResId()> is checking!!!
The life time of api is [28,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
try
Good road with try: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[[try]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: java.lang.String toString()>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 363 Potential Issue API: SDKCheck of <android.view.View: void addKeyboardNavigationClusters(java.util.Collection,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)>[[-$i1 < 26]]--><android.view.View: void addKeyboardNavigationClusters(java.util.Collection,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 364 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 365 Potential Issue API: SDKCheck of <android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
-i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
-i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 366 Potential Issue API: SDKCheck of <android.content.pm.PackageInfo: long getLongVersionCode()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 28
Good road: <androidx.core.content.pm.PackageInfoCompat: long getLongVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 367 Potential Issue API: SDKCheck of <android.text.Html: java.lang.String toHtml(android.text.Spanned,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)>[[-$i1 < 24]]--><android.text.Html: java.lang.String toHtml(android.text.Spanned,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 368 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 369 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetBottom()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetBottom()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 370 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: int getType()> is checking!!!
The life time of api is [28,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
crashApis numbers:104
crashApis numbers in main road:3
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 18 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 19 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 20 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 21 this app may have error api use(at least): 96 and error api roads: 110
On Android Version 22 this app may have error api use(at least): 93 and error api roads: 96
On Android Version 23 this app may have error api use(at least): 77 and error api roads: 80
On Android Version 24 this app may have error api use(at least): 66 and error api roads: 68
On Android Version 25 this app may have error api use(at least): 52 and error api roads: 54
On Android Version 26 this app may have error api use(at least): 20 and error api roads: 21
On Android Version 27 this app may have error api use(at least): 20 and error api roads: 21
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 6 and error api roads: 6
