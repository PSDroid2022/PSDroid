/home/ys/桌面/CompactDroid（复件）/dataset2/Open_Pet_Food_Facts.apk
Entry Points[openfoodfacts.github.scrachx.openfood.features.welcome.WelcomeActivity, androidx.core.content.FileProvider, androidx.work.impl.WorkManagerInitializer, openfoodfacts.github.scrachx.openfood.features.product.view.CalculateDetailsActivity, openfoodfacts.github.scrachx.openfood.features.ImagesSelectActivity, openfoodfacts.github.scrachx.openfood.features.scan.ContinuousScanActivity, openfoodfacts.github.scrachx.openfood.utils.GenericFileProvider, io.sentry.android.core.SentryInitProvider, openfoodfacts.github.scrachx.openfood.features.ImageZoomActivity, openfoodfacts.github.scrachx.openfood.features.LoginActivity, com.journeyapps.barcodescanner.CaptureActivity, androidx.work.impl.background.systemjob.SystemJobService, openfoodfacts.github.scrachx.openfood.features.additives.AdditiveListActivity, openfoodfacts.github.scrachx.openfood.features.product.view.ProductViewActivity, androidx.lifecycle.ProcessLifecycleOwnerInitializer, openfoodfacts.github.scrachx.openfood.features.MainActivity, openfoodfacts.github.scrachx.openfood.features.scanhistory.ScanHistoryActivity, com.mikepenz.iconics.IconicsContentProvider, openfoodfacts.github.scrachx.openfood.features.productlist.ProductListActivity, openfoodfacts.github.scrachx.openfood.features.categories.activity.CategoryActivity, openfoodfacts.github.scrachx.openfood.features.search.ProductSearchActivity, openfoodfacts.github.scrachx.openfood.features.compare.ProductCompareActivity, androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver, com.squareup.picasso.PicassoProvider, openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditActivity, androidx.room.MultiInstanceInvalidationService, androidx.work.impl.foreground.SystemForegroundService, openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity, openfoodfacts.github.scrachx.openfood.features.productlists.ProductListsActivity, androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver, openfoodfacts.github.scrachx.openfood.features.splash.SplashActivity, openfoodfacts.github.scrachx.openfood.app.OFFApplication, androidx.work.impl.background.systemalarm.SystemAlarmService, com.theartofdev.edmodo.cropper.CropImageActivity, openfoodfacts.github.scrachx.openfood.utils.SearchSuggestionProvider, androidx.work.impl.diagnostics.DiagnosticsReceiver]
FllowDroidcallgraph size:28838
Soot started on Mon Jul 11 09:56:15 CST 2022
Soot finished on Mon Jul 11 09:57:32 CST 2022
Soot has run for 1 min. 16 sec.
Found 3 additional DEX files. Now visiting them one by one.
Soot started on Mon Jul 11 09:57:32 CST 2022
StaticCheck:<org.greenrobot.eventbus.util.ErrorDialogManager: boolean isSupportActivity(android.app.Activity)>$yysi0 < 11
Soot finished on Mon Jul 11 09:59:04 CST 2022
Soot has run for 1 min. 31 sec.
Soot started on Mon Jul 11 09:59:04 CST 2022
StaticCheck:<androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean viewIsOpaque(android.view.View)>i0 < 18
StaticCheck:<androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>$yysi0 < 19
StaticCheck:<androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>$yysi0 < 28
StaticCheck:<androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS>$yysi0 < 19
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>i0 < 25
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>$yysi0 < 26
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>i0 < 26
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>i0 < 25
StaticCheck:<com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>i0 >= 17
StaticCheck:<androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>i0 < 16
StaticCheck:<androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)>$yysi0 < 28
StaticCheck:<androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>$yysi0 > 20
StaticCheck:<androidx.work.impl.constraints.trackers.NetworkStateTracker: boolean isNetworkCallbackSupported()>$yysi0 < 24
StaticCheck:<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)>$yysi0 < 24
StaticCheck:<androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)>i0 < 23
StaticCheck:<androidx.core.graphics.PaintCompat: boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat)>i0 < 29
StaticCheck:<androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>i0 < 21
StaticCheck:<androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>i0 < 16
StaticCheck:<androidx.room.RoomDatabase$JournalMode: boolean isLowRamDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP>$yysi0 < 21
StaticCheck:<androidx.transition.TransitionUtils: boolean HAS_IS_ATTACHED_TO_WINDOW>$yysi0 < 19
StaticCheck:<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>i0 < 22
StaticCheck:<androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>$yysi0 < 24
StaticCheck:<androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)>$yysi0 < 24
StaticCheck:<androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>i0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>i0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>$yysi1 < 21
StaticCheck:<androidx.core.graphics.BitmapCompat: boolean hasMipMap(android.graphics.Bitmap)>$yysi0 < 18
StaticCheck:<androidx.documentfile.provider.DocumentFile: boolean isDocumentUri(android.content.Context,android.net.Uri)>$yysi0 < 19
StaticCheck:<androidx.work.impl.utils.EnqueueRunnable: boolean enqueueWorkWithPrerequisites(androidx.work.impl.WorkManagerImpl,java.util.List,java.lang.String[],java.lang.String,androidx.work.ExistingWorkPolicy)>i1 < 23
StaticCheck:<androidx.appcompat.widget.AppCompatPopupWindow: boolean COMPAT_OVERLAP_ANCHOR>$yysi0 >= 21
StaticCheck:<androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)>i1 < 19
StaticCheck:<androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>$yysi0 >= 15
StaticCheck:<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>$yysi0 < 23
StaticCheck:<androidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)>$yysi0 < 21
StaticCheck:<com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE>$yysi0 < 21
StaticCheck:<androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)>i0 < 23
StaticCheck:<androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST>$yysi0 == 18
leftOp<androidx.databinding.ViewDataBinding: int SDK_INT>
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastN()>$yysi0 < 24
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastNMR1()>$yysi0 < 25
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastO()>$yysi0 < 26
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastOMR1()>$yysi0 < 27
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastP()>$yysi0 < 28
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastQ()>$yysi0 < 29
StaticCheck:<androidx.core.view.MarginLayoutParamsCompat: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)>$yysi0 < 17
StaticCheck:<androidx.print.PrintHelper: boolean PRINT_ACTIVITY_RESPECTS_ORIENTATION>$yysi0 < 20
StaticCheck:<androidx.print.PrintHelper: boolean systemSupportsPrint()>$yysi0 < 19
StaticCheck:<com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean IS_LOLLIPOP>$yysi0 < 21
StaticCheck:<androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>$yysi0 < 19
StaticCheck:<androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>$yysi0 < 19
StaticCheck:<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(android.view.ScaleGestureDetector)>$yysi0 < 19
StaticCheck:<com.google.android.material.internal.CollapsingTextHelper: boolean USE_SCALING_TEXTURE>$yysi0 >= 18
StaticCheck:<androidx.transition.GhostViewHolder: boolean isOnTop(android.view.View,android.view.View)>i1 < 21
StaticCheck:<androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<androidx.core.app.NotificationCompat: boolean getAllowSystemGeneratedContextualActions(android.app.Notification)>$yysi0 < 29
StaticCheck:<androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>$yysi0 < 20
StaticCheck:<androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)>$yysi0 < 20
StaticCheck:<com.theartofdev.edmodo.cropper.CropImage: boolean isExplicitCameraPermissionRequired(android.content.Context)>$yysi0 < 23
StaticCheck:<com.theartofdev.edmodo.cropper.CropImage: boolean isReadExternalStoragePermissionsRequired(android.content.Context,android.net.Uri)>$yysi0 < 23
StaticCheck:<androidx.legacy.app.ActionBarDrawerToggle: boolean assumeMaterial(android.content.Context)>$yysi0 < 21
StaticCheck:<androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>i0 >= 21
StaticCheck:<com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>$yysi0 >= 18
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])>$yysi2 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])>$yysi4 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)>$yysi0 < 15
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)>$yysi0 < 18
StaticCheck:<androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isLayoutDirectionResolved(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)>$yysi0 < 17
StaticCheck:<androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>$yysi1 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>$yysi1 < 24
StaticCheck:<androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>$yysi1 < 21
StaticCheck:<androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>$yysi0 == 26
StaticCheck:<androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>i0 < 28
StaticCheck:<androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>i0 < 28
StaticCheck:<com.google.android.material.snackbar.BaseTransientBottomBar: boolean USE_OFFSET_API>$yysi0 < 16
StaticCheck:<androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>i1 < 25
StaticCheck:<androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>i1 < 28
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>$yysi0 < 21
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>$yysi0 < 19
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>i1 < 23
StaticCheck:<androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE>$yysi0 < 27
StaticCheck:<androidx.core.os.TraceCompat: boolean isEnabled()>i0 < 29
Soot finished on Mon Jul 11 10:00:34 CST 2022
Soot has run for 1 min. 30 sec.
Soot started on Mon Jul 11 10:00:34 CST 2022
Soot finished on Mon Jul 11 10:00:43 CST 2022
Soot has run for 0 min. 9 sec.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 16
Declared Target Sdk version is: 30
Declared Max Sdk version is: -1
Collected 275 Android APIs in the primary DEX file
Collected 4654 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()> is checking!!!
The life time of api is [23,31]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#1.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void access$checkAllValues(openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void checkAllValues()>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void checkValue(openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: openfoodfacts.github.scrachx.openfood.utils.ValueState checkValue(openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView,float)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: openfoodfacts.github.scrachx.openfood.utils.ValueState checkPerServing(openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView)>[]--><openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView: void showError(java.lang.String)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#2.the call statck between class <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void access$checkAllValues(openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setBackgroundColor(int)>[]--><com.google.android.material.button.MaterialButtonHelper: void setBackgroundColor(int)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#3.the call statck between class <com.google.android.material.button.MaterialButton: void setBackgroundColor(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#5.the call statck between class <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setBackgroundResource(int)>[]--><com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>[]--><com.google.android.material.button.MaterialButtonHelper: void setBackgroundOverwritten()>[]--><com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#6.the call statck between class <com.google.android.material.button.MaterialButton: void setBackgroundResource(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButtonToggleGroup: void onViewRemoved(android.view.View)>[]--><com.google.android.material.button.MaterialButtonToggleGroup: void updateChildShapes()>[]--><com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>[]--><com.google.android.material.button.MaterialButtonHelper: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>[]--><com.google.android.material.button.MaterialButtonHelper: void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#7.the call statck between class <com.google.android.material.button.MaterialButtonToggleGroup: void onViewRemoved(android.view.View)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#8.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void access$checkValueAndRelated(openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment,openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void checkValueAndRelated(openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void checkValue(openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: openfoodfacts.github.scrachx.openfood.utils.ValueState checkValue(openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView,float)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: openfoodfacts.github.scrachx.openfood.utils.ValueState checkPerServing(openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView)>[]--><openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView: void showError(java.lang.String)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#9.the call statck between class <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void access$checkValueAndRelated(openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment,openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#10.the call statck between class <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTouchDelegateInfo(android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat)>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo: void setTouchDelegateInfo(android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)> is checking!!!
The life time of api is [17,31]
7call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.LoginActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_LoginActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.LoginActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.categories.activity.CategoryActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_categories_activity_CategoryActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.categories.activity.CategoryActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.product.view.ProductViewActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_product_view_ProductViewActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.product.view.ProductViewActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.productlist.ProductListActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_productlist_ProductListActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.productlist.ProductListActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.search.ProductSearchActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_search_ProductSearchActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.search.ProductSearchActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.MainActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_MainActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.MainActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.product.view.CalculateDetailsActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_product_view_CalculateDetailsActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.product.view.CalculateDetailsActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.scanhistory.ScanHistoryActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_scanhistory_ScanHistoryActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.scanhistory.ScanHistoryActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.compare.ProductCompareActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_compare_ProductCompareActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.compare.ProductCompareActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.ImageZoomActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_ImageZoomActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.ImageZoomActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.additives.AdditiveListActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_additives_AdditiveListActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.additives.AdditiveListActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_ImagesManageActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.productlists.ProductListsActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_productlists_ProductListsActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.productlists.ProductListsActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.splash.SplashActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_splash_SplashActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.splash.SplashActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
!!!this api will crash on sdk 16 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.ImagesSelectActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_ImagesSelectActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesSelectActivity: void onCreate(android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.shared.BaseActivity: void setContentView(android.view.View)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>has compatibility isssues！
-----------------------------------------
6 Packageshead roads:
!!!this api will crash on sdk 16 
Error road: <openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
#1.the call statck between class <openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context,java.lang.String)> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 
Error road: <openfoodfacts.github.scrachx.openfood.features.welcome.WelcomeActivity: void attachBaseContext(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
#2.the call statck between class <openfoodfacts.github.scrachx.openfood.features.welcome.WelcomeActivity: void attachBaseContext(android.content.Context)> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 
Error road: <openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(java.util.Locale)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
#3.the call statck between class <openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(java.util.Locale)> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 
Error road: <openfoodfacts.github.scrachx.openfood.features.scan.ContinuousScanActivity: void attachBaseContext(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
#4.the call statck between class <openfoodfacts.github.scrachx.openfood.features.scan.ContinuousScanActivity: void attachBaseContext(android.content.Context)> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 
Error road: <openfoodfacts.github.scrachx.openfood.features.MainActivity: void attachBaseContext(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
#5.the call statck between class <openfoodfacts.github.scrachx.openfood.features.MainActivity: void attachBaseContext(android.content.Context)> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 
Error road: <openfoodfacts.github.scrachx.openfood.features.search.ProductSearchActivity: void attachBaseContext(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context onCreate(android.content.Context)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.LocaleHelper: android.content.Context setLocale(android.content.Context,java.util.Locale)>[]--><android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
#6.the call statck between class <openfoodfacts.github.scrachx.openfood.features.search.ProductSearchActivity: void attachBaseContext(android.content.Context)> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>has compatibility isssues！
-----------------------------------------
crashApis:2
crashApisInMain:1
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.net.TrafficStatsCompat: void tagDatagramSocket(java.net.DatagramSocket)>[[-i0 < 24]]--><android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setLegacyStreamType(int)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)>[[-$i1 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setLegacyStreamType(int)>
One road protect good!
-$i0 < 21
Good road: <androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setLegacyStreamType(int)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.view.View: void setLayoutDirection(int)> is checking!!!
The life time of api is [17,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 16 
Error road: <androidx.viewpager2.widget.ViewPager2: void setLayoutDirection(int)>[]--><android.view.View: void setLayoutDirection(int)>
#1.the call statck between class <androidx.viewpager2.widget.ViewPager2: void setLayoutDirection(int)> to <android.view.View: void setLayoutDirection(int)>has compatibility isssues！
-----------------------------------------
-$i1 < 17
Good road: <androidx.core.view.ViewCompat: void setLayoutDirection(android.view.View,int)>[[-$i1 < 17]]--><android.view.View: void setLayoutDirection(int)>
One road protect good!
-$i1 < 17
Good road: <com.google.android.material.chip.Chip: void setLayoutDirection(int)>[[-$i1 < 17]]--><android.view.View: void setLayoutDirection(int)>
One road protect good!
crashApis:4
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.view.ViewGroup: boolean getClipToPadding()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i6 < 21
Good road: <androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)>[[-i6 < 21]]--><android.view.ViewGroup: boolean getClipToPadding()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [29,31]
8446call roads:
1 Mainhead roads:
too lang!
8445 Packageshead roads:
Roads number exceed, exit!8445
#################################################
N 12 Potential Issue API: SDKCheck of <android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
23call roads:
1 Mainhead roads:
i3 < 21
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.MainActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_MainActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.MainActivity: void onCreate(android.os.Bundle)>[]--><com.mikepenz.materialdrawer.AccountHeaderBuilder: com.mikepenz.materialdrawer.AccountHeader build()>[[i3 < 21]]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
22 Packageshead roads:
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.AbstractDrawerItem: int getSelectedColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.AbstractDrawerItem: int getSelectedTextColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.AbstractDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.Drawer: void addStickyFooterItemAtPosition(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,int)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void rebuildStickyFooterView(com.mikepenz.materialdrawer.DrawerBuilder)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileSettingDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileSettingDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ProfileSettingDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ProfileSettingDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.AbstractDrawerItem: int getSelectedColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.Drawer: void addStickyFooterItem(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void rebuildStickyFooterView(com.mikepenz.materialdrawer.DrawerBuilder)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer buildForFragment()>[]--><com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer buildView()>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractSwitchableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractSwitchableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.Drawer: void removeStickyFooterItemAtPosition(int)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void rebuildStickyFooterView(com.mikepenz.materialdrawer.DrawerBuilder)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.util.DrawerItemViewHelper: android.view.View build()>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.Drawer: void updateStickyFooterItem(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem)>[]--><com.mikepenz.materialdrawer.Drawer: void updateStickyFooterItemAtPosition(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,int)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void rebuildStickyFooterView(com.mikepenz.materialdrawer.DrawerBuilder)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractToggleableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractToggleableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.DividerDrawerItem: void bindView(com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer append(com.mikepenz.materialdrawer.Drawer)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.DrawerBuilder: com.mikepenz.materialdrawer.Drawer append(com.mikepenz.materialdrawer.Drawer)>[]--><com.mikepenz.materialdrawer.DrawerBuilder: void createContent()>[]--><com.mikepenz.materialdrawer.DrawerUtils: void handleFooterView(com.mikepenz.materialdrawer.DrawerBuilder,android.view.View$OnClickListener)>[]--><com.mikepenz.materialdrawer.DrawerUtils: android.view.ViewGroup buildStickyDrawerItemFooter(android.content.Context,com.mikepenz.materialdrawer.DrawerBuilder,android.view.View$OnClickListener)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.MiniDrawerItem: void bindView(com.mikepenz.materialdrawer.model.MiniDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.MiniDrawerItem: void bindView(com.mikepenz.materialdrawer.model.MiniDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SecondaryDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.Drawer: void setStickyFooterItemAtPosition(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,int)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void rebuildStickyFooterView(com.mikepenz.materialdrawer.DrawerBuilder)>[]--><com.mikepenz.materialdrawer.DrawerUtils: void addStickyFooterDivider(android.content.Context,android.view.ViewGroup)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SecondarySwitchDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ContainerDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ContainerDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SecondaryToggleDrawerItem: int getColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SectionDrawerItem: void bindView(com.mikepenz.materialdrawer.model.SectionDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.SectionDrawerItem: void bindView(com.mikepenz.materialdrawer.model.SectionDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getSelectedIconColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 23
Good road: <com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableBadgeDrawerItem$ViewHolder,java.util.List)>[]--><com.mikepenz.materialdrawer.model.BaseDrawerItem: int getIconColor(android.content.Context)>[]--><com.mikepenz.materialdrawer.holder.ColorHolderKt: int applyColor(com.mikepenz.materialdrawer.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int)>[]--><com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>[]--><com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>[]--><androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
23call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.content.Context: java.io.File getNoBackupFilesDir()> is checking!!!
The life time of api is [21,31]
8448call roads:
1 Mainhead roads:
too lang!
8447 Packageshead roads:
Roads number exceed, exit!8447
#################################################
N 14 Potential Issue API: SDKCheck of <android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)> is checking!!!
The life time of api is [17,31]
25call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><openfoodfacts.github.scrachx.openfood.features.ImageZoomActivity: void onCreate(android.os.Bundle)>[[$i0 < 21]]--><openfoodfacts.github.scrachx.openfood.features.ImageZoomActivity: void loadImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><openfoodfacts.github.scrachx.openfood.features.ImageZoomActivity: void onCreate(android.os.Bundle)>[[$i0 < 21]]--><openfoodfacts.github.scrachx.openfood.features.ImageZoomActivity: void loadImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.ImageZoomActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_ImageZoomActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.ImageZoomActivity: void onCreate(android.os.Bundle)>[[$i0 < 21]]--><openfoodfacts.github.scrachx.openfood.features.ImageZoomActivity: void loadImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onCreate(android.os.Bundle)>[[$i1 < 21]]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onRefresh(boolean)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void loadImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onCreate(android.os.Bundle)>[[$i1 < 21]]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onRefresh(boolean)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void loadImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
$i1 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity dummyMainMethod_openfoodfacts_github_scrachx_openfood_features_ImagesManageActivity(android.content.Intent)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onCreate(android.os.Bundle)>[[$i1 < 21]]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onRefresh(boolean)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void loadImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
24 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.view.summary.IngredientAnalysisTagsAdapter: void onBindViewHolder(openfoodfacts.github.scrachx.openfood.features.product.view.summary.IngredientAnalysisTagsAdapter$IngredientAnalysisTagsViewHolder,int)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void access$onImageTypeChanged(openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onImageTypeChanged()>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onRefresh(boolean)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void loadImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment$setProductLanguage$2: void accept(openfoodfacts.github.scrachx.openfood.models.ProductState)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditActivity: void updateLanguage()>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void loadIngredientsImage()>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment$setProductLanguage$2: void accept(openfoodfacts.github.scrachx.openfood.models.ProductState)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditActivity: void setIngredients(java.lang.String,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void setIngredients(java.lang.String,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void loadIngredientsImage()>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void access$onLanguageChanged(openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onLanguageChanged()>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onRefresh(boolean)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void loadImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void preFillProductValues()>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void loadIngredientsImage()>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void preFillValuesForOffline()>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void setProductLanguage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void loadFrontImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void preFillValuesFromOffline()>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void setProductLanguage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void loadFrontImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void preFillProductValues(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void setProductLanguage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void loadFrontImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.view.summary.SummaryProductFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.product.view.summary.SummaryProductFragment: void refreshView(openfoodfacts.github.scrachx.openfood.models.ProductState)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.view.nutrition.NutritionProductFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.product.view.nutrition.NutritionProductFragment: void refreshView(openfoodfacts.github.scrachx.openfood.models.ProductState)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.view.environment.EnvironmentProductFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void access$setProductLanguage(openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void setProductLanguage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment: void loadFrontImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void access$loadImage(openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void loadImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void access$onRefresh(openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity,boolean)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void onRefresh(boolean)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesManageActivity: void loadImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.adapters.ProductsRecyclerViewAdapter: void onBindViewHolder(openfoodfacts.github.scrachx.openfood.features.adapters.ProductsRecyclerViewAdapter$ProductsListViewHolder,int)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.view.summary.SummaryProductFragment: void onRefresh()>[]--><openfoodfacts.github.scrachx.openfood.features.product.view.summary.SummaryProductFragment: void refreshView(openfoodfacts.github.scrachx.openfood.models.ProductState)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.ImagesSelectActivity: void access$setSelectedImage(openfoodfacts.github.scrachx.openfood.features.ImagesSelectActivity,int)>[]--><openfoodfacts.github.scrachx.openfood.features.ImagesSelectActivity: void setSelectedImage(int)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.adapters.ProductImagesSelectionAdapter: void onBindViewHolder(openfoodfacts.github.scrachx.openfood.features.adapters.ProductImagesSelectionAdapter$CustomViewHolder,int)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.scanhistory.ScanHistoryAdapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>[]--><openfoodfacts.github.scrachx.openfood.features.scanhistory.ScanHistoryAdapter: void onBindViewHolder(openfoodfacts.github.scrachx.openfood.features.scanhistory.ScanHistoryHolder,int)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.view.ingredients.IngredientsProductFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.product.view.ingredients.IngredientsProductFragment: void refreshView(openfoodfacts.github.scrachx.openfood.models.ProductState)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditActivity$performOCR$2: void accept(com.fasterxml.jackson.databind.JsonNode)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void setIngredients(java.lang.String,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void loadIngredientsImage()>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditOverviewFragment$selectProductLanguage$1: boolean onSelection(com.afollestad.materialdialogs.MaterialDialog,android.view.View,int,java.lang.CharSequence)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditActivity: void setIngredients(java.lang.String,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void setIngredients(java.lang.String,java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditIngredientsFragment: void loadIngredientsImage()>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void preFillProductValues()>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void loadNutritionImage()>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void loadNutritionsImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void preFillValuesFromOffline()>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void loadNutritionsImage(java.lang.String)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.view.photos.ProductPhotosAdapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>[]--><openfoodfacts.github.scrachx.openfood.features.product.view.photos.ProductPhotosAdapter: void onBindViewHolder(openfoodfacts.github.scrachx.openfood.features.product.view.photos.ProductPhotoViewHolder,int)>[]--><openfoodfacts.github.scrachx.openfood.features.product.view.photos.ProductPhotoViewHolder: void setImage(java.lang.String,java.lang.String,android.app.Activity)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><openfoodfacts.github.scrachx.openfood.features.compare.ProductCompareAdapter: void onBindViewHolder(openfoodfacts.github.scrachx.openfood.features.compare.ProductComparisonViewHolder,int)>[[i1 < 23]]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><openfoodfacts.github.scrachx.openfood.features.compare.ProductCompareAdapter: void onBindViewHolder(openfoodfacts.github.scrachx.openfood.features.compare.ProductComparisonViewHolder,int)>[[i1 < 23]]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
i1 < 23
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.compare.ProductCompareAdapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>[]--><openfoodfacts.github.scrachx.openfood.features.compare.ProductCompareAdapter: void onBindViewHolder(openfoodfacts.github.scrachx.openfood.features.compare.ProductComparisonViewHolder,int)>[[i1 < 23]]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]
###Multi invoking in one method, need manual check!!!--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try]][[i0 >= 17]]
try
Good road with try: <openfoodfacts.github.scrachx.openfood.features.product.view.ingredients_analysis.IngredientsWithTagDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><openfoodfacts.github.scrachx.openfood.utils.Utils: com.squareup.picasso.Picasso picassoBuilder(android.content.Context)>[]--><com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>[]--><com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>[]--><com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>[[try], [i0 >= 17]]--><android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
One road protect good!
containsStatic:false
containsTry:true
25call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.app.Activity: void requestPermissions(java.lang.String[],int)> is checking!!!
The life time of api is [23,31]
8446call roads:
1 Mainhead roads:
too lang!
8445 Packageshead roads:
Roads number exceed, exit!8445
#################################################
N 16 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setTint(int)> is checking!!!
The life time of api is [21,31]
20call roads:
0 Mainhead roads:
20 Packageshead roads:
$i1 != 21
$i1 < 21
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void draw(android.graphics.Canvas)>[[$i1 != 21]]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#1.the call statck between class <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void draw(android.graphics.Canvas)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
$i1 < 21
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <openfoodfacts.github.scrachx.openfood.features.product.view.summary.SummaryProductFragment: void access$onProductQuestionClick(openfoodfacts.github.scrachx.openfood.features.product.view.summary.SummaryProductFragment)>[]--><openfoodfacts.github.scrachx.openfood.features.product.view.summary.SummaryProductFragment: void onProductQuestionClick()>[]--><openfoodfacts.github.scrachx.openfood.utils.QuestionDialog: void show()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#2.the call statck between class <openfoodfacts.github.scrachx.openfood.features.product.view.summary.SummaryProductFragment: void access$onProductQuestionClick(openfoodfacts.github.scrachx.openfood.features.product.view.summary.SummaryProductFragment)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
$i1 < 21
Good road: <com.google.android.material.button.MaterialButton: void <init>(android.content.Context)>[]--><com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.button.MaterialButtonHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable createBackground()>[[-$yysi0 < 21]]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
$i1 < 21
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void access$checkAllValues(openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void checkAllValues()>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void checkValue(openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: openfoodfacts.github.scrachx.openfood.utils.ValueState checkValue(openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView,float)>[]--><openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: openfoodfacts.github.scrachx.openfood.utils.ValueState checkPerServing(openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView)>[]--><openfoodfacts.github.scrachx.openfood.utils.CustomValidatingEditTextView: void showError(java.lang.String)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#4.the call statck between class <openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment: void access$checkAllValues(openfoodfacts.github.scrachx.openfood.features.product.edit.ProductEditNutritionFactsFragment)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
$i1 < 21
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#5.the call statck between class <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
$i1 < 21
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#6.the call statck between class <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
$i1 < 21
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#8.the call statck between class <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
$i1 < 21
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#9.the call statck between class <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
$i1 < 21
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#10.the call statck between class <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.widget.TextView: int getBreakStrategy()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23]][[i0 < 28]]
-i0 < 23
i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]--><android.widget.TextView: int getBreakStrategy()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setTouchModal(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.graphics.Paint: java.lang.String getFontVariationSettings()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21]][[$i0 < 17]][[-$i0 < 26]][[$i0 < 24]]
$i0 < 21
$i0 < 17
-$i0 < 26
$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]--><android.graphics.Paint: java.lang.String getFontVariationSettings()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.os.Environment: java.lang.String getStorageState(java.io.File)> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.os.EnvironmentCompat: java.lang.String getStorageState(java.io.File)>[[-i0 < 19], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.os.EnvironmentCompat: java.lang.String getStorageState(java.io.File)>[[-i0 < 19]][[i0 < 21]]
-i0 < 19
i0 < 21
Good road: <androidx.core.os.EnvironmentCompat: java.lang.String getStorageState(java.io.File)>[[-i0 < 19], [i0 < 21]]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.os.Trace: boolean isEnabled()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 29
Good road: <androidx.core.os.TraceCompat: boolean isEnabled()>[[-i0 < 29]]--><android.os.Trace: boolean isEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()>[]--><android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()> to <android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.app.RemoteAction: boolean shouldShowIcon()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[[-$i0 < 28]]--><android.app.RemoteAction: boolean shouldShowIcon()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color valueOf(long)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color toColor(long)>[]--><android.graphics.Color: android.graphics.Color valueOf(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color toColor(long)> to <android.graphics.Color: android.graphics.Color valueOf(long)>has compatibility isssues！
-----------------------------------------
crashApis:7
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.app.NotificationChannel: int getImportance()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
$i0 >= 26
Good road: <androidx.browser.trusted.TrustedWebActivityServiceConnection: boolean areNotificationsEnabled(java.lang.String)>[]--><androidx.browser.trusted.TrustedWebActivityService$1: android.os.Bundle areNotificationsEnabled(android.os.Bundle)>[]--><androidx.browser.trusted.TrustedWebActivityService: boolean onAreNotificationsEnabled(java.lang.String)>[[$i0 >= 26]]--><androidx.browser.trusted.NotificationApiHelperForO: boolean isChannelEnabled(android.app.NotificationManager,java.lang.String)>[]--><android.app.NotificationChannel: int getImportance()>
One road protect good!
-i1 < 26
Good road: <androidx.browser.trusted.TrustedWebActivityServiceConnection: boolean notify(java.lang.String,int,android.app.Notification,java.lang.String)>[]--><androidx.browser.trusted.TrustedWebActivityService$1: android.os.Bundle notifyNotificationWithChannel(android.os.Bundle)>[]--><androidx.browser.trusted.TrustedWebActivityService: boolean onNotifyNotificationWithChannel(java.lang.String,int,android.app.Notification,java.lang.String)>[[-i1 < 26]]--><androidx.browser.trusted.NotificationApiHelperForO: android.app.Notification copyNotificationOntoChannel(android.content.Context,android.app.NotificationManager,android.app.Notification,java.lang.String,java.lang.String)>[]--><android.app.NotificationChannel: int getImportance()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.view.View: boolean isInLayout()> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 18
Good road: <androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)>[[-$i0 < 18]]--><android.view.View: boolean isInLayout()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.transition.Transition: android.transition.Transition removeTarget(android.view.View)> is checking!!!
The life time of api is [19,31]
8448call roads:
1 Mainhead roads:
too lang!
8447 Packageshead roads:
Roads number exceed, exit!8447
#################################################
N 30 Potential Issue API: SDKCheck of <android.widget.AbsListView: void scrollListBy(int)> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 19
Good road: <androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)>[]--><androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)>[[-i1 < 19]]--><android.widget.AbsListView: void scrollListBy(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.view.ViewGroup: boolean isTransitionGroup()> is checking!!!
The life time of api is [21,31]
8446call roads:
1 Mainhead roads:
too lang!
8445 Packageshead roads:
Roads number exceed, exit!8445
#################################################
N 32 Potential Issue API: SDKCheck of <android.view.View: void setAccessibilityHeading(boolean)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 28
Good road: <androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[-i0 < 28]]--><android.view.View: void setAccessibilityHeading(boolean)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)>[]--><android.view.View: void setAccessibilityHeading(boolean)>
#2.the call statck between class <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)> to <android.view.View: void setAccessibilityHeading(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewCompat: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>[[-i0 < 28]]--><android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <android.transition.Transition: java.util.List getTargetIds()> is checking!!!
The life time of api is [19,31]
8447call roads:
1 Mainhead roads:
too lang!
8446 Packageshead roads:
Roads number exceed, exit!8446
#################################################
N 35 Potential Issue API: SDKCheck of <android.view.View: boolean isPaddingRelative()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 17
Good road: <com.google.android.material.snackbar.SnackbarContentLayout: void onMeasure(int,int)>[]--><com.google.android.material.snackbar.SnackbarContentLayout: boolean updateViewsWithinLayout(int,int,int)>[]--><com.google.android.material.snackbar.SnackbarContentLayout: void updateTopBottomPadding(android.view.View,int,int)>[]--><androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)>[[-$i0 < 17]]--><android.view.View: boolean isPaddingRelative()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <android.view.ViewGroup: int getNestedScrollAxes()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewGroupCompat: int getNestedScrollAxes(android.view.ViewGroup)>[[-$i0 < 21]]--><android.view.ViewGroup: int getNestedScrollAxes()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: void <init>(java.util.Map)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: void <init>(java.util.Map)>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: void <init>(java.util.Map)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <android.app.RemoteInput: int getResultsSource(android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]
-i1 < 20
i0 < 26
-i0 < 28
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]--><android.app.RemoteInput: int getResultsSource(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.view.ViewGroup: int getLayoutMode()> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 18
Good road: <androidx.core.view.ViewGroupCompat: int getLayoutMode(android.view.ViewGroup)>[[-$i0 < 18]]--><android.view.ViewGroup: int getLayoutMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.app.NotificationManager: int getImportance()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationManagerCompat: int getImportance()>[[-$i0 < 24]]--><android.app.NotificationManager: int getImportance()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.widget.TextView: void onRtlPropertiesChanged(int)> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 
Error road: <com.google.android.material.chip.Chip: void onRtlPropertiesChanged(int)>[]--><android.widget.TextView: void onRtlPropertiesChanged(int)>
#1.the call statck between class <com.google.android.material.chip.Chip: void onRtlPropertiesChanged(int)> to <android.widget.TextView: void onRtlPropertiesChanged(int)>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 
Error road: <androidx.browser.trusted.PackageIdentityUtils$Api28Implementation: java.util.List getFingerprintsForPackage(java.lang.String,android.content.pm.PackageManager)>[]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>
#1.the call statck between class <androidx.browser.trusted.PackageIdentityUtils$Api28Implementation: java.util.List getFingerprintsForPackage(java.lang.String,android.content.pm.PackageManager)> to <android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: void <init>()> is checking!!!
The life time of api is [29,31]
8446call roads:
1 Mainhead roads:
too lang!
8445 Packageshead roads:
Roads number exceed, exit!8445
#################################################
N 44 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setDescription(java.lang.String)> is checking!!!
The life time of api is [26,31]
8446call roads:
1 Mainhead roads:
too lang!
8445 Packageshead roads:
Roads number exceed, exit!8445
#################################################
N 45 Potential Issue API: SDKCheck of <android.view.View: android.content.res.ColorStateList getBackgroundTintList()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.transformation.FabTransformationBehavior: void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)>[]--><com.google.android.material.transformation.FabTransformationBehavior: int getBackgroundTint(android.view.View)>[]--><androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)>[[-$i0 < 21]]--><android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]--><android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]--><android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.transition.TransitionSet: void <init>()> is checking!!!
The life time of api is [19,31]
8446call roads:
1 Mainhead roads:
too lang!
8445 Packageshead roads:
Roads number exceed, exit!8445
#################################################
N 47 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setTextDirection(android.text.TextDirectionHeuristic)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setMandatorySystemGestureInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setMandatorySystemGestureInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setMandatorySystemGestureInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <android.util.Range: android.util.Range extend(java.lang.Comparable)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <androidx.core.util.RangeKt: android.util.Range plus(android.util.Range,java.lang.Comparable)>[]--><android.util.Range: android.util.Range extend(java.lang.Comparable)>
#1.the call statck between class <androidx.core.util.RangeKt: android.util.Range plus(android.util.Range,java.lang.Comparable)> to <android.util.Range: android.util.Range extend(java.lang.Comparable)>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View,int)>[[-$i1 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.graphics.Paint: boolean isElegantTextHeight()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 21]]--><android.graphics.Paint: boolean isElegantTextHeight()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: int hashCode()>[[-$i0 < 21]]--><android.graphics.Paint: boolean isElegantTextHeight()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: int getLiveRegion()> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 19
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getLiveRegion()>[[-$i0 < 19]]--><android.view.accessibility.AccessibilityNodeInfo: int getLiveRegion()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.CharSequence getLabel()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.CharSequence getLabel()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.RangeInfo: int getType()> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 19
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int getType()>[[-$i0 < 19]]--><android.view.accessibility.AccessibilityNodeInfo.RangeInfo: int getType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getSystemWindowInsetLeft()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()>[]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
#2.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:true
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.transition.TransitionSet: android.transition.TransitionSet removeTransition(android.transition.Transition)> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 
Error road: <com.google.android.material.transition.platform.TransitionUtils: void maybeRemoveTransition(android.transition.TransitionSet,android.transition.Transition)>[]--><android.transition.TransitionSet: android.transition.TransitionSet removeTransition(android.transition.Transition)>
#1.the call statck between class <com.google.android.material.transition.platform.TransitionUtils: void maybeRemoveTransition(android.transition.TransitionSet,android.transition.Transition)> to <android.transition.TransitionSet: android.transition.TransitionSet removeTransition(android.transition.Transition)>has compatibility isssues！
-----------------------------------------
crashApis:14
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.view.ViewGroup: void setTouchscreenBlocksFocus(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [$i0 < 21], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21]][[$i0 < 21]][[-$i0 < 26]]
i2 < 21
$i0 < 21
-$i0 < 26
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [$i0 < 21], [-$i0 < 26]]--><android.view.ViewGroup: void setTouchscreenBlocksFocus(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface build()> is checking!!!
The life time of api is [26,31]
8446call roads:
1 Mainhead roads:
too lang!
